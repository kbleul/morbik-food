[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"7","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js":"8","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js":"9","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js":"10","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js":"11","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js":"12","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/ThemeContext.js":"13","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/Background.js":"14","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/redditpage.js":"15","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinkrecipecontent.js":"16","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipecontent.js":"17","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/food_subredditlist.js":"18","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinks_subredditlist.js":"19","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/savefavorites_function.js":"20","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/removefavorites_function.js":"21","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksnav.js":"22","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/ThemeToggle.js":"23"},{"size":2669,"mtime":1647177667898,"results":"24","hashOfConfig":"25"},{"size":3526,"mtime":1647177748071,"results":"26","hashOfConfig":"25"},{"size":3926,"mtime":1646936311691,"results":"27","hashOfConfig":"25"},{"size":4257,"mtime":1647086669420,"results":"28","hashOfConfig":"25"},{"size":13349,"mtime":1647086788068,"results":"29","hashOfConfig":"25"},{"size":14145,"mtime":1647089847510,"results":"30","hashOfConfig":"25"},{"size":8061,"mtime":1646939156578,"results":"31","hashOfConfig":"25"},{"size":5891,"mtime":1646939364740,"results":"32","hashOfConfig":"25"},{"size":5313,"mtime":1647087956802,"results":"33","hashOfConfig":"25"},{"size":1042,"mtime":1647176599788,"results":"34","hashOfConfig":"25"},{"size":1134,"mtime":1647175864981,"results":"35","hashOfConfig":"25"},{"size":310,"mtime":1647174364367,"results":"36","hashOfConfig":"25"},{"size":1293,"mtime":1647167452371,"results":"37","hashOfConfig":"25"},{"size":206,"mtime":1647166140701,"results":"38","hashOfConfig":"25"},{"size":219,"mtime":1646755920731,"results":"39","hashOfConfig":"25"},{"size":1213,"mtime":1646400741401,"results":"40","hashOfConfig":"25"},{"size":1137,"mtime":1647177497616,"results":"41","hashOfConfig":"25"},{"size":599,"mtime":1646334802387,"results":"42","hashOfConfig":"25"},{"size":280,"mtime":1646736827112,"results":"43","hashOfConfig":"25"},{"size":1118,"mtime":1646502311196,"results":"44","hashOfConfig":"25"},{"size":782,"mtime":1646733626739,"results":"45","hashOfConfig":"25"},{"size":7225,"mtime":1646762860711,"results":"46","hashOfConfig":"25"},{"size":1912,"mtime":1647165972890,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"165v2a5",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js",["124"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js",["125","126","127"],[],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport RecipePage from './drinksrecipepage'\nimport { Link } from \"react-router-dom\"\nimport loading from \"./imgs/loading.gif\"\n\n\n\nconst Main = ({ navChoice, setChoice, choicetype, set_choicetype, togglerecipe_page, set_togglerecipe_page }) => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontdrink_list, set_frontdrink_list] = useState([]);\n\n  const [recipefor, set_recipefor] = useState(\"\");\n  const [isnav, set_isnav] = useState(\"text-xs font-black bg-white border-2 rounded-full px-6 py-2 mb-2 ml-4\")\n\n  const getCatagories = async () => {\n    try {\n      const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list`);\n      set_catagories(result.data.drinks)\n\n    } catch (e) { console.log(\"Fetch drinks catagory failed ! \" + e) }\n  }\n\n  const getFoods_list = async () => {\n    try {\n      if (choicetype === \"c\") {\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${navChoice}`)\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drinks Found Error\"]) }\n        else { set_frontdrink_list(result.data.drinks) }\n\n      }\n      else if (choicetype === \"g\") {\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?g=${navChoice}`)\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drink Found Error\"]) }\n        else { set_frontdrink_list(result.data.drinks) }\n\n      }\n      else if (choicetype === \"a\") {\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=${navChoice}`)\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drink Found Error\"]) }\n        else { set_frontdrink_list(result.data.drinks) }\n\n      }\n      else {\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${navChoice}`)\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drink Found Error\"]) }\n        else { set_frontdrink_list(result.data.drinks) }\n\n      }\n\n    } catch (e) { console.log(`Fetch ${navChoice} based drinks failed !  ` + e) }\n\n  }\n\n\n  useEffect(() => { getCatagories(); }, [])\n\n  useEffect(() => { getFoods_list(); }, [navChoice])\n\n\n\n  return (\n    <article className=\"ml-4 mt-8 \">\n      <section className=\" \">\n        {\n          catagories.map(item => (\n            <button className=\"  text-xs font-black bg-amber-400 border-0 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 \" key={item.strCategory} onClick={() => { set_choicetype(\"c\"); setChoice(item.strCategory); set_togglerecipe_page(false); }}>{item.strCategory}</button>\n          ))\n        }\n      </section>\n\n      <div className=\"mt-8 flex justify-center\">\n\n        <Link to={`/`} >\n          <button className=\"font-light px-4 hover:bg-amber-200\">Foods</button>\n        </Link>\n\n        <button className=\"ml-8 font-black underline \">Drinks</button>\n\n      </div>\n\n      {togglerecipe_page ? <RecipePage drinkid={recipefor} similardrinks={frontdrink_list} /> :\n      \n      <div>\n      {frontdrink_list.length === 0 ? <div className=\"h-screen flex justify-center items-center\"><img src={loading} alt=\"loading\" /></div> :\n        <section className=\"grid grid-cols-3 gap-2 m-16 ml-10\">\n          {frontdrink_list[0] === \"No Drink Found Error\" ? <div><p>No available drink for this ingrident.</p></div> :\n            frontdrink_list.map(item => (\n              <div className=\"hover:brightness-90\" key={item.idDrink} onClick={() => { set_recipefor(item.idDrink); set_togglerecipe_page(true); }}>\n                <img key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} />\n                <p className=\"font-light text-center\" key={item.strDrink}>{item.strDrink}</p>\n\n              </div>\n            ))\n          }\n        </section>}\n        </div>}\n    </article>\n  )\n}\n\n\nexport default Main\n\n",["128","129"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js",["130"],[],"import { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport list from \"./food_subredditlist\"\nimport list_drink from \"./drinks_subredditlist\"\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\nimport Footer from \"./fotter\"\n\n\nconst SubredditListPage = () => {\n\n    const [reddit, setreddit] = useState([]);\n    const [isfood, set_isfood] = useState(true);\n\n    useEffect(() => {\n\n        let temparr = [];\n        let counter = 0;\n\n        const fetchsubreddit = async (item) => {\n            try {\n                const result = await axios(`https://www.reddit.com/r/${item}/.json`);\n\n                temparr.push(result.data.data.children[0].data);\n\n         if(isfood) {\n                if (temparr.length === 42) { setreddit(temparr); temparr = []; }\n         } else { if (temparr.length === 19) { setreddit(temparr); temparr = []; }}\n\n                counter++;\n\n            } catch (e) { console.log(\"Fetch \" + item + \" failed.\" + e) }\n \n    }\n    for (let item of isfood ? list : list_drink) { fetchsubreddit(item);  }\n\n    }, [isfood])\n\n\n    return (<div className=\"mt-20\">\n        <div className=\"flex justify-center mb-8\">\n            <button className={isfood ? \"font-black underline\" : \"font-light hover:bg-amber-200 px-4\"} onClick={() => {setreddit([]); set_isfood(true)}}>Foods</button>\n            <button className={isfood ? \"ml-8 font-light hover:bg-amber-200 px-4\" : \"ml-8 font-black underline px-4\" } onClick={() =>{setreddit([]); set_isfood(false)}}>Drinks</button>\n        </div>\n        <section>{ isfood ? <div>\n            {reddit.length === 0 ? <div className=\"h-screen flex justify-center \"><img src={loading} alt=\"loading\" className=\"h-28\" /> </div> :\n                <div className=\"grid grid-cols-3 gap-3 text-center \">\n                    {reddit.map(item => (<div className=\"w-3/4 ml-12 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100\" key={`${item.subreddit_name_prefixed}${item.id}${item.permalink}`}>\n                        <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n                            <section key={item.permalink} className=\"\">\n                                <p key={item.subreddit}>{item.subreddit}</p>\n                                <p key={item.subreddit_name_prefixed} className=\"font-mono text-2xl leading-8\">{item.subreddit_name_prefixed}</p>\n                                <p className=\"text-gray-400\" key={item.subreddit_type}>{item.subreddit_type}</p>\n                                <p key={item.id} className=\"\">Subscribers - {item.subreddit_subscribers}</p>\n\n                            </section>\n                        </Link>\n                    </div>\n                    ))\n                    }\n                </div>\n            }</div> :\n            <div>\n            {reddit.length === 0 ? <div className=\"h-screen flex justify-center\"><img src={loading} alt=\"loading\" className=\"h-28\" /> </div> :\n                <div className=\"grid grid-cols-3 gap-3 text-center\">\n                    {reddit.map(item => (<div className=\"w-3/4 ml-12 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100\" key={`${item.subreddit_name_prefixed}${item.id}${item.permalink}`}>\n                        <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n                            <section key={item.permalink} className=\"\">\n                                <p key={item.subreddit}>{item.subreddit}</p>\n                                <p key={item.subreddit_name_prefixed} className=\"font-mono text-2xl leading-8\">{item.subreddit_name_prefixed}</p>\n                                <p key={item.subreddit_type}>{item.subreddit_type}</p>\n                                <p key={item.id} className=\"text-gray-400\">Subscribers - {item.subreddit_subscribers}</p>\n\n                            </section>\n                        </Link>\n                    </div>\n                    ))\n                    }\n                </div>\n            }</div>\n        }\n        </section>\n\n        <div className=\"\">\n        <Footer />\n      </div>\n    </div>)\n\n};\n\n\n\nexport default SubredditListPage","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js",["131","132"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport axios from 'axios'\nimport food_subredddits_set from \"./food_subredditlist\"\nimport drink_subredddits_set from \"./drinks_subredditlist\"\nimport saveFavorites from './savefavorites_function'\nimport removeFavorite from \"./removefavorites_function\"\nimport Footer from \"./fotter\"\nimport loading from './imgs/loading.gif'\n\n\n\n\nconst Subreddit = () => {\n\n    const [subreddit, set_subreddit] = useState([]);\n    const [subredditcontent_map, set_subredditcontent_map] = useState({});\n    const [comment_isfetched, set_comment_isfetched] = useState(false);\n    const { slug } = useParams();\n    const [a, seta] = useState(slug)\n    const [isfavorite, set_isfavorite] = useState(false);\n    let favoritereddits = [];\n\n\n    useEffect(() => {\n        const fetchsubreddit = async () => {\n            try {\n                const result = await axios(`https://www.reddit.com/r/${slug}/.json`);\n\n                if (localStorage.getItem(\"SavedSubReddits\")) {\n                    favoritereddits = localStorage.getItem(\"SavedSubReddits\").split(\",\");\n                    if (favoritereddits.includes(slug)) { set_isfavorite(true); console.log(favoritereddits)}\n                    else { set_isfavorite(false); console.log(favoritereddits)}\n                }\n\n                set_subreddit(result.data.data.children);\n\n            } catch (e) { console.log(`Fetch r/${slug} failed. ${e}`) }\n        }\n\n        fetchsubreddit();\n    }, [slug, a])\n\n    useEffect(() => {\n\n\n        if (subreddit.length > 0) {\n            let tempobj = {};\n            let counter = 0;\n\n            subreddit.forEach(item => {\n                const fetchcomments = async () => {\n\n                    //remove ? to allow reddit api call\n                    if (item.data.title[item.data.title.length - 1] === \"?\") { item.data.title = item.data.title.slice(0, -1); }\n\n                    try {\n                        const result = await axios(`https://www.reddit.com/r/${item.data.subreddit}/comments/${item.data.id}/${item.data.title}/.json`);\n                        tempobj[item.data.id] = result.data[0].data.children[0].data;\n\n                        counter++;\n\n                        if (counter === subreddit.length - 1) {\n                            set_subredditcontent_map(tempobj)\n                            set_comment_isfetched(true);\n                        }\n                    } catch (error) {\n                        console.log(\"Error: Fetch reddit posts and comments failed.\\n-------------------\" + error + \"-------------------------\");\n                        tempobj[item.data.id] = {}\n                        counter++;\n                    }\n                }\n                fetchcomments();\n            });\n        }\n    }, [subreddit])\n\n    return (\n        <article className=\"grid grid-cols-8 gab-3\">\n\n            <nav className=\"col-start-1 col-end-3  \">\n                <RedditNavigation picked = {slug}/>\n            </nav>\n            <main className=\"col-start-3 col-end-9 mt-16\">\n\n                {subreddit.length === 0 ? <div className=\"h-screen flex justify-center \"><img src={loading} alt=\"loading\" className=\"h-28\" /> </div> : <div>\n                    <div className=\"flex justify-center\">\n                        <a href={`https://www.reddit.com/r/${subreddit[0].data.subreddit}/`} target=\"_blank\" rel=\"noreferrer\" >\n                            <h2 className=\"text-6xl text-gray-400 font-bold\" key={subreddit[0].data.subreddit}>{subreddit[0].data.subreddit_name_prefixed}</h2>\n                            <p className=\"pt-3 text-gray-400 text-sm text-center\">{subreddit[0].data.subreddit_subscribers ? `Subscribers - ${subreddit[0].data.subreddit_subscribers}` : \"\"}</p></a>\n                        {isfavorite ?\n\n                            <button key={`${subreddit[0].data.subreddit}${subreddit[0].data.subreddit}1`} className=\"pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => { set_isfavorite(false); removeFavorite(\"reddit\", subreddit[0].data.subreddit) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"ml-2\">Saved</p></button> :\n\n                            <button key={`${subreddit[0].data.subreddit}${subreddit[0].data.subreddit}15`} className=\"text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex \" onClick={() => { set_isfavorite(true); saveFavorites(\"reddit\", subreddit[0].data.subreddit) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"ml-2\">Add to Favories</p></button>\n                        }\n                    </div>\n                    <article className='mt-16'>\n                        \n                        {\n                            subreddit.map(item => (\n                                <section className=\" py-8 hover:shadow-md\" key={item.data.id}>\n                                    <a href={`https://www.reddit.com/${item.data.permalink}`} target=\"_blank\" rel=\"noreferrer\" >\n                                        <section className=\"flex\">\n                                            <div className=\"w-2/12 flex items-center\" key={`${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink}`}>\n                        \n                                                <svg className=\"ml-6\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.5em\" height=\"2.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 16 16\"><g fill=\"currentColor\"><path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\" /></g></svg>\n                                                <p className=\"text-2xl  font-bold justify-self-center pl-3 pr-2\" key={`${item.data.ups} ${subreddit[0].data.permalink}`} > {item.data.ups}</p>\n                                            </div>\n                                            <div className=\"w-10/12 pr-4\" key={`${item.data.title} ${item.data.author}`}>\n                                                <h4 className=\"text-xl leading-7 font-mono pb-4\" key={item.data.title}>{item.data.title}</h4>\n                                                {comment_isfetched && <section>{\n                                                    subredditcontent_map[item.data.id] !== undefined &&\n                                                    <section key={subredditcontent_map[item.data.id].subreddit_id}>\n                                                        <p className=\"font-serif leading-6\" key={subredditcontent_map[item.data.id].selftext}>{subredditcontent_map[item.data.id].selftext}</p>\n                                                        <div className=\"flex items-center justify-start pt-8 pb-4\" key={`${subredditcontent_map[item.data.id].subreddit_id}${subredditcontent_map[item.data.id].subreddit_id}${item.data.author}`}>\n                                                            <p className=\"w-8/12 font-light \" key={item.data.author}>Submitted by : {item.data.author}</p>\n                                                            <button className=\"ml-4 text-sm px-6 py-1 font-semibold bg-amber-300\" key={`${subredditcontent_map[item.data.id].num_comments} ${subredditcontent_map[item.data.id].subreddit_id}`} >{subredditcontent_map[item.data.id].num_comments} Comments </button>\n                                                        </div><hr />\n                                                    </section>}\n                                                </section>}\n                                            </div>\n                                        </section>\n                                    </a>\n                                </section>\n                            ))\n                        } \n                        \n                    </article>\n                    </div>}\n            </main>\n\n            <div className=\"col-start-3 col-end-9\">\n                <Footer />\n            </div>\n\n        </article>\n    )\n}\n\nconst RedditNavigation = ({picked}) => {\n\n    const [show_foodsubreddit, setshow_foodsubreddit] = useState(false);\n    const [show_drinksubreddit, setshow_drinksubreddit] = useState(true);\n\n\n    let foodsubreddit_arr = [];\n    let drinksubreddit_arr = [];\n\n\n    const iterator1 = food_subredddits_set.entries();\n    const iterator2 = drink_subredddits_set.entries();\n\n\n    for (const entry of iterator1) { foodsubreddit_arr.push(entry[0]); }\n    for (const entry of iterator2) { drinksubreddit_arr.push(entry[0]); }\n\n    const showChoices = (type) => {\n        if (type === \"food\") {\n            if (show_foodsubreddit) { setshow_foodsubreddit(false); }\n            else setshow_foodsubreddit(true)\n        }\n        else {\n            if (show_drinksubreddit) { setshow_drinksubreddit(false); }\n            else setshow_drinksubreddit(true)\n        }\n    }\n\n    return (<section className=\"fixed left-0 w-1/4 h-screen overflow-y-scroll overscroll-y-auto mt-24\">\n\n        <div>\n            <div className=\"flex flex-row items-center justify-between \">\n\n                <h2 className=\"font-black text-md pl-12 mt-10 mb-3 flex\"><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 1024 1024\"><path fill=\"currentColor\" d=\"M128 352.576V352a288 288 0 0 1 491.072-204.224a192 192 0 0 1 274.24 204.48a64 64 0 0 1 57.216 74.24C921.6 600.512 850.048 710.656 736 756.992V800a96 96 0 0 1-96 96H384a96 96 0 0 1-96-96v-43.008c-114.048-46.336-185.6-156.48-214.528-330.496A64 64 0 0 1 128 352.64zm64-.576h64a160 160 0 0 1 320 0h64a224 224 0 0 0-448 0zm128 0h192a96 96 0 0 0-192 0zm439.424 0h68.544A128.256 128.256 0 0 0 704 192c-15.36 0-29.952 2.688-43.52 7.616c11.328 18.176 20.672 37.76 27.84 58.304A64.128 64.128 0 0 1 759.424 352zM672 768H352v32a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32v-32zm-342.528-64h365.056c101.504-32.64 165.76-124.928 192.896-288H136.576c27.136 163.072 91.392 255.36 192.896 288z\" /></svg><p className=\"ml-2\">Food Subreddits</p></h2>\n                <button className=\"border-b text-xl  mt-10 mb-3 mr-8 hover:text-red-400\" onClick={() => showChoices(\"food\")}>{show_foodsubreddit ? \"↑\" : \"↓\"}</button>\n            </div>\n            <div className={show_foodsubreddit ? \"flex flex-col\" : \"hidden\"}>\n\n                {\n                    foodsubreddit_arr.map(item => (\n                        <Link key={`${item}key`} to={`/reddit/${item}`} >\n                            <div key={`${item}1`} className=\"flex item-center justify-center\">\n                                <button key={item} className={picked === item ? \"w-3/4 border-b px-4 py-3 font-bold border-l-2 border-l-green-500\" :\" w-3/4 border-b px-4 py-3  hover:border-b-amber-500\"}>{item}</button>\n                            </div>\n                        </Link>\n                    ))\n                }\n            </div>\n\n            <div className=\"flex flex-row items-center justify-between \">\n                <h2 className=\"font-black  text-md pl-12 mt-10 mb-3 flex\"><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 1024 1024\"><path fill=\"currentColor\" d=\"M768 64a192 192 0 1 1-69.952 370.88L480 725.376V896h96a32 32 0 1 1 0 64H320a32 32 0 1 1 0-64h96V725.376L76.8 273.536a64 64 0 0 1-12.8-38.4v-10.688a32 32 0 0 1 32-32h71.808l-65.536-83.84a32 32 0 0 1 50.432-39.424l96.256 123.264h337.728A192.064 192.064 0 0 1 768 64zM656.896 192.448H800a32 32 0 0 1 32 32v10.624a64 64 0 0 1-12.8 38.4l-80.448 107.2a128 128 0 1 0-81.92-188.16v-.064zm-357.888 64l129.472 165.76a32 32 0 0 1-50.432 39.36l-160.256-205.12H144l304 404.928l304-404.928H299.008z\" /></svg>\n                    <p className=\"ml-2\">Drink Subreddits</p></h2>\n                <button className=\"border-b text-xl  mt-10 mb-3 mr-8 hover:text-red-400\" onClick={() => showChoices(\"drink\")}>{show_drinksubreddit ? \"↑\" : \"↓\"}</button>\n            </div>\n            <div className={show_drinksubreddit ? \"flex flex-col\" : \"hidden\"}>\n                {\n                    drinksubreddit_arr.map(item => (\n                        <Link key={`${item}key`} to={`/reddit/${item}`} >\n                            <div key={`${item}1`} className=\"flex item-center justify-center\">\n                                <button key={item} className={picked === item ? \"w-3/4 border-b px-4 py-3 font-bold border-l-2 border-l-green-500\" :\" w-3/4 border-b px-4 py-3  hover:border-b-amber-500\"}>{item}</button>\n                            </div>\n                        </Link>\n                    ))\n                }\n            </div>\n        </div>\n    </section>)\n}\n\nexport default Subreddit","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js",["133","134","135","136","137","138"],[],"\nimport React, { useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\"\nimport loading from \"./imgs/loading.gif\"\nimport Fotter from \"./fotter.js\"\nimport RecipePage from './recipepage'\nimport DrinkRecipePage from './drinksrecipepage'\n\n\nconst MyFavorites = () => {\n\n  const [foodfavorites, set_foodfavorites] = useState([]);\n  const [drinkfavorites, set_drinkfavorites] = useState([]);\n  const [redditfavorites, set_redditfavorites] = useState([]);\n\n  const [frontfood_list, set_frontfood_list] = useState([]);\n\n  const [recipefor, set_recipefor] = useState(\"\");\n  const [drink_recipefor, set_drink_recipefor] = useState(\"\");\n  const [reloadpage, set_reloadpage] = useState(1)\n  const [type, set_type] = useState(\"food\")\n  const [leftimg, set_leftimg] = useState([]);\n  const [leftimg_drink , set_leftimg_drink] = useState([])\n  let [leftcounter, set_leftcounter] = useState(1);\n  let [leftcounter_drink, set_leftcounter_drink] = useState(1);\n\n\n\n  let foodfavs_arr = [];\n  let drinkfavs_arr = [];\n  let redditfavs_arr = [];\n\n\n  let temparr = []\n  let temparr2 = []\n  let temparr3 = []\n\n\n  const fetchfood = async (item) => {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${item}`);\n    temparr.push(result.data.meals[0]);\n\n    if (foodfavs_arr.indexOf(item) === 0) {\n      let arr = [result.data.meals[0].strMealThumb, result.data.meals[0].strMeal, result.data.meals[0].strTags];\n      set_leftimg(arr)\n      console.log(leftimg  )\n      console.log([result.data.meals[0].strMealThumb, result.data.meals[0].strMeal, result.data.meals[0].strTags])\n      \n    }\n\n    if (temparr.length === foodfavs_arr.length) { set_foodfavorites(temparr); }\n  }\n\n\n  const fetchdrink = async (item) => {\n    const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${item}`);\n    temparr2.push(result.data.drinks[0]);\n\n    if (drinkfavs_arr.indexOf(item) === 0) {\n      set_leftimg_drink([result.data.drinks[0].strDrinkThumb, result.data.drinks[0].strDrink, result.data.drinks[0].strTags])\n    }\n\n    if (temparr2.length === drinkfavs_arr.length) { set_drinkfavorites(temparr2) }\n  }\n\n  const fetchreddit = async (item) => {\n    const result = await axios(`https://www.reddit.com/r/${item}.json`);\n    temparr3.push(result.data.data.children[0].data)\n    if (temparr3.length === redditfavs_arr.length) { set_redditfavorites(temparr3) }\n  }\n\n  console.log(\"ola_two\")\n\n  useEffect(() => { \n\n    if(type === \"food\"){\n    if (localStorage.getItem(\"SavedFoods\")) {\n      foodfavs_arr = localStorage.getItem(\"SavedFoods\").split(\",\");\n      console.log(\"length\" + foodfavs_arr)\n      foodfavs_arr.map(item => {\n        fetchfood(item);\n      })\n    } else { set_foodfavorites([\"None\"]) }\n  }\n  else if(type === \"drink\"){\n    if (localStorage.getItem(\"SavedDrinks\")) {\n      drinkfavs_arr = localStorage.getItem(\"SavedDrinks\").split(\",\");\n      drinkfavs_arr.map(item => {\n        fetchdrink(item);\n      })\n    } else { set_drinkfavorites([\"None\"]) }\n  }\n    else {\n    if (localStorage.getItem(\"SavedSubReddits\")) {\n      redditfavs_arr = localStorage.getItem(\"SavedSubReddits\").split(\",\");\n      redditfavs_arr.map(item => {\n        fetchreddit(item);\n      })\n    } else { set_redditfavorites([\"None\"]) }\n }\n  }, [reloadpage, type])\n\n  //type== food,drink or reddit catagory == strCatagory\n  const viewFavorite = (type, id, catagory) => {\n\n    if (type === \"food\") {\n      const fetchitems = async () => {\n        try {\n          const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${catagory}`);\n          if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\n          else { set_frontfood_list(result.data.meals) }\n          set_recipefor(id);\n        } catch (e) { console.log(`Fetch ${catagory} based foods failed !  ` + e) }\n      }\n\n      fetchitems();\n    }\n    else if (type === \"drink\") {\n      const fetchitems = async () => {\n        try {\n          const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${catagory}`);\n          if (result.data.drinks == null) { set_frontfood_list([\"No Food Found Error\"]) }\n          else { set_frontfood_list(result.data.drinks) }\n          set_drink_recipefor(id);\n        } catch (e) { console.log(`Fetch ${catagory} based drinks failed !  ` + e) }\n      }\n\n      fetchitems();\n    }\n  }\n\n  const setleft_imgfunc = goto => {\n    if(type === \"food\"){\n    if (goto === \"next\") {console.log(leftcounter)\n      set_leftcounter(leftcounter + 1);\n      if (leftcounter === foodfavorites.length - 1) { set_leftcounter(0); }\n    }\n    else {\n      set_leftcounter(leftcounter - 1);\n      if (leftcounter === 0) { set_leftcounter(foodfavorites.length - 1); }\n    }\n    set_leftimg([foodfavorites[leftcounter].strMealThumb, foodfavorites[leftcounter].strMeal, foodfavorites[leftcounter].strTags]);\n  }\n     else if(type === \"drink\") {\n      if (goto === \"next\") {console.log(leftcounter)\n        set_leftcounter_drink(leftcounter_drink + 1);\n        if (leftcounter_drink ===drinkfavorites.length - 1) { set_leftcounter_drink(0); }\n      }\n      else {\n        set_leftcounter_drink(leftcounter_drink - 1);\n        if (leftcounter_drink === 0) { set_leftcounter_drink(drinkfavorites.length - 1); }\n      }\n      set_leftimg_drink([drinkfavorites[leftcounter_drink].strDrinkThumb, drinkfavorites[leftcounter_drink].strDrink, drinkfavorites[leftcounter_drink].strTags]);\n     }\n  }\n\n  return (<article className=\"mt-18\">\n\n  {(drink_recipefor === \"\" && recipefor === \"\") &&\n    <div className=\"flex justify-center mt-16\">\n      <button className={type === \"food\" ? \"font-black underline\" : \"font-light hover:bg-amber-200 px-4\"} onClick={() => set_type(\"food\")}>Foods</button>\n      <button className={type === \"drink\" ? \"ml-8 font-black underline px-4\" :\"ml-8 font-light hover:bg-amber-200 px-4\" } onClick={() => set_type(\"drink\")}>Drinks</button>\n      <button className={type === \"reddit\" ? \"ml-8 font-black underline px-4\" : \"ml-8 font-light hover:bg-amber-200 px-4\" } \n      onClick={() => set_type(\"reddit\")}>Reddits</button>\n    </div>\n}\n    {drink_recipefor !== \"\" && <div className=\"pl-32 mt-16\">\n      <button className=\"text-4xl hover:text-rose-500\" onClick={() => { set_reloadpage(reloadpage + 1); set_drink_recipefor(\"\"); }}>←</button>\n      <DrinkRecipePage drinkid={drink_recipefor} similardrinks={frontfood_list} /></div>}\n\n    {recipefor !== \"\" && <div className=\"pl-32 mt-16\">\n      <button className=\"text-4xl  hover:text-rose-500\" onClick={() => { set_reloadpage(reloadpage + 1); set_recipefor(\"\"); }}>←</button>\n      <RecipePage foodid={recipefor} similarfoods={frontfood_list} />\n    </div>}\n\n    {(drink_recipefor === \"\" && recipefor === \"\") && <article>\n      {type === \"food\" &&\n        <section>\n          {foodfavorites.length > 0 ? <div>{foodfavorites[0] === \"None\" ?\n            <div><p>No saved food recipes found ....</p></div> : <section className=\"h-screen\">\n              <h1 className=\"ml-16 text-5xl font-light font-serif\">Favorite Foods</h1>\n              <div className=\"grid grid-cols-3 gap-3 \">\n\n                <div className=\"col-span-1 h-[77vh] flex justify-center items-center\">\n                  <div>\n                   {leftimg.length > 0 && <img className=\"p-4\" src={leftimg[0]} alt={leftimg[1]} />}\n                    <h3 className=\"font-light text-center px-2\" key={leftimg[1]}>{leftimg[1]}</h3>\n                    <p className=\"font-light text-center\" key={`${leftimg[1]}${leftimg[1]}`}>{leftimg[2] ? `Tags : ${leftimg[2]}` : \"Tags : \"}</p>\n                  </div>\n                  <div className=\"text-4xl font-extrabold\">\n                    <button className=\"text-green-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"next\")}>→</button>\n                    <button className=\"text-rose-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"back\")}>←</button>\n                  </div>\n                </div>\n                <section className=\"h-[77vh] overflow-y-scroll col-span-2 grid grid-cols-3 gap-1  \">\n                  {foodfavorites.map(item => (\n                    <div className=\"w-11/12 hover:brightness-90\" key={item.idMeal} onClick={() => viewFavorite(\"food\", item.idMeal, item.strCategory)}>\n                      <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n                    </div>\n                  ))\n                  }\n                </section>\n              </div>\n            </section>} </div> :\n            <div className=\"mt-8 flex justify-center h-screen\"><img className=\"w-20 h-24\" src={loading} alt=\"loading\" /></div>\n\n          }\n\n        </section>\n      }\n\n      {type === \"drink\" &&\n        <section>\n          {drinkfavorites.length > 0 ? <div>{drinkfavorites[0] === \"None\" ?\n            <div><p>No saved drinks recipes found ....</p></div> : <section className=\"h-screen\">\n              <h1 className=\"ml-16 text-5xl font-light font-serif\">Favorite Drinks</h1>\n              <div className=\"grid grid-cols-3 gap-3\">\n                <div className=\"col-span-1 h-[77vh] flex justify-center items-center\">\n                  <div>\n                    <img className=\"p-4\" src={leftimg_drink[0]} alt={leftimg_drink[1]} />\n                    <h3 className=\"font-light text-center px-2\" key={leftimg_drink[1]}>{leftimg_drink[1]}</h3>\n                    <p className=\"font-light text-center\" key={`${leftimg_drink[1]}${leftimg_drink[1]}`}>{leftimg_drink[2] ? `Tags : ${leftimg_drink[2]}` : \"Tags : \"}</p>\n                  </div>\n                  <div className=\"text-4xl font-extrabold\">\n                    <button className=\"text-green-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"next\")}>→</button>\n                    <button className=\"text-rose-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"back\")}>←</button>\n                  </div>\n                </div>\n                <section className=\"h-[77vh] overflow-y-scroll col-span-2 grid grid-cols-3 gap-1  \">\n                  {drinkfavorites.map(item => (\n                    <div className=\"w-11/12 hover:brightness-90\" key={item.idDrink} onClick={() => viewFavorite(\"drink\", item.idDrink, item.strCategory)}>\n                      <img key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} />\n                    </div>\n                  ))\n                  }\n                </section>\n              </div>\n            </section>} </div> :\n            <div className=\"mt-8 flex justify-center h-screen\"><img className=\"w-20 h-24\" src={loading} alt=\"loading\" /></div>\n          }\n\n        </section>\n\n      }\n\n      {type === \"reddit\" &&  \n        <section>\n        {redditfavorites.length > 0 ? <div>{ redditfavorites[0] === \"None\" ?\n        <div className=\"border-2\"><p>No saved subreddits ....</p></div> : <section className=\"h-screen\">\n          <h1 className=\"ml-16 mb-6 text-5xl font-light font-serif\">Favorite Subreddits</h1>\n          <div className=\"grid grid-cols-3 gap-10 h-[74vh] overflow-y-scroll text-center \">\n    \n            {redditfavorites.map(item => (\n              <Link className=\"w-3/4 ml-12 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100 even:bg-gray-100\" key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n              <div className=\"border-b mr-4\" key={item.subreddit_id}>\n                <h3 className=\"font-mono text-2xl leading-8\" key={item.subreddit}>{item.subreddit_name_prefixed}</h3>\n                <p key={`${item.subreddit}${item.subreddit_subscribers}`}>{item.subreddit_subscribers ? `Subscribers ${item.subreddit_subscribers}` : \"\"}</p>\n                <p className=\"text-gray-400\" key={`${item.subreddit_id}${item.subreddit}`}>{item.subreddit_type}</p>\n              </div>\n              </Link>\n            ))\n            }\n          </div>\n        </section>  } </div> :        \n        <div className=\"mt-8 flex justify-center h-screen\"><img className=\"w-20 h-24\" src={loading} alt=\"loading\" /></div>\n\n        }\n\n        </section>\n\n      }\n\n    </article>\n\n\n\n\n    }\n\n    <Fotter />\n\n  </article>\n  )\n}\n\nexport default MyFavorites\n\n/*\n  {drinkfavorites.length > 0 ? <div>{ drinkfavorites[0] === \"None\" ?\n        <div><p>No saved drinks recipes found ....</p></div> : <section>\n          <h1>Favorite Drinks</h1>\n          <div className=\"grid grid-cols-3 gap-10\">\n    \n            {drinkfavorites.map(item => (\n              <div key={item.idDrink} onClick={() => viewFavorite(\"drink\",item.idDrink , item.strCategory)}>\n                <img key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} />\n                <h3 key={item.strDrink}>{item.strDrink}</h3>\n                <p  key={`${item.strAlcoholic}${item.strDrink}`}>{item.strTags ? `${item.strTags}` : \"\"}</p>\n              </div>\n            ))\n            }\n          </div>\n        </section>  } </div> :\n        <div className=\"mt-64 flex justify-center \"><img className=\"w-16\" src={loading} alt=\"loading\" /></div>\n        }\n        {redditfavorites.length > 0 ? <div>{ redditfavorites[0] === \"None\" ?\n        <div className=\"border-2\"><p>No saved subreddits ....</p></div> : <section>\n          <h1>Favorite Subreddits</h1>\n          <div className=\"grid grid-cols-3 gap-10\">\n    \n            {redditfavorites.map(item => (\n              <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n              <div className=\"border-b\" key={item.subreddit_id}>\n                <h3 key={item.subreddit}>{item.subreddit_name_prefixed}</h3>\n                <p key={`${item.subreddit}${item.subreddit_subscribers}`}>{item.subreddit_subscribers ? `Subscribers ${item.subreddit_subscribers}` : \"\"}</p>\n                <p key={`${item.subreddit_id}${item.subreddit}`}>{item.subreddit_type}</p>\n              </div>\n              </Link>\n            ))\n            }\n          </div>\n        </section>  } </div> :        \n        <div className=\"mt-64 flex justify-center h-screen\"><img className=\"h-28\" src={loading} alt=\"loading\" /></div>\n\n        }\n\n  */","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["139"],[],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\nimport saveFavorites from './savefavorites_function'\nimport removeFavorite from './removefavorites_function'\n\n\nconst RecipePage = ({ foodid, similarfoods }) => {\n\n  const [currentfood_id, set_currentfood_id] = useState(foodid)\n  const [recipedata, set_recipedata] = useState([]);\n  const [recipetext, set_recipetext] = useState([]);\n  const [ingredients, set_ingridients] = useState([]);\n  const [ingredientamount, set_ingredientsamount] = useState([]);\n  const [youtubeid, set_youtubeid] = useState(\"\");\n  const [showvideo, set_showvideo] = useState(false);\n  const [isfavorite, set_isfavorite] = useState(false);\n  let favoritefoods = [];\n\n  const getRecipe = async () => {\n\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${currentfood_id}`)\n\n      if (localStorage.getItem(\"SavedFoods\")) {\n        favoritefoods = localStorage.getItem(\"SavedFoods\").split(\",\");\n        if (favoritefoods.includes(currentfood_id)) { set_isfavorite(true); }\n      }\n\n\n      set_recipedata(result.data.meals)\n      let temparr = result.data.meals[0].strInstructions.split(\"\\n\");\n\n      set_recipetext(temparr);\n\n      temparr = [];\n      let temparr_two = [];\n\n      for (let i = 1; i < 21; i++) {\n        let str = \"strIngredient\" + i;\n        let str2 = \"strMeasure\" + i;\n\n        if (result.data.meals[0][str] || result.data.meals[0][str] !== \"\") {\n          temparr.push(result.data.meals[0][str])\n          temparr_two.push(result.data.meals[0][str2])\n        }\n\n        if (result.data.meals[0][str] == null) {\n          temparr.pop();\n          temparr_two.pop();\n        }\n      }\n\n\n      set_ingridients(temparr);\n      set_ingredientsamount(temparr_two);\n\n      temparr = []; temparr_two = [];\n\n      temparr = result.data.meals[0].strYoutube.split(\"=\");\n\n      set_youtubeid(temparr[temparr.length - 1]);\n      temparr = [];\n\n\n    } catch (e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e) }\n\n  }\n\n  useEffect(() => { set_isfavorite(false); getRecipe() }, [currentfood_id])\n\n\n\n\n  return (<section className=\"mt-8\">\n    {recipedata.length === 0 ? <div className=\"flex item-center justify-center\">\n      <img src={loading} alt=\"loading\" className=\"\" />\n    </div> :\n      <div className=\"mt-16\">\n        {\n          recipedata.map(item => (\n            <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}`}>\n              <section key={`${item.strMeal} ${item.strMeal} ${item.idMeal}1`} className=\"flex flex-row items-center\">\n                <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}2`} className=\"ml-2 flex flex-col w-2/4\">\n                  <img className=\"ml-1\" key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} width=\"480\" height=\"315\" />\n                  <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}3`} className=\"flex justify-between\">\n                    <h4 className=\"text-center border-b-2 font-black pl-2 w-3/5\" key={item.strMeal}>{item.strMeal} </h4>\n                    {isfavorite ?\n\n                      <button key={`${item.idMeal}${item.idMeal}1`} className=\"pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => {set_isfavorite(false); removeFavorite(\"food\", item.idMeal)}}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"ml-2\">Saved</p></button> :\n\n                      <button key={`${item.idMeal}${item.idMeal}2`} className=\"text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex \" onClick={() => { set_isfavorite(true); saveFavorites(\"food\", item.idMeal) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"ml-2\">Add to Favories</p></button>\n                    }\n                  </div>\n                </div>\n\n                {!showvideo && <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}5`} className=\"border-1 rounded-full bg-amber-300 px-8 py-2 flex flex-row justify-between font-mono ml-24 hover:bg-amber-400 \" onClick={() => set_showvideo(true)}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mr-4 self-center\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M8.051 1.999h.089c.822.003 4.987.033 6.11.335a2.01 2.01 0 0 1 1.415 1.42c.101.38.172.883.22 1.402l.01.104l.022.26l.008.104c.065.914.073 1.77.074 1.957v.075c-.001.194-.01 1.108-.082 2.06l-.008.105l-.009.104c-.05.572-.124 1.14-.235 1.558a2.007 2.007 0 0 1-1.415 1.42c-1.16.312-5.569.334-6.18.335h-.142c-.309 0-1.587-.006-2.927-.052l-.17-.006l-.087-.004l-.171-.007l-.171-.007c-1.11-.049-2.167-.128-2.654-.26a2.007 2.007 0 0 1-1.415-1.419c-.111-.417-.185-.986-.235-1.558L.09 9.82l-.008-.104A31.4 31.4 0 0 1 0 7.68v-.123c.002-.215.01-.958.064-1.778l.007-.103l.003-.052l.008-.104l.022-.26l.01-.104c.048-.519.119-1.023.22-1.402a2.007 2.007 0 0 1 1.415-1.42c.487-.13 1.544-.21 2.654-.26l.17-.007l.172-.006l.086-.003l.171-.007A99.788 99.788 0 0 1 7.858 2h.193zM6.4 5.209v4.818l4.157-2.408L6.4 5.209z\" /></svg><span className=\"self-center\">Watch Video Instead</span></button>}\n\n                {\n                  (showvideo && youtubeid !== \"\") && <div className=\"ml-8\" key={`${item.strMeal} ${item.strMeal} ${item.idMeal}6`}>\n                    <iframe key={`${item.strMeal} ${item.strMeal} ${item.idMeal}9`} width=\"440\" height=\"425\" src={`https://www.youtube.com/embed/${youtubeid}`} title=\"YouTube video player\" frameborder=\"0\" allowFullScreen></iframe>\n                    <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}10`} className=\"w-full hover:bg-gray-200\" onClick={() => set_showvideo(false)}>❌</button>\n                  </div>\n                }\n\n              </section>\n\n              <section className=\"flex flex-col justify-items-center items-center\">\n                {ingredientamount.length > 0 && <div className=\"bg-gray-100 rounded-r-lg w-5/12 my-20 py-8 pl-4 font-serif\t\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 pb-8\">Ingredients Needed</h2>\n                  {ingredients.map(obj => (<p className=\"text-center leading-8\" key={`${item.idMeal}${obj} ${item.idMeal}`}>{ingredientamount[ingredients.indexOf(obj)]} {obj}</p>))}\n                </div>}\n\n                <div className=\"w-3/4 border-l-2 border-l-green-700 pl-8 my-40 font-serif leading-8\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 mb-8 font-bold \">Recipe</h2>\n                  {recipetext.map(steps => (steps !== \"\" && <p key={steps}> {steps}</p>))}\n                </div>\n\n\n              </section>\n\n\n            </div>\n\n          ))\n        } </div>}\n\n    {recipedata.length !== 0 && <h2 className=\"capitalize text-xl leading-10 font-light pl-2 ml-24 \">Similar Foods</h2>}\n\n    <div className=\"h-96 overflow-y-scroll ml-24 \">\n\n      {similarfoods.map(item => (<div className=\"float-left w-1/5 ml-2\" onClick={() => set_currentfood_id(item.idMeal)} key={`${item.idMeal}${item.strMealThumb}${item.strMeal}`}>\n        {\n          (recipedata[0] !== undefined && recipedata[0].strMeal !== item.strMeal) && <div className=\"text-sm font-light hover:opacity-75\" key={`${item.strMealThumb}${item.strMeal}`} >\n            <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n            <p className=\" text-center\" key={item.strMeal}>{item.strMeal}</p>\n          </div>\n        }\n      </div>\n      )\n      )}\n    </div>\n  </section>)\n}\n\nexport default RecipePage;\n","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js",["140"],[],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\nimport saveFavorites from './savefavorites_function'\nimport removeFavorite from \"./removefavorites_function\"\n\n\nconst RecipePage = ({ drinkid, similardrinks }) => {\n\n  const [currentdrink_id, set_currentdrink_id] = useState(drinkid)\n  const [recipedata, set_recipedata] = useState([]);\n  const [recipetext, set_recipetext] = useState([]);\n  const [ingredients, set_ingridients] = useState([]);\n  const [ingredientamount, set_ingredientsamount] = useState([]);\n  const [isfavorite , set_isfavorite] = useState(false);\n  let favoritedrinks = [];\n\n  const getRecipe = async () => {\n\n    try {\n      const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${currentdrink_id}`)\n\n      if(localStorage.getItem(\"SavedDrinks\"))\n      {  favoritedrinks = localStorage.getItem(\"SavedDrinks\").split(\",\");\n      favoritedrinks = localStorage.getItem(\"SavedDrinks\").split(\",\");\n\n          if(favoritedrinks.includes(currentdrink_id) ) { set_isfavorite(true); }\n      }\n\n      set_recipedata(result.data.drinks)\n      let temparr = result.data.drinks[0].strInstructions.split(\"\\n\");\n\n      set_recipetext(temparr);\n\n      temparr = [];\n      let temparr_two = [];\n\n      for (let i = 1; i < 16; i++) {\n        let str = \"strIngredient\" + i;\n        let str2 = \"strMeasure\" + i;\n\n        if (result.data.drinks[0][str] || result.data.drinks[0][str] !== \"\") {\n          temparr.push(result.data.drinks[0][str])\n          temparr_two.push(result.data.drinks[0][str2])\n        }\n\n        if (result.data.drinks[0][str] == null) {\n          temparr.pop();\n          temparr_two.pop();\n        }\n      }\n\n      set_ingridients(temparr);\n      set_ingredientsamount(temparr_two);\n\n      temparr = []; temparr_two = [];\n\n\n\n    } catch (e) { console.log(`Fetch recipe for ${drinkid} failed !  ` + e) }\n\n  }\n\n  useEffect(() => { set_isfavorite(false); getRecipe() }, [currentdrink_id])\n\n  return (<section className=\"mt-8\">\n    {recipedata.length === 0 ?<div className=\"flex item-center justify-center \"> \n    <img src={loading} alt=\"loading\" className=\"\" /> \n    </div> :\n      <div className=\"mt-16\">\n        {\n          recipedata.map(item => (\n            <div key={`${item.strDrink} ${item.strDrink} ${item.idDrink}`}>\n              <section className=\"flex flex-row items-center justify-center\">\n                <div className=\"ml-8 flex flex-col w-2/4\">\n                  <img className=\"ml-1\" key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} width=\"480\" height=\"315\" />\n\n                   <div className=\"flex justify-between\">\n                    <h4 className=\"text-center border-b-2 font-black pl-2 w-3/5\" key={item.strDrink}>{item.strDrink} </h4>\n  \n                  {   isfavorite ?\n                    <button key={`${item.idDrink}${item.idDrink}1`} className=\"pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => {set_isfavorite(false); removeFavorite(\"drink\" , item.idDrink)} }><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"ml-2\">Saved</p></button> :\n\n                    <button key={`${item.idDrink}${item.idDrink}2`} className=\"text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex \" onClick={() => { set_isfavorite(true); saveFavorites(\"drink\", item.idDrink) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"ml-2\">Add to Favories</p></button>\n                  }\n                  </div>\n\n\n                </div>\n              </section>\n\n              <section className=\"flex flex-col justify-items-center items-center\">\n                {ingredientamount.length > 0 && <div className=\"bg-gray-100 rounded-r-lg w-5/12 my-20 py-8 pl-4 font-serif\t\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 pb-8\">Ingredients Needed</h2>\n                  {ingredients.map(obj => (<p className=\"text-center leading-8\" key={`${item.idDrink}${obj} ${item.idDrink}`}>{ingredientamount[ingredients.indexOf(obj)]} {obj}</p>))}\n                </div>}\n\n                <div className=\"w-3/4 border-l-2 border-l-green-700 pl-8 my-40 font-serif leading-8\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 mb-8 font-bold \">Recipe</h2>\n                  {recipetext.map(steps => (steps !== \"\" && <p key={steps}> {steps}</p>))}\n                </div>\n\n\n              </section>\n\n\n            </div>\n\n          ))\n        } </div>}\n\n     {recipedata.length !== 0  && <h2 className=\"capitalize text-xl leading-10 font-light pl-2 ml-24 \">Similar Drinks</h2>}\n\n    <div className=\"h-96 overflow-y-scroll ml-24 \">\n\n      {similardrinks.map(item => (<div className=\"float-left w-1/5 ml-2\" onClick={() => set_currentdrink_id(item.idDrink)} key={`${item.idDrink}${item.strDrinkThumb}${item.strDrink}`}>\n        {\n          (recipedata[0] !== undefined && recipedata[0].strDrink !== item.strDrink) && <div className=\"text-sm font-light hover:opacity-75\" key={`${item.strDrinkThumb}${item.strDrink}`} >\n            <img key={item.strMealThumb} src={item.strDrinkThumb} alt={item.strDrink} />\n            <p className=\" text-center\" key={item.strDrink}>{item.strDrink}</p>\n          </div>\n        }\n      </div>\n      )\n      )}\n    </div>\n  </section>)\n}\n\nexport default RecipePage;\n","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js",["141"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/ThemeContext.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/Background.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/redditpage.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinkrecipecontent.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipecontent.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/food_subredditlist.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinks_subredditlist.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/savefavorites_function.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/removefavorites_function.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksnav.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/ThemeToggle.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":50,"column":41,"nodeType":"144","endLine":50,"endColumn":52,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":14,"column":10,"nodeType":"148","messageId":"149","endLine":14,"endColumn":15},{"ruleId":"146","severity":1,"message":"150","line":14,"column":17,"nodeType":"148","messageId":"149","endLine":14,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":58,"column":41,"nodeType":"144","endLine":58,"endColumn":52,"suggestions":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"146","severity":1,"message":"156","line":18,"column":13,"nodeType":"148","messageId":"149","endLine":18,"endColumn":20},{"ruleId":"146","severity":1,"message":"157","line":20,"column":15,"nodeType":"148","messageId":"149","endLine":20,"endColumn":19},{"ruleId":"142","severity":1,"message":"158","line":31,"column":39,"nodeType":"159","endLine":31,"endColumn":89},{"ruleId":"142","severity":1,"message":"160","line":79,"column":22,"nodeType":"159","endLine":79,"endColumn":67},{"ruleId":"161","severity":1,"message":"162","line":81,"column":29,"nodeType":"163","messageId":"164","endLine":81,"endColumn":31},{"ruleId":"142","severity":1,"message":"165","line":88,"column":23,"nodeType":"159","endLine":88,"endColumn":69},{"ruleId":"161","severity":1,"message":"162","line":89,"column":30,"nodeType":"163","messageId":"164","endLine":89,"endColumn":32},{"ruleId":"142","severity":1,"message":"166","line":96,"column":24,"nodeType":"159","endLine":96,"endColumn":74},{"ruleId":"161","severity":1,"message":"162","line":97,"column":31,"nodeType":"163","messageId":"164","endLine":97,"endColumn":33},{"ruleId":"142","severity":1,"message":"167","line":70,"column":59,"nodeType":"144","endLine":70,"endColumn":75,"suggestions":"168"},{"ruleId":"142","severity":1,"message":"167","line":64,"column":59,"nodeType":"144","endLine":64,"endColumn":76,"suggestions":"169"},{"ruleId":"146","severity":1,"message":"170","line":11,"column":18,"nodeType":"148","messageId":"149","endLine":11,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["171"],"no-unused-vars","'isnav' is assigned a value but never used.","Identifier","unusedVar","'set_isnav' is assigned a value but never used.",["172"],"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"'counter' is assigned a value but never used.","'seta' is assigned a value but never used.","Assignments to the 'favoritereddits' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'foodfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'drinkfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'redditfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["175"],["176"],"'set_theme' is assigned a value but never used.",{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"184","text":"185"},{"range":"186","text":"185"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"187","text":"188"},"Update the dependencies array to be: [currentdrink_id, getRecipe]",{"range":"189","text":"190"},[1814,1825],"[getFoods_list, navChoice]",[2262,2273],[2123,2139],"[currentfood_id, getRecipe]",[1982,1999],"[currentdrink_id, getRecipe]"]