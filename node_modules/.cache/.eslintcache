[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"7","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js":"8"},{"size":2669,"mtime":1646933732353,"results":"9","hashOfConfig":"10"},{"size":3513,"mtime":1646936361668,"results":"11","hashOfConfig":"10"},{"size":3926,"mtime":1646936311691,"results":"12","hashOfConfig":"10"},{"size":4258,"mtime":1647001257670,"results":"13","hashOfConfig":"10"},{"size":12847,"mtime":1646937271488,"results":"14","hashOfConfig":"10"},{"size":8941,"mtime":1647024222047,"results":"15","hashOfConfig":"10"},{"size":8061,"mtime":1646939156578,"results":"16","hashOfConfig":"10"},{"size":5891,"mtime":1646939364740,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"165v2a5",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js",["45"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js",["46","47","48"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js",["49"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js",["50","51"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js",["52","53","54","55","56","57","58","59","60","61","62"],[],"\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {Link} from \"react-router-dom\"\nimport loading from \"./imgs/loading.gif\"\nimport Fotter from \"./fotter.js\"\nimport RecipePage from './recipepage'\nimport DrinkRecipePage from './drinksrecipepage'\n\n\nconst MyFavorites = () => {\n\n  const [foodfavorites, set_foodfavorites] = useState([]);\n  const [drinkfavorites, set_drinkfavorites] = useState([]);\n  const [redditfavorites, set_redditfavorites] = useState([]);\n\n  const [frontfood_list , set_frontfood_list] = useState([]);\n\n  const [recipefor , set_recipefor] = useState(\"\");\n  const [drink_recipefor , set_drink_recipefor] = useState(\"\");\n  const [reloadpage, set_reloadpage] = useState(1)\n  const [type , set_type] = useState(\"food\")\n  const [leftimg, set_leftimg] = useState([]);\n  let [leftcounter, set_leftcounter] = useState(1);\n\n\n  let foodfavs_arr = [];\n  let drinkfavs_arr = [];\n  let redditfavs_arr = [];\n\n  \n  let temparr = []\n  let temparr2 = []\n  let temparr3 = []\n\nconsole.log(\"reload\")\n  const fetchfood = async (item) => {\n  const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${item}`);\n  temparr.push(result.data.meals[0])\n\n     if(foodfavs_arr.indexOf(item) === 0) {  \n       set_leftimg([result.data.meals[0].strMealThumb , result.data.meals[0].strMeal , result.data.meals[0].strTags]) \n      }\n\n               if(temparr.length === foodfavs_arr.length)\n                  {  set_foodfavorites(temparr);  }\n}\n              \n\nconst fetchdrink = async (item) => {\n  const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${item}`);\n  temparr2.push(result.data.drinks[0])\n               if(temparr2.length === drinkfavs_arr.length)\n                  {  set_drinkfavorites(temparr2)}\n}\n\nconst fetchreddit = async (item) => {\n  const result = await axios(`https://www.reddit.com/r/${item}.json`);\n  temparr3.push(result.data.data.children[0].data)\n               if(temparr3.length === redditfavs_arr.length)\n                  {  set_redditfavorites(temparr3)}\n}\n\n  useEffect(() => { \n    if (localStorage.getItem(\"SavedFoods\")) {\n      foodfavs_arr = localStorage.getItem(\"SavedFoods\").split(\",\");\n      console.log(\"length\" + foodfavs_arr)\n       foodfavs_arr.map(item => {\n        fetchfood(item);\n    })\n  } else { set_foodfavorites([\"None\"])}\n\n   if (localStorage.getItem(\"SavedDrinks\")) {\n     drinkfavs_arr = localStorage.getItem(\"SavedDrinks\").split(\",\");\n    drinkfavs_arr.map(item => {\n      fetchdrink(item);\n    })  \n  } else { set_drinkfavorites([\"None\"])}\n  \n  if (localStorage.getItem(\"SavedSubReddits\")) {\n    redditfavs_arr = localStorage.getItem(\"SavedSubReddits\").split(\",\");\n    redditfavs_arr.map(item => {\n      fetchreddit(item);\n   })\n  } else { set_redditfavorites([\"None\"])}\n\n  },[reloadpage])\n  \n  //type== food,drink or reddit catagory == strCatagory\n  const viewFavorite = (type ,id , catagory) => {\n     \n   if(type === \"food\") {\n    const fetchitems = async () => {\n        try {\n          const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${catagory}`);\n          if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\n          else { set_frontfood_list(result.data.meals) }\n          set_recipefor(id);\n        } catch(e) { console.log(`Fetch ${catagory} based foods failed !  ` + e)  }\n      }\n\n      fetchitems();\n    }\n    else if(type=== \"drink\") {\n      const fetchitems = async () => {\n        try {\n          const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${catagory}`);\n          if (result.data.drinks == null) { set_frontfood_list([\"No Food Found Error\"]) }\n          else { set_frontfood_list(result.data.drinks) }\n          set_drink_recipefor(id);\n        } catch(e) { console.log(`Fetch ${catagory} based drinks failed !  ` + e)  }\n      }\n\n      fetchitems();\n    }\n  }\n\n  const setleft_imgfunc = goto => {\n     if(goto === \"next\"){ \n        set_leftcounter(leftcounter + 1);\n          if(leftcounter === foodfavorites.length - 1) { set_leftcounter(0);}\n      }\n     else { \n      set_leftcounter(leftcounter - 1);\n         if(leftcounter === 0) { set_leftcounter(0);}\n      }\n      set_leftimg([foodfavorites[leftcounter].strMealThumb , foodfavorites[leftcounter].strMeal, foodfavorites[leftcounter].strTags]);\n  }\n\n  return (<article  className=\"mt-18\">\n    <div className=\"flex justify-center mt-16\">\n    <button className={type ? \"font-black underline\" : \"font-light hover:bg-amber-200 px-4\"} >Foods</button>\n    <button className={type ? \"ml-8 font-light hover:bg-amber-200 px-4\" : \"ml-8 font-black underline px-4\" }>Drinks</button>\n    <button className={type ? \"ml-8 font-light hover:bg-amber-200 px-4\" : \"ml-8 font-black underline px-4\" } >Reddits</button>\n  </div>\n\n    {drink_recipefor !== \"\" &&  <div className=\"pl-32 mt-16\">\n    <button onClick = {() => {set_reloadpage(reloadpage + 1); set_drink_recipefor(\"\"); }}>←</button>\n    <DrinkRecipePage drinkid={drink_recipefor} similardrinks={frontfood_list} /></div>}\n\n    {recipefor !== \"\" && <div className=\"pl-32 mt-16\">\n    <button onClick = {() => {set_reloadpage(reloadpage + 1); set_recipefor(\"\"); }}>←</button>\n      <RecipePage foodid={recipefor} similarfoods={frontfood_list} />\n    </div>  }\n    { (drink_recipefor === \"\" &&  recipefor === \"\") &&    <article>\n        {foodfavorites.length > 0 && <div>{ foodfavorites[0] === \"None\" ?\n        <div><p>No saved food recipes found ....</p></div> : <section className=\"h-screen \">\n          <h1>Favorite Foods</h1>\n          <div className=\"grid grid-cols-3 gap-3 \">\n    \n             <div className=\"col-span-1 h-[80vh] flex justify-center items-center\">\n             <div>\n               <img className=\"p-4\" src={leftimg[0]} alt={leftimg[1]} />\n               <h3 className=\"font-light text-center\" key={leftimg[1]}>{leftimg[1]}</h3>\n               <p className=\"font-light text-center\" key={`${leftimg[1]}${leftimg[1]}`}>{leftimg[2] ? `Tags : ${leftimg[2]}` : \"Tags : \"}</p>\n             </div>\n             <div className=\"text-4xl font-extrabold\">\n             <button className=\"text-green-600 hover:text-gray-500\" onClick = {() => setleft_imgfunc(\"next\")}>→</button>\n              <button className=\"text-rose-600 hover:text-gray-500\" onClick = {() => setleft_imgfunc(\"back\")}>←</button>\n             </div>\n             </div>\n             <section className=\"h-[80vh] overflow-y-scroll col-span-2 grid grid-cols-3 gap-1  \">\n                           {foodfavorites.map(item => (\n              <div className=\"w-11/12 hover:brightness-90\" key={item.idMeal} onClick={() => viewFavorite(\"food\",item.idMeal , item.strCategory)}>\n                <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n              </div>\n            ))\n            }\n            </section>\n\n          </div>\n        </section>}</div>\n        }\n      \n      </article>}\n\n  <Fotter />\n\n  </article>\n  )\n}\n\nexport default MyFavorites\n\n/*\n  {drinkfavorites.length > 0 ? <div>{ drinkfavorites[0] === \"None\" ?\n        <div><p>No saved drinks recipes found ....</p></div> : <section>\n          <h1>Favorite Drinks</h1>\n          <div className=\"grid grid-cols-3 gap-10\">\n    \n            {drinkfavorites.map(item => (\n              <div key={item.idDrink} onClick={() => viewFavorite(\"drink\",item.idDrink , item.strCategory)}>\n                <img key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} />\n                <h3 key={item.strDrink}>{item.strDrink}</h3>\n                <p  key={`${item.strAlcoholic}${item.strDrink}`}>{item.strTags ? `${item.strTags}` : \"\"}</p>\n              </div>\n            ))\n            }\n          </div>\n        </section>  } </div> :\n        <div className=\"mt-64 flex justify-center \"><img className=\"w-16\" src={loading} alt=\"loading\" /></div>\n        }\n        {redditfavorites.length > 0 ? <div>{ redditfavorites[0] === \"None\" ?\n        <div className=\"border-2\"><p>No saved subreddits ....</p></div> : <section>\n          <h1>Favorite Subreddits</h1>\n          <div className=\"grid grid-cols-3 gap-10\">\n    \n            {redditfavorites.map(item => (\n              <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n              <div className=\"border-b\" key={item.subreddit_id}>\n                <h3 key={item.subreddit}>{item.subreddit_name_prefixed}</h3>\n                <p key={`${item.subreddit}${item.subreddit_subscribers}`}>{item.subreddit_subscribers ? `Subscribers ${item.subreddit_subscribers}` : \"\"}</p>\n                <p key={`${item.subreddit_id}${item.subreddit}`}>{item.subreddit_type}</p>\n              </div>\n              </Link>\n            ))\n            }\n          </div>\n        </section>  } </div> :        \n        <div className=\"mt-64 flex justify-center h-screen\"><img className=\"h-28\" src={loading} alt=\"loading\" /></div>\n\n        }\n\n  */","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["63"],[],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\nimport saveFavorites from './savefavorites_function'\nimport removeFavorite from './removefavorites_function'\n\n\nconst RecipePage = ({ foodid, similarfoods }) => {\n\n  const [currentfood_id, set_currentfood_id] = useState(foodid)\n  const [recipedata, set_recipedata] = useState([]);\n  const [recipetext, set_recipetext] = useState([]);\n  const [ingredients, set_ingridients] = useState([]);\n  const [ingredientamount, set_ingredientsamount] = useState([]);\n  const [youtubeid, set_youtubeid] = useState(\"\");\n  const [showvideo, set_showvideo] = useState(false);\n  const [isfavorite, set_isfavorite] = useState(false);\n  let favoritefoods = [];\n\n  const getRecipe = async () => {\n\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${currentfood_id}`)\n\n      if (localStorage.getItem(\"SavedFoods\")) {\n        favoritefoods = localStorage.getItem(\"SavedFoods\").split(\",\");\n        if (favoritefoods.includes(currentfood_id)) { set_isfavorite(true); }\n      }\n\n\n      set_recipedata(result.data.meals)\n      let temparr = result.data.meals[0].strInstructions.split(\"\\n\");\n\n      set_recipetext(temparr);\n\n      temparr = [];\n      let temparr_two = [];\n\n      for (let i = 1; i < 21; i++) {\n        let str = \"strIngredient\" + i;\n        let str2 = \"strMeasure\" + i;\n\n        if (result.data.meals[0][str] || result.data.meals[0][str] !== \"\") {\n          temparr.push(result.data.meals[0][str])\n          temparr_two.push(result.data.meals[0][str2])\n        }\n\n        if (result.data.meals[0][str] == null) {\n          temparr.pop();\n          temparr_two.pop();\n        }\n      }\n\n\n      set_ingridients(temparr);\n      set_ingredientsamount(temparr_two);\n\n      temparr = []; temparr_two = [];\n\n      temparr = result.data.meals[0].strYoutube.split(\"=\");\n\n      set_youtubeid(temparr[temparr.length - 1]);\n      temparr = [];\n\n\n    } catch (e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e) }\n\n  }\n\n  useEffect(() => { set_isfavorite(false); getRecipe() }, [currentfood_id])\n\n\n\n\n  return (<section className=\"mt-8\">\n    {recipedata.length === 0 ? <div className=\"flex item-center justify-center\">\n      <img src={loading} alt=\"loading\" className=\"\" />\n    </div> :\n      <div className=\"mt-16\">\n        {\n          recipedata.map(item => (\n            <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}`}>\n              <section key={`${item.strMeal} ${item.strMeal} ${item.idMeal}1`} className=\"flex flex-row items-center\">\n                <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}2`} className=\"ml-2 flex flex-col w-2/4\">\n                  <img className=\"ml-1\" key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} width=\"480\" height=\"315\" />\n                  <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}3`} className=\"flex justify-between\">\n                    <h4 className=\"text-center border-b-2 font-black pl-2 w-3/5\" key={item.strMeal}>{item.strMeal} </h4>\n                    {isfavorite ?\n\n                      <button key={`${item.idMeal}${item.idMeal}1`} className=\"pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => {set_isfavorite(false); removeFavorite(\"food\", item.idMeal)}}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"ml-2\">Saved</p></button> :\n\n                      <button key={`${item.idMeal}${item.idMeal}2`} className=\"text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex \" onClick={() => { set_isfavorite(true); saveFavorites(\"food\", item.idMeal) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"ml-2\">Add to Favories</p></button>\n                    }\n                  </div>\n                </div>\n\n                {!showvideo && <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}5`} className=\"border-1 rounded-full bg-amber-300 px-8 py-2 flex flex-row justify-between font-mono ml-24 hover:bg-amber-400 \" onClick={() => set_showvideo(true)}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mr-4 self-center\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M8.051 1.999h.089c.822.003 4.987.033 6.11.335a2.01 2.01 0 0 1 1.415 1.42c.101.38.172.883.22 1.402l.01.104l.022.26l.008.104c.065.914.073 1.77.074 1.957v.075c-.001.194-.01 1.108-.082 2.06l-.008.105l-.009.104c-.05.572-.124 1.14-.235 1.558a2.007 2.007 0 0 1-1.415 1.42c-1.16.312-5.569.334-6.18.335h-.142c-.309 0-1.587-.006-2.927-.052l-.17-.006l-.087-.004l-.171-.007l-.171-.007c-1.11-.049-2.167-.128-2.654-.26a2.007 2.007 0 0 1-1.415-1.419c-.111-.417-.185-.986-.235-1.558L.09 9.82l-.008-.104A31.4 31.4 0 0 1 0 7.68v-.123c.002-.215.01-.958.064-1.778l.007-.103l.003-.052l.008-.104l.022-.26l.01-.104c.048-.519.119-1.023.22-1.402a2.007 2.007 0 0 1 1.415-1.42c.487-.13 1.544-.21 2.654-.26l.17-.007l.172-.006l.086-.003l.171-.007A99.788 99.788 0 0 1 7.858 2h.193zM6.4 5.209v4.818l4.157-2.408L6.4 5.209z\" /></svg><span className=\"self-center\">Watch Video Instead</span></button>}\n\n                {\n                  (showvideo && youtubeid !== \"\") && <div className=\"ml-8\" key={`${item.strMeal} ${item.strMeal} ${item.idMeal}6`}>\n                    <iframe key={`${item.strMeal} ${item.strMeal} ${item.idMeal}9`} width=\"440\" height=\"425\" src={`https://www.youtube.com/embed/${youtubeid}`} title=\"YouTube video player\" frameborder=\"0\" allowFullScreen></iframe>\n                    <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}10`} className=\"w-full hover:bg-gray-200\" onClick={() => set_showvideo(false)}>❌</button>\n                  </div>\n                }\n\n              </section>\n\n              <section className=\"flex flex-col justify-items-center items-center\">\n                {ingredientamount.length > 0 && <div className=\"bg-gray-100 rounded-r-lg w-5/12 my-20 py-8 pl-4 font-serif\t\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 pb-8\">Ingredients Needed</h2>\n                  {ingredients.map(obj => (<p className=\"text-center leading-8\" key={`${item.idMeal}${obj} ${item.idMeal}`}>{ingredientamount[ingredients.indexOf(obj)]} {obj}</p>))}\n                </div>}\n\n                <div className=\"w-3/4 border-l-2 border-l-green-700 pl-8 my-40 font-serif leading-8\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 mb-8 font-bold \">Recipe</h2>\n                  {recipetext.map(steps => (steps !== \"\" && <p key={steps}> {steps}</p>))}\n                </div>\n\n\n              </section>\n\n\n            </div>\n\n          ))\n        } </div>}\n\n    {recipedata.length !== 0 && <h2 className=\"capitalize text-xl leading-10 font-light pl-2 ml-24 \">Similar Foods</h2>}\n\n    <div className=\"h-96 overflow-y-scroll ml-24 \">\n\n      {similarfoods.map(item => (<div className=\"float-left w-1/5 ml-2\" onClick={() => set_currentfood_id(item.idMeal)} key={`${item.idMeal}${item.strMealThumb}${item.strMeal}`}>\n        {\n          (recipedata[0] !== undefined && recipedata[0].strMeal !== item.strMeal) && <div className=\"text-sm font-light hover:opacity-75\" key={`${item.strMealThumb}${item.strMeal}`} >\n            <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n            <p className=\" text-center\" key={item.strMeal}>{item.strMeal}</p>\n          </div>\n        }\n      </div>\n      )\n      )}\n    </div>\n  </section>)\n}\n\nexport default RecipePage;\n",["64","65"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js",["66"],[],{"ruleId":"67","severity":1,"message":"68","line":50,"column":41,"nodeType":"69","endLine":50,"endColumn":52,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":14,"column":10,"nodeType":"73","messageId":"74","endLine":14,"endColumn":15},{"ruleId":"71","severity":1,"message":"75","line":14,"column":17,"nodeType":"73","messageId":"74","endLine":14,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":58,"column":41,"nodeType":"69","endLine":58,"endColumn":52,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"77","line":18,"column":13,"nodeType":"73","messageId":"74","endLine":18,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":20,"column":15,"nodeType":"73","messageId":"74","endLine":20,"endColumn":19},{"ruleId":"67","severity":1,"message":"79","line":31,"column":39,"nodeType":"80","endLine":31,"endColumn":89},{"ruleId":"71","severity":1,"message":"81","line":4,"column":9,"nodeType":"73","messageId":"74","endLine":4,"endColumn":13},{"ruleId":"71","severity":1,"message":"82","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":15},{"ruleId":"71","severity":1,"message":"83","line":14,"column":10,"nodeType":"73","messageId":"74","endLine":14,"endColumn":24},{"ruleId":"71","severity":1,"message":"84","line":15,"column":10,"nodeType":"73","messageId":"74","endLine":15,"endColumn":25},{"ruleId":"71","severity":1,"message":"85","line":22,"column":17,"nodeType":"73","messageId":"74","endLine":22,"endColumn":25},{"ruleId":"67","severity":1,"message":"86","line":66,"column":22,"nodeType":"80","endLine":66,"endColumn":67},{"ruleId":"87","severity":1,"message":"88","line":68,"column":30,"nodeType":"89","messageId":"90","endLine":68,"endColumn":32},{"ruleId":"67","severity":1,"message":"91","line":74,"column":22,"nodeType":"80","endLine":74,"endColumn":68},{"ruleId":"87","severity":1,"message":"88","line":75,"column":28,"nodeType":"89","messageId":"90","endLine":75,"endColumn":30},{"ruleId":"67","severity":1,"message":"92","line":81,"column":22,"nodeType":"80","endLine":81,"endColumn":72},{"ruleId":"87","severity":1,"message":"88","line":82,"column":29,"nodeType":"89","messageId":"90","endLine":82,"endColumn":31},{"ruleId":"67","severity":1,"message":"93","line":70,"column":59,"nodeType":"69","endLine":70,"endColumn":75,"suggestions":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"67","severity":1,"message":"93","line":64,"column":59,"nodeType":"69","endLine":64,"endColumn":76,"suggestions":"99"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-unused-vars","'isnav' is assigned a value but never used.","Identifier","unusedVar","'set_isnav' is assigned a value but never used.",["101"],"'counter' is assigned a value but never used.","'seta' is assigned a value but never used.","Assignments to the 'favoritereddits' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Link' is defined but never used.","'loading' is defined but never used.","'drinkfavorites' is assigned a value but never used.","'redditfavorites' is assigned a value but never used.","'set_type' is assigned a value but never used.","Assignments to the 'foodfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'drinkfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'redditfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["102"],"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["105"],{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},{"desc":"109","fix":"110"},"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"113","text":"114"},{"range":"115","text":"114"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"116","text":"117"},"Update the dependencies array to be: [currentdrink_id, getRecipe]",{"range":"118","text":"119"},[1814,1825],"[getFoods_list, navChoice]",[2262,2273],[2123,2139],"[currentfood_id, getRecipe]",[1982,1999],"[currentdrink_id, getRecipe]"]