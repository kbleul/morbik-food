[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js":"7"},{"size":221,"mtime":1644841289213,"results":"8","hashOfConfig":"9"},{"size":1155,"mtime":1645956859410,"results":"10","hashOfConfig":"9"},{"size":247,"mtime":1645884780063,"results":"11","hashOfConfig":"9"},{"size":1309,"mtime":1644515908434,"results":"12","hashOfConfig":"9"},{"size":2758,"mtime":1645884115328,"results":"13","hashOfConfig":"9"},{"size":3631,"mtime":1645873680386,"results":"14","hashOfConfig":"9"},{"size":2743,"mtime":1645957889328,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"165v2a5",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js",["39"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["40"],[],"import  {useState , useEffect} from 'react'\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\n\n\nconst RecipePage = ({foodid , similarfoods}) => {\n\n    const [currentfood_id, set_currentfood_id] = useState(foodid)\n    const [recipedata, set_recipedata] = useState([]);\n    const [recipetext, set_recipetext] = useState([]);\n    const [ingredients , set_ingridients] = useState([]);\n    const [ingredientamount , set_ingredientsamount] = useState([]);\n    const [youtubeid, set_youtubeid ] = useState(\"\");\n    const [showvideo , set_showvideo] = useState(false);\n  \n    const getRecipe = async () => {\n  \n      try {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${currentfood_id}`)\n  \n        set_recipedata(result.data.meals)\n        let temparr = result.data.meals[0].strInstructions.split(\"\\n\"); \n  \n        set_recipetext(temparr);\n        \n        temparr= [];\n       let temparr_two = [];\n  \n            for(let i=1; i<21 ; i++)\n            { \n              let str = \"strIngredient\" + i;\n              let str2 = \"strMeasure\" + i;\n  \n              if( result.data.meals[0][str] || result.data.meals[0][str] !== \"\" )  \n              { temparr.push(result.data.meals[0][str])  \n                temparr_two.push(result.data.meals[0][str2]) }\n          \n               if(result.data.meals[0][str] == null)\n              {  temparr.pop();\n                temparr_two.pop();  }\n            }\n  \n            set_ingridients(temparr);\n            set_ingredientsamount(temparr_two);\n  \n                 temparr =[];  temparr_two =[];\n              \n              temparr = result.data.meals[0].strYoutube.split(\"=\");\n\n              set_youtubeid(temparr[temparr.length-1]);\n              temparr= [];\n          \n  \n      }catch(e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e)}\n   \n    }\n  \n    useEffect(() => {  getRecipe()  },[currentfood_id])\n  \n    return (<section>\n      {recipedata.length === 0 ? <img src={loading} alt=\"loading\" /> :\n      <div>\n      {\n        recipedata.map(item => (\n          <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}`}>\n            <h4 key={item.strMeal}>{item.strMeal}</h4>\n            <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} width=\"300\" height=\"315\"/>\n            { recipetext.map(steps => (steps !== \"\" &&  <p key={steps}> {steps}</p>   )) }\n  \n  \n            { ingredientamount.length >0 && <div>{ ingredients.map(obj => (<p key={`${item.idMeal}${obj} ${item.idMeal}`}>-{ingredientamount[ingredients.indexOf(obj)] } {obj}</p>   )) }\n          </div> }\n  \n          <button onClick={ () => set_showvideo(true) }>Watch Video</button>\n  \n          {\n           (showvideo && youtubeid !== \"\" ) && <div>\n            <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${youtubeid}` } title=\"YouTube video player\" frameborder=\"0\"  allowFullScreen></iframe>\n            </div>\n          }\n        \n    \n          </div>\n   \n        ))\n      } </div>}\n\n          <div>\n    \n      {  similarfoods.map(item => ( <div onClick={() => set_currentfood_id(item.idMeal)} key={`${item.idMeal}${item.strMealThumb}${item.strMeal}`}>\n        {\n         (recipedata[0] !== undefined && recipedata[0].strMeal !== item.strMeal ) &&  <div key={`${item.strMealThumb}${item.strMeal}`} >\n        <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} width=\"100\" height=\"150\" />\n        <p key={item.strMeal}>{item.strMeal}</p>\n        </div>  \n        }\n                    </div>\n        )\n        )}\n        </div>\n      </section>)\n  }\n\nexport default RecipePage;\n",["41","42"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":48,"column":40,"nodeType":"45","endLine":48,"endColumn":52,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":58,"column":39,"nodeType":"45","endLine":58,"endColumn":55,"suggestions":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["53"],"React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["54"],"no-native-reassign",["55"],"no-negated-in-lhs",["56"],{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"61","text":"62"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"63","text":"64"},[1782,1794],"[getFoods_list, navChoice]",[1901,1917],"[currentfood_id, getRecipe]"]