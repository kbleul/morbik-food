[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js":"7","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipecontent.js":"8","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/redditpage.js":"9","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js":"10","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/food_subredditlist.js":"11","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js":"12"},{"size":221,"mtime":1644841289213,"results":"13","hashOfConfig":"14"},{"size":881,"mtime":1646321016725,"results":"15","hashOfConfig":"14"},{"size":564,"mtime":1646151026407,"results":"16","hashOfConfig":"14"},{"size":1263,"mtime":1646074727087,"results":"17","hashOfConfig":"14"},{"size":2960,"mtime":1646133102754,"results":"18","hashOfConfig":"14"},{"size":5907,"mtime":1646208459828,"results":"19","hashOfConfig":"14"},{"size":3785,"mtime":1646134648452,"results":"20","hashOfConfig":"14"},{"size":1172,"mtime":1646161491211,"results":"21","hashOfConfig":"14"},{"size":337,"mtime":1646318819803,"results":"22","hashOfConfig":"14"},{"size":1900,"mtime":1646325306606,"results":"23","hashOfConfig":"14"},{"size":599,"mtime":1646334802387,"results":"24","hashOfConfig":"14"},{"size":5610,"mtime":1646334575744,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"165v2a5",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js",[],[],["66","67"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js",["68","69","70"],[],"import React , {useState , useEffect} from 'react'\nimport axios from 'axios'\nimport RecipePage from './recipepage'\n\nconst Main = ({navChoice,setChoice, choicetype , set_choicetype, togglerecipe_page, set_togglerecipe_page}) => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  \n  const [recipefor , set_recipefor] = useState(\"\");\n  const [isnav , set_isnav] = useState(\"text-xs font-black bg-white border-2 rounded-full px-6 py-2 mb-2 ml-4\")\n\n  const getCatagories = async () => {\n     try {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n    set_catagories(result.data.meals)\n\n     }catch(e) { console.log(\"Fetch catagory failed ! \" + e)}\n  }\n\n  const getFoods_list = async () => {\n    try {\n      if(choicetype === \"c\"){\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${navChoice}`)\n        if( result.data.meals== null  ) {  set_frontfood_list([\"No Food Found Error\"])}\n       else { set_frontfood_list(result.data.meals)}\n\n      }\n      else if(choicetype === \"a\") {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${navChoice}`)\n      if( result.data.meals == null  ) { set_frontfood_list([{\"idMeal\" : \"No Food Found Error\"}]) }\n      else { set_frontfood_list(result.data.meals)}\n\n      }\n      else { \n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${navChoice}`)\n      if( result.data.meals == null  ) {  set_frontfood_list([\"No Food Found Error\"]) }\n      else { set_frontfood_list(result.data.meals) }\n\n      }\n        \n    }catch(e) { console.log(`Fetch ${navChoice} based foods failed !  ` + e)}\n\n  }\n\n\n  useEffect(() => {  getCatagories();  },[])\n\n  useEffect(() => { getFoods_list(); },[navChoice ])\n\n\n\n  return (\n    <article className=\"ml-4 mt-2 \">\n       <section className=\" \">\n        {\n          catagories.map(item => (\n            <button className=\"  text-xs font-black bg-amber-400 border-0 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 \" key={item.strCategory} onClick={() =>{ set_choicetype(\"c\"); setChoice(item.strCategory); set_togglerecipe_page(false); }}>{item.strCategory}</button>\n          ))\n        }\n        </section>\n\n  { togglerecipe_page ? <RecipePage foodid={recipefor} similarfoods= {frontfood_list} /> :\n     <section className=\"grid grid-cols-3 gap-2 m-16\">\n         { frontfood_list[0] === \"No Food Found Error\" ? <div><p>No available food for this ingrident.</p></div> :\n           frontfood_list.map(item => (\n             <div key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_togglerecipe_page(true);}}>\n             <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n             <p key={item.strMeal}>{item.strMeal}</p>\n\n             </div>\n           ))\n         }\n        </section>}\n    </article>\n  )\n}\n\n\nexport default Main\n\n","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["71"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipecontent.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/redditpage.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js",["72"],[],"import  {useState , useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\n\nimport list from \"./food_subredditlist\"\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\n\n\nconst SubredditListPage = () => {\n   \n    const [reddit, setreddit] = useState([]);\n\n    useEffect(() => {\n\n        let temparr = [];\n        let counter = 0;\n\n        const fetchsubreddit = async (item) => {\n\n            try {\n            const result = await axios(`https://www.reddit.com/r/${item}/.json`);\n\n            temparr.push(result.data.data.children[0].data);\n\n            if (temparr.length === 41) { setreddit(temparr); temparr = []; }\n                counter++;\n\n            } catch(e) { console.log(\"Fetch \" + item + \" failed.\" + e) }\n\n        }\n\n        for (let item of list) { fetchsubreddit(item); }\n\n    }, [])\n\n\n    return (<div className=\"\">\n    <div>\n        <button>Foods</button>\n        <button>Drinks</button>\n    </div>\n    {reddit.length === 0 ? <div className=\"flex item-center\"><img src={loading} alt=\"loading\" className=\"loadingimg\" /> </div>:\n            <div className=\"grid grid-cols-5 gap-3\">\n                   { reddit.map(item => (\n                       <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n                       <section key={item.permalink} className=\"\">\n                        <p key={item.subreddit}>{item.subreddit}</p>\n                        <p key={item.subreddit_name_prefixed} className=\"\">{item.subreddit_name_prefixed}</p>\n                        <p key={item.subreddit_type}>{item.subreddit_type}</p>\n                        <p key={item.id} className=\"\">Subscribers - {item.subreddit_subscribers}</p>\n                    </section>\n                    </Link>\n                    ))\n                   }\n             </div>\n                }    \n    </div>)\n\n};\n\n\n\nexport default SubredditListPage",["73","74"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/food_subredditlist.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js",["75"],[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":10,"column":18,"nodeType":"82","messageId":"83","endLine":10,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":48,"column":40,"nodeType":"87","endLine":48,"endColumn":52,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":59,"column":36,"nodeType":"87","endLine":59,"endColumn":52,"suggestions":"90"},{"ruleId":"80","severity":1,"message":"91","line":16,"column":13,"nodeType":"82","messageId":"83","endLine":16,"endColumn":20},{"ruleId":"76","replacedBy":"92"},{"ruleId":"78","replacedBy":"93"},{"ruleId":"80","severity":1,"message":"94","line":14,"column":14,"nodeType":"82","messageId":"83","endLine":14,"endColumn":18},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'isnav' is assigned a value but never used.","Identifier","unusedVar","'set_isnav' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["98"],"'counter' is assigned a value but never used.",["95"],["96"],"'seta' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"103","text":"104"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"105","text":"106"},[1831,1843],"[getFoods_list, navChoice]",[1701,1717],"[currentfood_id, getRecipe]"]