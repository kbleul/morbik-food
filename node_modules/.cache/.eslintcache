[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js":"5"},{"size":221,"mtime":1644841289213,"results":"6","hashOfConfig":"7"},{"size":596,"mtime":1644853357803,"results":"8","hashOfConfig":"7"},{"size":204,"mtime":1644841587771,"results":"9","hashOfConfig":"7"},{"size":1309,"mtime":1644515908434,"results":"10","hashOfConfig":"7"},{"size":3536,"mtime":1644955484440,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"genlb3",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js",[],[],["29","30"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js",["31","32"],[],"import React , {useState , useEffect} from 'react'\nimport axios from 'axios'\n\nconst Main = () => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  const [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n  const [showrecipe_page , set_showrecipe_page] = useState(false);\n  const [recipefor , set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n     try {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n    set_catagories(result.data.meals)\n\n     }catch(e) { console.log(\"Fetch catagory failed ! \" + e)}\n  }\n\n  const getFoods_list = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${currentcatagory}`)\n      set_frontfood_list(result.data.meals)\n\n        \n    }catch(e) { console.log(`Fetch ${currentcatagory} based foods failed !  ` + e)}\n\n  }\n\n\n  useEffect(() => {  getCatagories();  },[])\n\n  useEffect(() => { getFoods_list(); },[currentcatagory])\n\n  return (\n    <article>\n       <section>\n        {\n          catagories.map(item => (\n            <button key={item.strCategory} onClick={() => set_currentcatagory(item.strCategory) }>{item.strCategory}</button>\n          ))\n        }\n        </section>\n\n  { showrecipe_page ? <RecipePage foodid={recipefor}/> :\n     <section className=\"grid grid-cols-3 gap-2\">\n         {\n           frontfood_list.map(item => (\n             <div key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_showrecipe_page(true);}}>\n             <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n             <p key={item.strMeal}>{item.strMeal}</p>\n\n             </div>\n           ))\n         }\n        </section>}\n    </article>\n  )\n}\n\nconst RecipePage = ({foodid}) => {\n\n  const [recipedata, set_recipedata] = useState([]);\n  const [recipetext, set_recipetext] = useState([]);\n  const [ingredients , set_ingridients] = useState([]);\n  const [ingredientamount , set_ingredientsamount] = useState([]);\n\n\n  const getRecipe = async () => {\n\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${foodid}`)\n\n      set_recipedata(result.data.meals)\n      let temparr = result.data.meals[0].strInstructions.split(\".\"); \n\n      set_recipetext(temparr);\n\n      temparr= [];\n     let temparr_two = [];\n\n          for(let i=1; i<21 ; i++)\n          { \n            let str = \"strIngredient\" + i;\n            let str2 = \"strMeasure\" + i;\n              temparr.push(result.data.meals[0][str])  \n              temparr_two.push(result.data.meals[0][str2])  \n          }\n\n          set_ingridients(temparr);\n          set_ingredientsamount(temparr_two);\n\n               temparr =[];  temparr_two =[];\n               console.log(ingredients)\n               console.log(ingredientamount);\n\n\n    }catch(e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e)}\n  }\n\n  useEffect(() => {  getRecipe()  },[])\n\n  return (<section>\n    {\n      recipedata.map(item => (\n        <div key={`${item.strMeal} ${item.idMeal}`}>\n          <h4 key={item.strMeal}>{item.strMeal}</h4>\n          <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n          { recipetext.map(steps => (   <p key={steps}>- {steps}</p>   )) }\n\n          { ingredients.map(obj => (obj !== \"\" && <p key={obj}>{obj} ------- {ingredientamount[ingredients.indexOf(obj)] }</p>   )) }\n\n        </div>\n      ))\n    }\n    </section>)\n}\n\nexport default Main",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":32,"column":40,"nodeType":"39","endLine":32,"endColumn":57,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":100,"column":37,"nodeType":"39","endLine":100,"endColumn":39,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["45"],"React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: [currentcatagory, getFoods_list]",{"range":"51","text":"52"},"Update the dependencies array to be: [getRecipe]",{"range":"53","text":"54"},[1032,1049],"[currentcatagory, getFoods_list]",[3003,3005],"[getRecipe]"]