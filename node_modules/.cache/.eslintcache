[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/savefavorites_function.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js":"7","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/removefavorites_function.js":"8","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinks_subredditlist.js":"9","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/redditpage.js":"10","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js":"11","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js":"12","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksnav.js":"13"},{"size":6907,"mtime":1646906154099,"results":"14","hashOfConfig":"15"},{"size":4252,"mtime":1646763649760,"results":"16","hashOfConfig":"15"},{"size":1118,"mtime":1646502311196,"results":"17","hashOfConfig":"15"},{"size":12695,"mtime":1646905135687,"results":"18","hashOfConfig":"15"},{"size":3676,"mtime":1646675535238,"results":"19","hashOfConfig":"15"},{"size":7282,"mtime":1646728387783,"results":"20","hashOfConfig":"15"},{"size":5081,"mtime":1646728512689,"results":"21","hashOfConfig":"15"},{"size":782,"mtime":1646733626739,"results":"22","hashOfConfig":"15"},{"size":280,"mtime":1646736827112,"results":"23","hashOfConfig":"15"},{"size":219,"mtime":1646755920731,"results":"24","hashOfConfig":"15"},{"size":743,"mtime":1646755263512,"results":"25","hashOfConfig":"15"},{"size":4989,"mtime":1646759892283,"results":"26","hashOfConfig":"15"},{"size":7225,"mtime":1646762860711,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"165v2a5",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js",["68","69","70","71","72","73"],[],"\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {Link} from \"react-router-dom\"\nimport loading from \"./imgs/loading.gif\"\nimport Fotter from \"./fotter.js\"\nimport RecipePage from './recipepage'\nimport DrinkRecipePage from './drinksrecipepage'\n\n\nconst MyFavorites = () => {\n\n  const [foodfavorites, set_foodfavorites] = useState([]);\n  const [drinkfavorites, set_drinkfavorites] = useState([]);\n  const [redditfavorites, set_redditfavorites] = useState([]);\n\n  const [frontfood_list , set_frontfood_list] = useState([]);\n\n  const [recipefor , set_recipefor] = useState(\"\");\n  const [drink_recipefor , set_drink_recipefor] = useState(\"\");\n  const [reloadpage, set_reloadpage] = useState(1)\n\n\n  let foodfavs_arr = [];\n  let drinkfavs_arr = [];\n  let redditfavs_arr = [];\n\n  \n  let temparr = []\n  let temparr2 = []\n  let temparr3 = []\n\n\n  const fetchfood = async (item) => {\n  const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${item}`);\n  temparr.push(result.data.meals[0])\n               if(temparr.length === foodfavs_arr.length)\n                  {  set_foodfavorites(temparr); }\n}\n\nconst fetchdrink = async (item) => {\n  const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${item}`);\n  temparr2.push(result.data.drinks[0])\n             console.log(item)\n               if(temparr2.length === drinkfavs_arr.length)\n                  {  set_drinkfavorites(temparr2)}\n}\n\nconst fetchreddit = async (item) => {\n  const result = await axios(`https://www.reddit.com/r/${item}.json`);\n  temparr3.push(result.data.data.children[0].data)\n               if(temparr3.length === redditfavs_arr.length)\n                  {  set_redditfavorites(temparr3)}\n}\n\n  useEffect(() => { console.log(\"reloaded\")\n    if (localStorage.getItem(\"SavedFoods\")) {\n      foodfavs_arr = localStorage.getItem(\"SavedFoods\").split(\",\");\n       foodfavs_arr.map(item => {\n        fetchfood(item);\n    })\n  } else { set_foodfavorites([\"None\"])}\n\n   if (localStorage.getItem(\"SavedDrinks\")) {\n     drinkfavs_arr = localStorage.getItem(\"SavedDrinks\").split(\",\");\n    drinkfavs_arr.map(item => {\n      fetchdrink(item);\n    })  \n  } else { set_drinkfavorites([\"None\"])}\n  \n  if (localStorage.getItem(\"SavedSubReddits\")) {\n    redditfavs_arr = localStorage.getItem(\"SavedSubReddits\").split(\",\");\n    redditfavs_arr.map(item => {\n      fetchreddit(item);\n   })\n  } else { set_redditfavorites([\"None\"])}\n\n  },[reloadpage])\n  \n  //type== food,drink or reddit catagory == strCatagory\n  const viewFavorite = (type ,id , catagory) => {\n     \n   if(type === \"food\") {\n    const fetchitems = async () => {\n        try {\n          const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${catagory}`);\n          if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\n          else { set_frontfood_list(result.data.meals) }\n          set_recipefor(id);\n        } catch(e) { console.log(`Fetch ${catagory} based foods failed !  ` + e)  }\n      }\n\n      fetchitems();\n    }\n    else if(type=== \"drink\") {\n      const fetchitems = async () => {\n        try {\n          const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${catagory}`);\n          if (result.data.drinks == null) { set_frontfood_list([\"No Food Found Error\"]) }\n          else { set_frontfood_list(result.data.drinks) }\n          set_drink_recipefor(id);\n        } catch(e) { console.log(`Fetch ${catagory} based drinks failed !  ` + e)  }\n      }\n\n      fetchitems();\n    }\n  }\n\n  return (<article >\n    {drink_recipefor !== \"\" &&  <div className=\"pl-32 mt-16\">\n    <button onClick = {() => {set_reloadpage(reloadpage + 1); set_drink_recipefor(\"\"); }}>←</button>\n    <DrinkRecipePage drinkid={drink_recipefor} similardrinks={frontfood_list} /></div>}\n\n    {recipefor !== \"\" && <div className=\"pl-32 mt-16\">\n    <button onClick = {() => {set_reloadpage(reloadpage + 1); set_recipefor(\"\"); }}>←</button>\n      <RecipePage foodid={recipefor} similarfoods={frontfood_list} />\n    </div>  }\n    { (drink_recipefor === \"\" &&  recipefor === \"\") &&    <article>\n        {foodfavorites.length > 0 && <div>{ foodfavorites[0] === \"None\" ?\n        <div><p>No saved food recipes found ....</p></div> : <section className=\"h-screen \">\n          <h1>Favorite Foods</h1>\n          <div className=\"grid grid-cols-3 gap-10\">\n    \n            {foodfavorites.map(item => (\n              <div key={item.idMeal} onClick={() => viewFavorite(\"food\",item.idMeal , item.strCategory)}>\n                <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n                <h3 key={item.strMeal}>{item.strMeal}</h3>\n                <p key={`${item.strMeal}${item.idMeal}`}>{item.strTags ? `${item.strTags}` : \"\"}</p>\n              </div>\n            ))\n            }\n          </div>\n        </section>}</div>\n        }\n        {drinkfavorites.length > 0 ? <div>{ drinkfavorites[0] === \"None\" ?\n        <div><p>No saved drinks recipes found ....</p></div> : <section>\n          <h1>Favorite Drinks</h1>\n          <div className=\"grid grid-cols-3 gap-10\">\n    \n            {drinkfavorites.map(item => (\n              <div key={item.idDrink} onClick={() => viewFavorite(\"drink\",item.idDrink , item.strCategory)}>\n                <img key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} />\n                <h3 key={item.strDrink}>{item.strDrink}</h3>\n                <p  key={`${item.strAlcoholic}${item.strDrink}`}>{item.strTags ? `${item.strTags}` : \"\"}</p>\n              </div>\n            ))\n            }\n          </div>\n        </section>  } </div> :\n        <div className=\"mt-64 flex justify-center\"><img className=\"w-16\" src={loading} alt=\"loading\" /></div>\n        }\n        {redditfavorites.length > 0 ? <div>{ redditfavorites[0] === \"None\" ?\n        <div className=\"border-2\"><p>No saved subreddits ....</p></div> : <section>\n          <h1>Favorite Subreddits</h1>\n          <div className=\"grid grid-cols-3 gap-10\">\n    \n            {redditfavorites.map(item => (\n              <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n              <div className=\"border-b\" key={item.subreddit_id}>\n                <h3 key={item.subreddit}>{item.subreddit_name_prefixed}</h3>\n                <p key={`${item.subreddit}${item.subreddit_subscribers}`}>{item.subreddit_subscribers ? `Subscribers ${item.subreddit_subscribers}` : \"\"}</p>\n                <p key={`${item.subreddit_id}${item.subreddit}`}>{item.subreddit_type}</p>\n              </div>\n              </Link>\n            ))\n            }\n          </div>\n        </section>  } </div> :        \n        <div className=\"mt-64 flex justify-center\"><img className=\"w-24\" src={loading} alt=\"loading\" /></div>\n\n        }\n      </article>}\n\n  <Fotter />\n\n  </article>\n  )\n}\n\nexport default MyFavorites","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js",["74"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/savefavorites_function.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js",["75","76"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js",["77","78","79"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["80"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js",["81"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/removefavorites_function.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinks_subredditlist.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/redditpage.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksnav.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":58,"column":22,"nodeType":"84","endLine":58,"endColumn":67},{"ruleId":"85","severity":1,"message":"86","line":59,"column":30,"nodeType":"87","messageId":"88","endLine":59,"endColumn":32},{"ruleId":"82","severity":1,"message":"89","line":65,"column":22,"nodeType":"84","endLine":65,"endColumn":68},{"ruleId":"85","severity":1,"message":"86","line":66,"column":28,"nodeType":"87","messageId":"88","endLine":66,"endColumn":30},{"ruleId":"82","severity":1,"message":"90","line":72,"column":22,"nodeType":"84","endLine":72,"endColumn":72},{"ruleId":"85","severity":1,"message":"86","line":73,"column":29,"nodeType":"87","messageId":"88","endLine":73,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":18,"column":13,"nodeType":"93","messageId":"94","endLine":18,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":18,"column":15,"nodeType":"93","messageId":"94","endLine":18,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":29,"column":39,"nodeType":"84","endLine":29,"endColumn":89},{"ruleId":"91","severity":1,"message":"97","line":12,"column":10,"nodeType":"93","messageId":"94","endLine":12,"endColumn":15},{"ruleId":"91","severity":1,"message":"98","line":12,"column":17,"nodeType":"93","messageId":"94","endLine":12,"endColumn":26},{"ruleId":"82","severity":1,"message":"99","line":56,"column":41,"nodeType":"100","endLine":56,"endColumn":52,"suggestions":"101"},{"ruleId":"82","severity":1,"message":"102","line":70,"column":59,"nodeType":"100","endLine":70,"endColumn":75,"suggestions":"103"},{"ruleId":"82","severity":1,"message":"102","line":64,"column":59,"nodeType":"100","endLine":64,"endColumn":76,"suggestions":"104"},"react-hooks/exhaustive-deps","Assignments to the 'foodfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'drinkfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'redditfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-unused-vars","'counter' is assigned a value but never used.","Identifier","unusedVar","'seta' is assigned a value but never used.","Assignments to the 'favoritereddits' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'isnav' is assigned a value but never used.","'set_isnav' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["106"],["107"],{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"114","text":"115"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"116","text":"117"},"Update the dependencies array to be: [currentdrink_id, getRecipe]",{"range":"118","text":"119"},[2220,2231],"[getFoods_list, navChoice]",[2123,2139],"[currentfood_id, getRecipe]",[1982,1999],"[currentdrink_id, getRecipe]"]