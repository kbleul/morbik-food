[{"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\index.js":"1","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\App.js":"2","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\ThemeContext.js":"3","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\recipecontent.js":"4","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\redditpage.js":"5","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinkrecipecontent.js":"6","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\header.js":"7","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\subredditlistpage.js":"8","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\subreddit.js":"9","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\MyFavorites.js":"10","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\locationcontext.js":"11","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\fotter.js":"12","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\main.js":"13","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinksmain.js":"14","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinksnav.js":"15","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\ThemeToggle.js":"16","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\tooglemenus.js":"17","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\food_subredditlist.js":"18","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinks_subredditlist.js":"19","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\nav.js":"20","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\savefavorites_function.js":"21","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\removefavorites_function.js":"22","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\recipepage.js":"23","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinksrecipepage.js":"24"},{"size":325,"mtime":1647521874818,"results":"25","hashOfConfig":"26"},{"size":1575,"mtime":1648037825819,"results":"27","hashOfConfig":"26"},{"size":1258,"mtime":1647964621251,"results":"28","hashOfConfig":"26"},{"size":1319,"mtime":1647954258752,"results":"29","hashOfConfig":"26"},{"size":476,"mtime":1647521874818,"results":"30","hashOfConfig":"26"},{"size":1248,"mtime":1647706206035,"results":"31","hashOfConfig":"26"},{"size":8779,"mtime":1647966202497,"results":"32","hashOfConfig":"26"},{"size":4691,"mtime":1648038647349,"results":"33","hashOfConfig":"26"},{"size":18757,"mtime":1647964585230,"results":"34","hashOfConfig":"26"},{"size":14630,"mtime":1648038281398,"results":"35","hashOfConfig":"26"},{"size":121,"mtime":1647964365318,"results":"36","hashOfConfig":"26"},{"size":2832,"mtime":1647961639908,"results":"37","hashOfConfig":"26"},{"size":4431,"mtime":1647951521260,"results":"38","hashOfConfig":"26"},{"size":4957,"mtime":1648038344240,"results":"39","hashOfConfig":"26"},{"size":8297,"mtime":1647951034706,"results":"40","hashOfConfig":"26"},{"size":2005,"mtime":1647607782602,"results":"41","hashOfConfig":"26"},{"size":861,"mtime":1647965810952,"results":"42","hashOfConfig":"26"},{"size":606,"mtime":1647521874621,"results":"43","hashOfConfig":"26"},{"size":285,"mtime":1647521874621,"results":"44","hashOfConfig":"26"},{"size":5758,"mtime":1647950784524,"results":"45","hashOfConfig":"26"},{"size":1150,"mtime":1647521874826,"results":"46","hashOfConfig":"26"},{"size":791,"mtime":1647964446158,"results":"47","hashOfConfig":"26"},{"size":8627,"mtime":1647705211743,"results":"48","hashOfConfig":"26"},{"size":6614,"mtime":1647952501604,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1aw47h3",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\index.js",[],[],["133","134"],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\App.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\ThemeContext.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\recipecontent.js",["135"],[],"import { useState,useEffect, useContext } from 'react';\r\nimport location_context from \"./locationcontext\"\r\nimport Main from \"./main\";\r\nimport Navigation from \"./nav\";\r\n\r\nconst RecipeContent = () => {\r\n  const [selectedCatagory, set_selectedCatagory] = useState(\"Beef\");\r\n  const [catagoryType, set_catagorytype] = useState(\"c\");\r\n  //Categories, Area, Ingredients (c,i,a)\r\n  const [showrecipe_page, set_showrecipe_page] = useState(false);\r\n  const whereami_arr = useContext(location_context);\r\n\r\n\r\n  useEffect(() => { whereami_arr[1](\"Home\") }, []);\r\n\r\n  return (<div className=\"grid grid-cols-8 gap-3 dark:bg-gray-800 dark:text-white h-full\">\r\n    <nav id=\"sidenav\" className=\"w-11/12 lg:w-full z-10 absolute top-16 left-0 bg-white dark:bg-gray-800 lg:static lg:col-start-1 lg:col-end-3  lg:mt-10 hidden lg:block\">\r\n      <Navigation setnavChoice={set_selectedCatagory} set_choicetype={set_catagorytype} set_togglerecipe_page={set_showrecipe_page} />\r\n    </nav>\r\n    <main className=\"col-start-1 lg:col-start-3 col-end-9  mt-8 \">\r\n      <Main navChoice={selectedCatagory} setChoice={set_selectedCatagory} choicetype={catagoryType} set_choicetype={set_catagorytype} togglerecipe_page={showrecipe_page} set_togglerecipe_page={set_showrecipe_page} />\r\n    </main>\r\n\r\n\r\n  \r\n  </div>)\r\n}\r\n\r\nexport default RecipeContent;\r\n","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\redditpage.js",["136"],[],"import React, { useEffect , useContext } from 'react'\r\nimport { Outlet } from \"react-router-dom\"\r\nimport location_context from \"./locationcontext\"\r\n\r\n\r\n\r\nconst RedditPage = () => {\r\n  const whereami_arr = useContext(location_context);\r\n\r\n  useEffect(() => {\r\n\r\n    whereami_arr[1](\"Reddit\")\r\n\r\n    return () => { whereami_arr[1](\"Home\") };\r\n\r\n  }, []);\r\n\r\n  return (<div className=\" dark:text-white dark:bg-gray-800\">\r\n    <Outlet />\r\n  </div>)\r\n}\r\n\r\nexport default RedditPage","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinkrecipecontent.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\header.js",["137","138"],[],"import { Link } from \"react-router-dom\"\r\nimport { useContext, useEffect } from 'react'\r\nimport logolight from './imgs/logo/logolight.png'\r\nimport logodark from './imgs/logo/logodark.png'\r\nimport Toggle from './ThemeToggle'\r\nimport { ThemeContext } from \"./ThemeContext\"\r\nimport location_context from \"./locationcontext\"\r\nimport {tooglemain_menu, toogleside_menu} from \"./tooglemenus\"\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const { theme, set_theme } = useContext(ThemeContext);\r\n  const whereami_arr = useContext(location_context);\r\n\r\n\r\n  return (<article >\r\n    \r\n      <header className=\"flex  justify-between items-center fixed top-0 w-full z-20 h-16 border-b-2 bg-white dark:bg-black dark:border-0\">\r\n\r\n      {(whereami_arr[0] === \"Home\" || whereami_arr[0] === \"Subreddit_page\") && <button onClick={toogleside_menu} id=\"burgermenu\" className=\"dark:text-white block w-1/4 ml-2 lg:hidden\" ><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 16 16\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M2.75 12.25h10.5m-10.5-4h10.5m-10.5-4h10.5\" /></svg></button>}\r\n          <Link className=\"w-2/4 lg:w-1/4 lg:ml-8\" to=\"/\" >\r\n            <img src={theme === \"light\" ? logolight : logodark} alt=\"logo\" className=\"h-14 brightness-125 hover:brightness-100 lg:mx-4 \" />\r\n          </Link>\r\n          <button id=\"dropdown_btn\" className=\"dark:text-white  w-1/4 flex justify-center lg:hidden hover:text-red-700 \" onClick={tooglemain_menu}>\r\n          <svg id=\"dropdown_svg\" className=\"\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"m5 8l7 8l7-8z\"/></svg>\r\n          <svg id=\"dropdown_upsvg\" className=\"hidden\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\"  d=\"m12 8l7 8H5z\"/></svg>\r\n          </button>\r\n          <div className=\"hidden lg:block\"> <Toggle /> </div>\r\n          <div className=\"w-1/5 hidden lg:block\">\r\n            {whereami_arr[0] === \"Reddit\" ?\r\n              <Link to=\"/reddit\" > <button className={\"text-red-300 ml-2 xl:ml-16 border-b-2 border-red-300 dark:text-red-600\"} >Reddit</button></Link>\r\n              : <Link to=\"/reddit\"> <button className={\"text-red-300 ml-2 xl:ml-16 hover:border-b-2 hover:border-red-300 dark:text-red-600\"} >Reddit</button></Link>}\r\n            {whereami_arr[0] === \"Favorite\" ?\r\n              <Link to=\"/myfavorites\"  > <button className={\"text-red-300 ml-4 xl:ml-16 border-b-2 border-red-300 dark:text-red-600\"} >Favorites</button></Link>\r\n              : <Link to=\"/myfavorites\" > <button className={\"text-red-300  ml-4 xl:ml-16 hover:border-b-2 border-red-300 dark:text-red-600\"} >Favorites</button></Link>}\r\n          </div>\r\n    \r\n      </header>\r\n\r\n\r\n      <section id=\"topnav\" className=\"hidden flex items-center fixed top-16 w-full justify-center bg-white dark:bg-black\">\r\n      {whereami_arr[0] === \"Reddit\" ?\r\n      <Link to=\"/reddit\" onClick={tooglemain_menu} > <button className={\"flex items-center  text-red-300 ml-2 xl:ml-16 border-b-2 border-red-300  dark:text-red-600\"} >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"-2 -3 24 24\"><g fill=\"currentColor\"><path d=\"M19.986 8.029a2.51 2.51 0 0 0-4.285-1.771c-1.404-.906-3.197-1.483-5.166-1.573a2.734 2.734 0 0 1 1.028-2.139a2.735 2.735 0 0 1 2.315-.539l.112.025c0 .028-.004.056-.004.084a2.095 2.095 0 1 0 .328-1.121L14.113.95a3.812 3.812 0 0 0-3.228.752a3.812 3.812 0 0 0-1.433 2.983c-1.97.09-3.762.667-5.165 1.572a2.51 2.51 0 1 0-2.94 3.994c-.061.31-.093.628-.093.952c0 3.606 3.912 6.53 8.74 6.53c4.826 0 8.739-2.924 8.739-6.53c0-.324-.032-.641-.093-.952a2.508 2.508 0 0 0 1.346-2.222zm-3.905-6.925a1.013 1.013 0 0 1 0 2.025a1.013 1.013 0 0 1 0-2.025zM1.083 8.03c0-.787.64-1.427 1.427-1.427c.337 0 .646.118.89.314c-.763.655-1.354 1.425-1.721 2.27a1.423 1.423 0 0 1-.596-1.157zm14.442 6.923c-1.465 1.095-3.43 1.698-5.532 1.698s-4.067-.603-5.531-1.698c-1.37-1.023-2.125-2.355-2.125-3.75c0-1.394.754-2.725 2.125-3.75C5.926 6.359 7.89 5.757 9.993 5.757c2.103 0 4.067.602 5.532 1.697c1.37 1.024 2.125 2.355 2.125 3.75c0 1.394-.755 2.726-2.125 3.75zm2.782-5.767c-.367-.845-.958-1.614-1.721-2.269c.244-.196.554-.314.89-.314c.787 0 1.427.64 1.427 1.427c0 .476-.235.898-.596 1.156z\"/><circle cx=\"6.801\" cy=\"9.678\" r=\"1.143\"/><circle cx=\"13.185\" cy=\"9.678\" r=\"1.143\"/><path d=\"M12.701 12.455a4.357 4.357 0 0 1-2.94 1.138a4.325 4.325 0 0 1-3.195-1.39a.541.541 0 1 0-.793.738a5.47 5.47 0 0 0 3.988 1.735a5.437 5.437 0 0 0 3.67-1.421a.541.541 0 1 0-.73-.8z\"/></g></svg><p className=\"ml-2\">Reddit</p></button></Link>\r\n      : <Link to=\"/reddit\"onClick={tooglemain_menu} > <button className={\"flex items-center  text-red-300 ml-2 xl:ml-16 hover:border-b-2 hover:border-red-300  dark:text-red-600\"} >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"-2 -3 24 24\"><g fill=\"currentColor\"><path d=\"M19.986 8.029a2.51 2.51 0 0 0-4.285-1.771c-1.404-.906-3.197-1.483-5.166-1.573a2.734 2.734 0 0 1 1.028-2.139a2.735 2.735 0 0 1 2.315-.539l.112.025c0 .028-.004.056-.004.084a2.095 2.095 0 1 0 .328-1.121L14.113.95a3.812 3.812 0 0 0-3.228.752a3.812 3.812 0 0 0-1.433 2.983c-1.97.09-3.762.667-5.165 1.572a2.51 2.51 0 1 0-2.94 3.994c-.061.31-.093.628-.093.952c0 3.606 3.912 6.53 8.74 6.53c4.826 0 8.739-2.924 8.739-6.53c0-.324-.032-.641-.093-.952a2.508 2.508 0 0 0 1.346-2.222zm-3.905-6.925a1.013 1.013 0 0 1 0 2.025a1.013 1.013 0 0 1 0-2.025zM1.083 8.03c0-.787.64-1.427 1.427-1.427c.337 0 .646.118.89.314c-.763.655-1.354 1.425-1.721 2.27a1.423 1.423 0 0 1-.596-1.157zm14.442 6.923c-1.465 1.095-3.43 1.698-5.532 1.698s-4.067-.603-5.531-1.698c-1.37-1.023-2.125-2.355-2.125-3.75c0-1.394.754-2.725 2.125-3.75C5.926 6.359 7.89 5.757 9.993 5.757c2.103 0 4.067.602 5.532 1.697c1.37 1.024 2.125 2.355 2.125 3.75c0 1.394-.755 2.726-2.125 3.75zm2.782-5.767c-.367-.845-.958-1.614-1.721-2.269c.244-.196.554-.314.89-.314c.787 0 1.427.64 1.427 1.427c0 .476-.235.898-.596 1.156z\"/><circle cx=\"6.801\" cy=\"9.678\" r=\"1.143\"/><circle cx=\"13.185\" cy=\"9.678\" r=\"1.143\"/><path d=\"M12.701 12.455a4.357 4.357 0 0 1-2.94 1.138a4.325 4.325 0 0 1-3.195-1.39a.541.541 0 1 0-.793.738a5.47 5.47 0 0 0 3.988 1.735a5.437 5.437 0 0 0 3.67-1.421a.541.541 0 1 0-.73-.8z\"/></g></svg> <p className=\"ml-2\">Reddit</p></button></Link>\r\n  \r\n    }\r\n    {whereami_arr[0] === \"Favorite\" ?\r\n      <Link to=\"/myfavorites\" class=\"mr-4\" onClick={tooglemain_menu}> <button className={\"flex text-red-300 ml-4 xl:ml-16 border-b-2 border-red-300 dark:text-red-600\"} >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"2.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M28.766 4.256A4.212 4.212 0 0 0 23 4.032a4.212 4.212 0 0 0-5.766.224a4.319 4.319 0 0 0 0 6.044l5.764 5.84l.002-.002l.002.001l5.764-5.839a4.319 4.319 0 0 0 0-6.044zm-1.424 4.639l-4.34 4.397L23 13.29l-.002.002l-4.34-4.397a2.308 2.308 0 0 1 0-3.234a2.264 2.264 0 0 1 3.156 0l1.181 1.207l.005-.005l.005.005l1.18-1.207a2.264 2.264 0 0 1 3.157 0a2.308 2.308 0 0 1 0 3.234zM16 30h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z\"/></svg>\r\n      <p className=\"ml-2\">Favorites</p></button></Link>\r\n      : <Link to=\"/myfavorites\" class=\"mr-4\" onClick={tooglemain_menu}> <button className={\"flex text-red-300  ml-4 xl:ml-16 hover:border-b-2 hover:border-red-300 dark:text-red-600\"} >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M28.766 4.256A4.212 4.212 0 0 0 23 4.032a4.212 4.212 0 0 0-5.766.224a4.319 4.319 0 0 0 0 6.044l5.764 5.84l.002-.002l.002.001l5.764-5.839a4.319 4.319 0 0 0 0-6.044zm-1.424 4.639l-4.34 4.397L23 13.29l-.002.002l-4.34-4.397a2.308 2.308 0 0 1 0-3.234a2.264 2.264 0 0 1 3.156 0l1.181 1.207l.005-.005l.005.005l1.18-1.207a2.264 2.264 0 0 1 3.157 0a2.308 2.308 0 0 1 0 3.234zM16 30h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z\"/> </svg><p className=\"ml-2\">Favorites</p>\r\n      </button></Link>}\r\n      <Toggle />\r\n      </section>\r\n\r\n  </article>\r\n  )\r\n};\r\n\r\nexport default Header","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\subredditlistpage.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\subreddit.js",["139","140","141"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport location_context from \"./locationcontext\";\r\nimport { toogleside_menu } from \"./tooglemenus\";\r\nimport axios from \"axios\";\r\nimport food_subredddits_set from \"./food_subredditlist\";\r\nimport drink_subredddits_set from \"./drinks_subredditlist\";\r\nimport saveFavorites from \"./savefavorites_function\";\r\nimport removeFavorite from \"./removefavorites_function\";\r\nimport Footer from \"./fotter\";\r\nimport loading from \"./imgs/loading_.gif\";\r\n\r\nconst Subreddit = () => {\r\n  const [subreddit, set_subreddit] = useState([]);\r\n  const [subredditcontent_map, set_subredditcontent_map] = useState({});\r\n  const [comment_isfetched, set_comment_isfetched] = useState(false);\r\n  const { slug } = useParams();\r\n  const [a, seta] = useState(slug);\r\n  const [isfavorite, set_isfavorite] = useState(false);\r\n  let favoritereddits = [];\r\n\r\n  const whereami_arr = useContext(location_context);\r\n\r\n  useEffect(() => {\r\n    whereami_arr[1](\"Subreddit_page\");\r\n\r\n    return () => {\r\n      whereami_arr[1](\"Home\");\r\n    };\r\n  }, []);\r\n\r\n  const fetchsubreddit = async () => {\r\n    try {\r\n      const result = await axios(`https://www.reddit.com/r/${slug}/.json`);\r\n\r\n      if (localStorage.getItem(\"SavedSubReddits\")) {\r\n        favoritereddits = localStorage.getItem(\"SavedSubReddits\").split(\",\");\r\n        if (favoritereddits.includes(slug)) {\r\n          set_isfavorite(true);\r\n        } else {\r\n          set_isfavorite(false);\r\n        }\r\n      }\r\n\r\n      set_subreddit(result.data.data.children);\r\n    } catch (e) {\r\n      console.log(`Fetch r/${slug} failed. ${e}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchsubreddit();\r\n  }, [slug, a]);\r\n\r\n  useEffect(() => {\r\n    if (subreddit.length > 0) {\r\n      let tempobj = {};\r\n      let counter = 0;\r\n\r\n      subreddit.forEach((item) => {\r\n        const fetchcomments = async () => {\r\n          //remove ? to allow reddit api call\r\n          if (item.data.title[item.data.title.length - 1] === \"?\") {\r\n            item.data.title = item.data.title.slice(0, -1);\r\n          }\r\n\r\n          try {\r\n            const result = await axios(\r\n              `https://www.reddit.com/r/${item.data.subreddit}/comments/${item.data.id}/${item.data.title}/.json`\r\n            );\r\n            tempobj[item.data.id] = result.data[0].data.children[0].data;\r\n\r\n            counter++;\r\n\r\n            if (counter === subreddit.length - 1) {\r\n              set_subredditcontent_map(tempobj);\r\n              set_comment_isfetched(true);\r\n            }\r\n          } catch (error) {\r\n            console.log(\r\n              \"Error: Fetch reddit posts and comments failed.\\n-------------------\" +\r\n              error +\r\n              \"-------------------------\"\r\n            );\r\n            tempobj[item.data.id] = {};\r\n            counter++;\r\n          }\r\n        };\r\n        fetchcomments();\r\n      });\r\n    }\r\n  }, [subreddit]);\r\n\r\n  return (\r\n    <article className=\"grid grid-cols-8 gap-3 dark:bg-gray-800 dark:text-white mt-16 h-screen\">\r\n      <nav\r\n        id=\"sidenav\"\r\n        className=\"hidden w-11/12 lg:w-full z-10 absolute top-16 left-0 bg-white dark:bg-gray-800 lg:static lg:col-start-1 lg:col-end-3  lg:mt-10  lg:block\"\r\n      >\r\n        <RedditNavigation picked={slug} />\r\n      </nav>\r\n      <section className=\" h-screen overflow-y-scroll col-start-1 lg:col-start-3 col-end-9 mt-12\">\r\n        <main className=\"col-start-1 lg:col-start-3 col-end-9 mt-12\">\r\n          {subreddit.length === 0 ? (\r\n            <div className=\"h-screen flex justify-center mt-12\">\r\n              <img src={loading} alt=\"loading\" className=\"w-12 h-12\" />{\" \"}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"flex flex-col lg:flex-row justify-center\">\r\n                <a\r\n                  href={`https://www.reddit.com/r/${subreddit[0].data.subreddit}/`}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <h2\r\n                    className=\"text-4xl lg:text-6xl text-gray-400 font-bold text-center\"\r\n                    key={subreddit[0].data.subreddit}\r\n                  >\r\n                    {subreddit[0].data.subreddit_name_prefixed}\r\n                  </h2>\r\n                  <p className=\"pt-3 text-gray-400 text-sm text-center\">\r\n                    {subreddit[0].data.subreddit_subscribers\r\n                      ? `Subscribers - ${subreddit[0].data.subreddit_subscribers}`\r\n                      : \"\"}\r\n                  </p>\r\n                </a>\r\n                {isfavorite ? (\r\n                  <button\r\n                    key={`${subreddit[0].data.subreddit}${subreddit[0].data.subreddit}1`}\r\n                    className=\"pr-4 text-red-400 ml-8 mr-4 lg:mr-0 self-end hover:border-b-2 hover:border-red-300 flex\"\r\n                    onClick={() => {\r\n                      set_isfavorite(false);\r\n                      removeFavorite(\"reddit\", subreddit[0].data.subreddit);\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      aria-hidden=\"true\"\r\n                      role=\"img\"\r\n                      width=\"1.5em\"\r\n                      height=\"1.5em\"\r\n                      preserveAspectRatio=\"xMidYMid meet\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" />\r\n                      <path\r\n                        fill=\"currentColor\"\r\n                        d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\"\r\n                      />\r\n                    </svg>\r\n                    <p className=\"ml-2\">Saved</p>\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    key={`${subreddit[0].data.subreddit}${subreddit[0].data.subreddit}15`}\r\n                    className=\"text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex mr-4 lg:mr-0\"\r\n                    onClick={() => {\r\n                      set_isfavorite(true);\r\n                      saveFavorites(\"reddit\", subreddit[0].data.subreddit);\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      aria-hidden=\"true\"\r\n                      role=\"img\"\r\n                      width=\"1.5em\"\r\n                      height=\"1.5em\"\r\n                      preserveAspectRatio=\"xMidYMid meet\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        fill=\"currentColor\"\r\n                        d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\"\r\n                      />\r\n                    </svg>\r\n                    <p className=\"ml-2\">Add to Favories</p>\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <article className=\"mt-8 lg:mt-16\">\r\n                {subreddit.map((item) => (\r\n                  <section\r\n                    className=\"py-2 lg:py-8 hover:shadow-lg\"\r\n                    key={item.data.id}\r\n                  >\r\n                    <a\r\n                      href={`https://www.reddit.com/${item.data.permalink}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      <section className=\"flex\">\r\n                        <div\r\n                          className=\"w-1/5 lg:w-2/12 flex flex-col lg:flex-row items-center lg:items-start\"\r\n                          key={`${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink}`}\r\n                        >\r\n                          <svg\r\n                            className=\"ml-2 lg:ml-6 w-8 h-8 lg:w-10 lg:h-10\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            preserveAspectRatio=\"xMidYMid meet\"\r\n                            viewBox=\"0 0 16 16\"\r\n                          >\r\n                            <g fill=\"currentColor\">\r\n                              <path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\" />\r\n                            </g>\r\n                          </svg>\r\n                          <p\r\n                            className=\"text-xl lg:text-2xl  font-bold justify-self-center pl-3 pr-2\"\r\n                            key={`${item.data.ups} ${subreddit[0].data.permalink}`}\r\n                          >\r\n                            {\" \"}\r\n                            {item.data.ups}\r\n                          </p>\r\n                        </div>\r\n                        <div\r\n                          className=\"w-4/5 pr-2 lg:w-10/12 pr-r lg:pr-4\"\r\n                          key={`${item.data.title} ${item.data.author}`}\r\n                        >\r\n                          <h4\r\n                            className=\"text-lg lg:text-xl leading-5 lg:leading-7 font-mono pb-4\"\r\n                            key={item.data.title}\r\n                          >\r\n                            {item.data.title}\r\n                          </h4>\r\n                          {comment_isfetched && (\r\n                            <section>\r\n                              {subredditcontent_map[item.data.id] !==\r\n                                undefined && (\r\n                                  <section\r\n                                    key={\r\n                                      subredditcontent_map[item.data.id]\r\n                                        .subreddit_id\r\n                                    }\r\n                                    className=\"border-b dark:border-b-gray-700\"\r\n                                  >\r\n                                    <p\r\n                                      className=\"font-serif leading-5  lg:leading-6 text-sm lg:text-base\"\r\n                                      key={\r\n                                        subredditcontent_map[item.data.id]\r\n                                          .selftext\r\n                                      }\r\n                                    >\r\n                                      {\r\n                                        subredditcontent_map[item.data.id]\r\n                                          .selftext\r\n                                      }\r\n                                    </p>\r\n                                    <div\r\n                                      className=\"flex flex-col lg:flex-row lg:justify-between pt-8 pb-4\"\r\n                                      key={`${subredditcontent_map[item.data.id]\r\n                                        .subreddit_id\r\n                                        }${subredditcontent_map[item.data.id]\r\n                                          .subreddit_id\r\n                                        }${item.data.author}`}\r\n                                    >\r\n                                      <p\r\n                                        className=\"w-full lg:w-8/12 font-light text-right lg:text-left pr-2 mb-2 \"\r\n                                        key={item.data.author}\r\n                                      >\r\n                                        Submitted by : {item.data.author}\r\n                                      </p>\r\n                                      <button\r\n                                        className=\"w-fit lg:w-1/4 ml-0 lg:ml-4 text-sm  px-4 md:px-6 font-semibold bg-amber-300 dark:text-black\"\r\n                                        key={`${subredditcontent_map[item.data.id]\r\n                                          .num_comments\r\n                                          } ${subredditcontent_map[item.data.id]\r\n                                            .subreddit_id\r\n                                          }`}\r\n                                      >\r\n                                        {\r\n                                          subredditcontent_map[item.data.id]\r\n                                            .num_comments\r\n                                        }{\" \"}\r\n                                        Comments{\" \"}\r\n                                      </button>\r\n                                    </div>\r\n                                  </section>\r\n                                )}\r\n                            </section>\r\n                          )}\r\n                        </div>\r\n                      </section>\r\n                    </a>\r\n                  </section>\r\n                ))}\r\n              </article>\r\n            </div>\r\n          )}\r\n        </main>\r\n        <div className=\"mt-40 border-2 dark:border-gray-800 col-start-1 lg:col-start-3 col-end-9\">\r\n          <Footer />\r\n        </div>\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nconst RedditNavigation = ({ picked }) => {\r\n  const [show_foodsubreddit, setshow_foodsubreddit] = useState(false);\r\n  const [show_drinksubreddit, setshow_drinksubreddit] = useState(true);\r\n\r\n  let foodsubreddit_arr = [];\r\n  let drinksubreddit_arr = [];\r\n\r\n  const iterator1 = food_subredddits_set.entries();\r\n  const iterator2 = drink_subredddits_set.entries();\r\n\r\n  for (const entry of iterator1) {\r\n    foodsubreddit_arr.push(entry[0]);\r\n  }\r\n  for (const entry of iterator2) {\r\n    drinksubreddit_arr.push(entry[0]);\r\n  }\r\n\r\n  const showChoices = (type) => {\r\n    if (type === \"food\") {\r\n      if (show_foodsubreddit) {\r\n        setshow_foodsubreddit(false);\r\n      } else setshow_foodsubreddit(true);\r\n    } else {\r\n      if (show_drinksubreddit) {\r\n        setshow_drinksubreddit(false);\r\n      } else setshow_drinksubreddit(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\" lg:overscroll-y-auto lg:overflow-auto mt-4 lg:mt-16  h-screen overflow-y-scroll\">\r\n      <div>\r\n        <div className=\"flex flex-row items-center justify-between \">\r\n          <h2 className=\"font-black text-lg pl-12 mt-10 mb-3 flex\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              aria-hidden=\"true\"\r\n              role=\"img\"\r\n              width=\"1.5em\"\r\n              height=\"1.5em\"\r\n              preserveAspectRatio=\"xMidYMid meet\"\r\n              viewBox=\"0 0 1024 1024\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M128 352.576V352a288 288 0 0 1 491.072-204.224a192 192 0 0 1 274.24 204.48a64 64 0 0 1 57.216 74.24C921.6 600.512 850.048 710.656 736 756.992V800a96 96 0 0 1-96 96H384a96 96 0 0 1-96-96v-43.008c-114.048-46.336-185.6-156.48-214.528-330.496A64 64 0 0 1 128 352.64zm64-.576h64a160 160 0 0 1 320 0h64a224 224 0 0 0-448 0zm128 0h192a96 96 0 0 0-192 0zm439.424 0h68.544A128.256 128.256 0 0 0 704 192c-15.36 0-29.952 2.688-43.52 7.616c11.328 18.176 20.672 37.76 27.84 58.304A64.128 64.128 0 0 1 759.424 352zM672 768H352v32a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32v-32zm-342.528-64h365.056c101.504-32.64 165.76-124.928 192.896-288H136.576c27.136 163.072 91.392 255.36 192.896 288z\"\r\n              />\r\n            </svg>\r\n            <p className=\"ml-2\">Food Subreddits</p>\r\n          </h2>\r\n          <button\r\n            className=\"border-b text-xl  mt-10 mb-3 mr-8 hover:text-red-400 dark:border-b-gray-600\"\r\n            onClick={() => showChoices(\"food\")}\r\n          >\r\n            {show_foodsubreddit ? \"↑\" : \"↓\"}\r\n          </button>\r\n        </div>\r\n        <div className={show_foodsubreddit ? \"flex flex-col\" : \"hidden\"}>\r\n          {foodsubreddit_arr.map((item) => (\r\n            <Link\r\n              onClick={toogleside_menu}\r\n              key={`${item}key`}\r\n              to={`/reddit/${item}`}\r\n            >\r\n              <div key={`${item}1`} className=\"flex item-center justify-center\">\r\n                <button\r\n                  key={item}\r\n                  className={\r\n                    picked === item\r\n                      ? \"w-3/4 border-b px-4 py-3 font-bold border-l-2 border-l-green-500\"\r\n                      : \" w-3/4 border-b px-4 py-3  hover:border-b-amber-500 dark:border-b-gray-600 dark:hover:border-b-amber-500\"\r\n                  }\r\n                >\r\n                  {item}\r\n                </button>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"flex flex-row items-center justify-between \">\r\n          <h2 className=\"font-black  text-lg pl-12 mt-10 mb-3 flex\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              aria-hidden=\"true\"\r\n              role=\"img\"\r\n              width=\"1.5em\"\r\n              height=\"1.5em\"\r\n              preserveAspectRatio=\"xMidYMid meet\"\r\n              viewBox=\"0 0 1024 1024\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M768 64a192 192 0 1 1-69.952 370.88L480 725.376V896h96a32 32 0 1 1 0 64H320a32 32 0 1 1 0-64h96V725.376L76.8 273.536a64 64 0 0 1-12.8-38.4v-10.688a32 32 0 0 1 32-32h71.808l-65.536-83.84a32 32 0 0 1 50.432-39.424l96.256 123.264h337.728A192.064 192.064 0 0 1 768 64zM656.896 192.448H800a32 32 0 0 1 32 32v10.624a64 64 0 0 1-12.8 38.4l-80.448 107.2a128 128 0 1 0-81.92-188.16v-.064zm-357.888 64l129.472 165.76a32 32 0 0 1-50.432 39.36l-160.256-205.12H144l304 404.928l304-404.928H299.008z\"\r\n              />\r\n            </svg>\r\n            <p className=\"ml-2\">Drink Subreddits</p>\r\n          </h2>\r\n          <button\r\n            className=\"border-b text-xl  mt-10 mb-3 mr-8 hover:text-red-400 dark:border-b-gray-600\"\r\n            onClick={() => showChoices(\"drink\")}\r\n          >\r\n            {show_drinksubreddit ? \"↑\" : \"↓\"}\r\n          </button>\r\n        </div>\r\n        <div className={show_drinksubreddit ? \"flex flex-col\" : \"hidden\"}>\r\n          {drinksubreddit_arr.map((item) => (\r\n            <Link\r\n              onClick={toogleside_menu}\r\n              key={`${item}key`}\r\n              to={`/reddit/${item}`}\r\n            >\r\n              <div key={`${item}1`} className=\"flex item-center justify-center\">\r\n                <button\r\n                  key={item}\r\n                  className={\r\n                    picked === item\r\n                      ? \"w-3/4 border-b px-4 py-3 font-bold border-l-2 border-l-green-500\"\r\n                      : \" w-3/4 border-b px-4 py-3  hover:border-b-amber-500 dark:hover:border-b-amber-500 dark:border-b-gray-600\"\r\n                  }\r\n                >\r\n                  {item}\r\n                </button>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Subreddit;\r\n","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\MyFavorites.js",["142","143","144"],[],"\r\nimport React, { useState, useEffect , useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from \"react-router-dom\"\r\nimport loading from \"./imgs/loading_.gif\"\r\nimport Fotter from \"./fotter.js\"\r\nimport RecipePage from './recipepage'\r\nimport DrinkRecipePage from './drinksrecipepage'\r\nimport location_context from \"./locationcontext\"\r\n\r\n\r\nconst MyFavorites = () => {\r\n\r\n  const [foodfavorites, set_foodfavorites] = useState([]);\r\n  const [drinkfavorites, set_drinkfavorites] = useState([]);\r\n  const [redditfavorites, set_redditfavorites] = useState([]);\r\n\r\n  const [frontfood_list, set_frontfood_list] = useState([]);\r\n\r\n  const [recipefor, set_recipefor] = useState(\"\");\r\n  const [drink_recipefor, set_drink_recipefor] = useState(\"\");\r\n  const [reloadpage, set_reloadpage] = useState(1)\r\n  const [type, set_type] = useState(\"food\")\r\n  const [leftimg, set_leftimg] = useState([]);\r\n  const [leftimg_drink , set_leftimg_drink] = useState([])\r\n  let [leftcounter, set_leftcounter] = useState(1);\r\n  let [leftcounter_drink, set_leftcounter_drink] = useState(1);\r\n\r\n  const whereami_arr = useContext(location_context);\r\n\r\n\r\n  let foodfavs_arr = [];\r\n  let drinkfavs_arr = [];\r\n  let redditfavs_arr = [];\r\n\r\n\r\n  let temparr = []\r\n  let temparr2 = []\r\n  let temparr3 = []\r\n\r\n  useEffect(() => {\r\n\r\n    whereami_arr[1](\"Favorite\")\r\n\r\n    return () => {  whereami_arr[1](\"Home\")   };\r\n\r\n                  });\r\n\r\n  const fetchfood = async (item) => {\r\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${item}`);\r\n    temparr.push(result.data.meals[0]);\r\n\r\n    if (foodfavs_arr.indexOf(item) === 0) {\r\n      let arr = [result.data.meals[0].strMealThumb, result.data.meals[0].strMeal, result.data.meals[0].strTags];\r\n      set_leftimg(arr);\r\n    }\r\n\r\n    if (temparr.length === foodfavs_arr.length) { set_foodfavorites(temparr); }\r\n  }\r\n\r\n\r\n  const fetchdrink = async (item) => {\r\n    const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${item}`);\r\n    temparr2.push(result.data.drinks[0]);\r\n\r\n    if (drinkfavs_arr.indexOf(item) === 0) {\r\n      set_leftimg_drink([result.data.drinks[0].strDrinkThumb, result.data.drinks[0].strDrink, result.data.drinks[0].strTags])\r\n    }\r\n\r\n    if (temparr2.length === drinkfavs_arr.length) { set_drinkfavorites(temparr2) }\r\n  }\r\n\r\n  const fetchreddit = async (item) => {\r\n    const result = await axios(`https://www.reddit.com/r/${item}.json`);\r\n    temparr3.push(result.data.data.children[0].data)\r\n    if (temparr3.length === redditfavs_arr.length) { set_redditfavorites(temparr3) }\r\n  }\r\n\r\n  useEffect(() => { \r\n\r\n    if(type === \"food\"){\r\n    if (localStorage.getItem(\"SavedFoods\")) {\r\n      foodfavs_arr = localStorage.getItem(\"SavedFoods\").split(\",\");\r\n      foodfavs_arr.map(item => {\r\n        fetchfood(item);\r\n        return 0;\r\n      })\r\n    } else { set_foodfavorites([\"None\"]) }\r\n  }\r\n  else if(type === \"drink\"){\r\n    if (localStorage.getItem(\"SavedDrinks\")) {\r\n      drinkfavs_arr = localStorage.getItem(\"SavedDrinks\").split(\",\");\r\n      drinkfavs_arr.map(item => {\r\n        fetchdrink(item);\r\n        return 0;\r\n      })\r\n    } else { set_drinkfavorites([\"None\"]) }\r\n  }\r\n    else {\r\n    if (localStorage.getItem(\"SavedSubReddits\")) {\r\n      redditfavs_arr = localStorage.getItem(\"SavedSubReddits\").split(\",\");\r\n      redditfavs_arr.map(item => {\r\n        fetchreddit(item);\r\n        return 0;\r\n      })\r\n    } else { set_redditfavorites([\"None\"]) }\r\n }\r\n  }, [reloadpage, type])\r\n\r\n  //type== food,drink or reddit catagory == strCatagory\r\n  const viewFavorite = (type, id, catagory) => {\r\n\r\n    if (type === \"food\") {\r\n      const fetchitems = async () => {\r\n        try {\r\n          const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${catagory}`);\r\n          if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\r\n          else { set_frontfood_list(result.data.meals) }\r\n          set_recipefor(id);\r\n        } catch (e) { console.log(`Fetch ${catagory} based foods failed !  ` + e) }\r\n      }\r\n\r\n      fetchitems();\r\n    }\r\n    else if (type === \"drink\") {\r\n      const fetchitems = async () => {\r\n        try {\r\n          const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${catagory}`);\r\n          if (result.data.drinks == null) { set_frontfood_list([\"No Food Found Error\"]) }\r\n          else { set_frontfood_list(result.data.drinks) }\r\n          set_drink_recipefor(id);\r\n        } catch (e) { console.log(`Fetch ${catagory} based drinks failed !  ` + e) }\r\n      }\r\n\r\n      fetchitems();\r\n    }\r\n  }\r\n\r\n  const setleft_imgfunc = goto => {\r\n    if(type === \"food\"){\r\n    if (goto === \"next\") {\r\n      set_leftcounter(leftcounter + 1);\r\n      if (leftcounter === foodfavorites.length - 1) { set_leftcounter(0); }\r\n    }\r\n    else {\r\n      set_leftcounter(leftcounter - 1);\r\n      if (leftcounter === 0) { set_leftcounter(foodfavorites.length - 1); }\r\n    }\r\n    set_leftimg([foodfavorites[leftcounter].strMealThumb, foodfavorites[leftcounter].strMeal, foodfavorites[leftcounter].strTags]);\r\n  }\r\n     else if(type === \"drink\") {\r\n      if (goto === \"next\") {\r\n        set_leftcounter_drink(leftcounter_drink + 1);\r\n        if (leftcounter_drink ===drinkfavorites.length - 1) { set_leftcounter_drink(0); }\r\n      }\r\n      else {\r\n        set_leftcounter_drink(leftcounter_drink - 1);\r\n        if (leftcounter_drink === 0) { set_leftcounter_drink(drinkfavorites.length - 1); }\r\n      }\r\n      set_leftimg_drink([drinkfavorites[leftcounter_drink].strDrinkThumb, drinkfavorites[leftcounter_drink].strDrink, drinkfavorites[leftcounter_drink].strTags]);\r\n     }\r\n  }\r\n\r\n  return (<article className=\"mt-18 dark:bg-gray-800 dark:text-white\">\r\n\r\n  {(drink_recipefor === \"\" && recipefor === \"\") &&\r\n    <div className=\"mb-8 lg:mb-0 lg:w-3/5 lg:ml-[35%] flex justify-center mt-11  pt-8\">\r\n      <div>\r\n        <button className={type === \"food\" ? \"font-black underline\" : \"font-light hover:bg-amber-200 hover:text-black px-2 lg:px-4 dark:font-normal\"} \r\n        onClick={() => set_type(\"food\")}>Foods</button>\r\n        <button className={type === \"drink\" ? \"ml-8 font-black underline px-2 lg:px-4\" :\"ml-8 font-light hover:bg-amber-200 hover:text-black px-2 lg:px-4 dark:font-normal\" } \r\n        onClick={() => set_type(\"drink\")}>Drinks</button>\r\n        <button className={type === \"reddit\" ? \"ml-8 font-black underline px-2 lg:px-4\" : \"ml-8 font-light hover:bg-amber-200 hover:text-black px-2 lg:px-4 dark:font-normal\" }\r\n        onClick={() => set_type(\"reddit\")}>Reddits</button>\r\n      </div>\r\n    </div>\r\n}\r\n    {drink_recipefor !== \"\" && <div className=\"lg:pl-32 mt-16\">\r\n      <button className=\"text-4xl hover:text-rose-500\" onClick={() => { set_reloadpage(reloadpage + 1); set_drink_recipefor(\"\"); }}>←</button>\r\n      <DrinkRecipePage drinkid={drink_recipefor} similardrinks={frontfood_list} /></div>}\r\n\r\n    {recipefor !== \"\" && <div className=\"lg:pl-32 mt-16\">\r\n      <button className=\"text-4xl  hover:text-rose-500\" onClick={() => { set_reloadpage(reloadpage + 1); set_recipefor(\"\"); }}>←</button>\r\n      <RecipePage foodid={recipefor} similarfoods={frontfood_list} />\r\n    </div>}\r\n\r\n    {(drink_recipefor === \"\" && recipefor === \"\") && <article className=\"mb-12\">\r\n      {type === \"food\" &&\r\n        <section>\r\n          {foodfavorites.length > 0 ? <div>{foodfavorites[0] === \"None\" ?\r\n            <div className=\"flex flex-col items-center mt-20 h-screen\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"5em\" height=\"5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 48 48\"><path fill=\"#B39DDB\" d=\"M30.6 44H17.4c-2 0-3.7-1.4-4-3.4L9 11h30l-4.5 29.6c-.3 2-2 3.4-3.9 3.4z\"/><path fill=\"#7E57C2\" d=\"M38 13H10c-1.1 0-2-.9-2-2s.9-2 2-2h28c1.1 0 2 .9 2 2s-.9 2-2 2z\"/></svg>\r\n            <p>No saved food recipes found ....</p></div> : <section className=\"h-screen\">\r\n              <h1 className=\"text-center lg:text-left mb-8 lg:mb-0 lg:ml-16 text-3xl lg:text-5xl font-light font-serif\">Favorite Foods</h1>\r\n              <div className=\"lg:grid lg:grid-cols-3 lg:gap-3 \">\r\n\r\n                <div className=\"col-span-1 lg:h-[75vh] flex flex-col lg:flex-row justify-center items-center\">\r\n                  <div>\r\n                   {leftimg.length > 0 && <img className=\"p-4\" src={leftimg[0]} alt={leftimg[1]} />}\r\n                    <h3 className=\"font-light text-center px-2 dark:font-normal\" key={leftimg[1]}>{leftimg[1]}</h3>\r\n                    <p className=\"font-light text-center dark:font-normal\" key={`${leftimg[1]}${leftimg[1]}`}>{leftimg[2] ? `Tags : ${leftimg[2]}` : \"Tags : \"}</p>\r\n                  </div>\r\n                  <div className=\"text-4xl font-extrabold\">\r\n                    <button className=\"text-green-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"next\")}>→</button>\r\n                    <button className=\"text-rose-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"back\")}>←</button>\r\n                  </div>\r\n                </div>\r\n                <section className=\"h-[40vh] lg:h-[75vh] overflow-y-scroll lg:col-span-2 grid grid-cols-3 gap-1\">\r\n                  {foodfavorites.map(item => (\r\n                    <div className=\"lg:w-11/12 hover:brightness-90\" key={item.idMeal} onClick={() => viewFavorite(\"food\", item.idMeal, item.strCategory)}>\r\n                      <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\r\n                    </div>\r\n                  ))\r\n                  }\r\n                </section>\r\n              </div>\r\n            </section>} </div> :\r\n            <div className=\"flex justify-center h-screen mt-12\"> <img className=\"w-12 h-12\" src={loading} alt=\"loading\" /></div>\r\n\r\n          }\r\n\r\n        </section>\r\n      }\r\n\r\n      {type === \"drink\" &&\r\n        <section  className=\" mb-12 overflow-y\">\r\n          {drinkfavorites.length > 0 ? <div>{drinkfavorites[0] === \"None\" ?\r\n          <div className=\"flex flex-col items-center mt-20 h-screen\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"5em\" height=\"5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 48 48\"><path fill=\"#B39DDB\" d=\"M30.6 44H17.4c-2 0-3.7-1.4-4-3.4L9 11h30l-4.5 29.6c-.3 2-2 3.4-3.9 3.4z\"/><path fill=\"#7E57C2\" d=\"M38 13H10c-1.1 0-2-.9-2-2s.9-2 2-2h28c1.1 0 2 .9 2 2s-.9 2-2 2z\"/></svg>\r\n            <p>No saved drinks recipes found ....</p>\r\n            </div> : <section className=\"h-screen\">\r\n              <h1 className=\"text-center lg:text-left mb-8 lg:mb-0 lg:ml-16 text-3xl lg:text-5xl font-light font-serif\">Favorite Drinks</h1>\r\n              <div className=\"lg:grid lg:grid-cols-3 lg:gap-3 \">\r\n\r\n                <div className=\"col-span-1 lg:h-[77vh] flex flex-col lg:flex-row justify-center items-center\">\r\n                  <div>\r\n                    <img className=\"p-4\" src={leftimg_drink[0]} alt={leftimg_drink[1]} />\r\n                    <h3 className=\"font-light text-center px-2 dark:font-normal\" key={leftimg_drink[1]}>{leftimg_drink[1]}</h3>\r\n                    <p className=\"font-light text-center dark:font-normal\" key={`${leftimg_drink[1]}${leftimg_drink[1]}`}>{leftimg_drink[2] ? `Tags : ${leftimg_drink[2]}` : \"Tags : \"}</p>\r\n                  </div>\r\n                  <div className=\"text-4xl font-extrabold\">\r\n                    <button className=\"text-green-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"next\")}>→</button>\r\n                    <button className=\"text-rose-600 hover:text-gray-500\" onClick={() => setleft_imgfunc(\"back\")}>←</button>\r\n                  </div>\r\n                </div>\r\n                <section className=\"h-[40vh] lg:h-[75vh] overflow-y-scroll lg:col-span-2 grid grid-cols-3 gap-1\">\r\n                  {drinkfavorites.map(item => (\r\n                    <div className=\"lg:w-11/12 hover:brightness-90\" key={item.idDrink} onClick={() => viewFavorite(\"drink\", item.idDrink, item.strCategory)}>\r\n                      <img key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} />\r\n                    </div>\r\n                  ))\r\n                  }\r\n                </section>\r\n              </div>\r\n            </section>} </div> :\r\n            <div className=\"flex justify-center h-screen mt-12\"> <img className=\"w-12 h-12\" src={loading} alt=\"loading\" /> </div>\r\n          }\r\n\r\n        </section>\r\n\r\n      }\r\n\r\n      {type === \"reddit\" &&  \r\n        <section>\r\n        {redditfavorites.length > 0 ? <div>{ redditfavorites[0] === \"None\" ?\r\n        <div className=\"flex flex-col items-center mt-20 h-screen\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"5em\" height=\"5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 48 48\"><path fill=\"#B39DDB\" d=\"M30.6 44H17.4c-2 0-3.7-1.4-4-3.4L9 11h30l-4.5 29.6c-.3 2-2 3.4-3.9 3.4z\"/><path fill=\"#7E57C2\" d=\"M38 13H10c-1.1 0-2-.9-2-2s.9-2 2-2h28c1.1 0 2 .9 2 2s-.9 2-2 2z\"/></svg>\r\n        <p>No saved subreddits ....</p>\r\n        </div> : <section className=\"\">\r\n          <h1 className=\"text-center lg:text-left mb-8  lg:ml-16 text-3xl lg:text-5xl font-light font-serif\">Favorite Subreddits</h1>\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-10 h-[74vh] overflow-y-scroll text-center \">\r\n    \r\n            {redditfavorites.map(item => (\r\n              <Link className=\"ml-[12%] w-3/4 lg:ml-12 max-h-48 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100 even:bg-gray-100 dark:border-white dark:even:bg-gray-600 dark:hover:bg-black\" key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\r\n              <div className=\"border-b mr-4\" key={item.subreddit_id}>\r\n                <h3 className=\"font-mono text-2xl leading-8\" key={item.subreddit}>{item.subreddit_name_prefixed}</h3>\r\n                <p key={`${item.subreddit}${item.subreddit_subscribers}`}>{item.subreddit_subscribers ? `Subscribers ${item.subreddit_subscribers}` : \"\"}</p>\r\n                <p className=\"text-gray-400\" key={`${item.subreddit_id}${item.subreddit}`}>{item.subreddit_type}</p>\r\n              </div>\r\n              </Link>\r\n            ))\r\n            }\r\n          </div>\r\n        </section>  } </div> :        \r\n        <div className=\"mt-12 flex justify-center h-screen\">\r\n        <img className=\"w-12 h-12\" src={loading} alt=\"loading\" /></div>\r\n\r\n        }\r\n\r\n        </section>\r\n\r\n      }\r\n\r\n    </article>\r\n\r\n    }\r\n          \r\n    <div className=\"mt-40 border-2 border-white dark:border-gray-800\"><Fotter /></div>\r\n\r\n  </article>\r\n  )\r\n}\r\n\r\nexport default MyFavorites\r\n","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\locationcontext.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\fotter.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\main.js",["145"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport RecipePage from './recipepage'\r\nimport Footer from \"./fotter\";\r\nimport { Link } from \"react-router-dom\"\r\nimport loading from \"./imgs/loading_.gif\"\r\n\r\n\r\nconst Main = ({ navChoice, setChoice, choicetype, set_choicetype, togglerecipe_page, set_togglerecipe_page }) => {\r\n  const [catagories, set_catagories] = useState([]);\r\n  const [frontfood_list, set_frontfood_list] = useState([]);\r\n\r\n  const [recipefor, set_recipefor] = useState(\"\");\r\n\r\n  const getCatagories = async () => {\r\n    try {\r\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\r\n      set_catagories(result.data.meals)\r\n\r\n    } catch (e) { console.log(\"Fetch catagory failed ! \" + e) }\r\n  }\r\n\r\n  const getFoods_list = async () => {\r\n    try {\r\n      if (choicetype === \"c\") {\r\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${navChoice}`)\r\n        if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\r\n        else { set_frontfood_list(result.data.meals) }\r\n\r\n      }\r\n      else if (choicetype === \"a\") {\r\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${navChoice}`)\r\n        if (result.data.meals == null) { set_frontfood_list([{ \"idMeal\": \"No Food Found Error\" }]) }\r\n        else { set_frontfood_list(result.data.meals) }\r\n\r\n      }\r\n      else {\r\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${navChoice}`)\r\n        if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\r\n        else { set_frontfood_list(result.data.meals) }\r\n\r\n      }\r\n\r\n    } catch (e) { console.log(`Fetch ${navChoice} based foods failed !  ` + e) }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => { getCatagories(); }, [])\r\n\r\n  useEffect(() => { getFoods_list(); }, [navChoice])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"h-screen overflow-y-scroll\">\r\n      <article className=\"lg:ml-2 mt-16 \">\r\n        <section className=\"flex overflow-x-scroll md:overflow-hidden md:block pt-1\">\r\n          {\r\n            catagories.map(item => (\r\n              <button className=\" text-xs font-black bg-amber-400  rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 dark:text-black \" key={item.strCategory} onClick={() => { set_choicetype(\"c\"); setChoice(item.strCategory); set_togglerecipe_page(false); }}>{item.strCategory}</button>\r\n            ))\r\n          }\r\n        </section>\r\n        <div className=\"mt-4 md:mt-8 flex justify-center\">\r\n            <button className=\"font-extrabold underline\">Foods</button>\r\n          <Link to={`/drinks`} >\r\n            <button className=\"ml-8 font-light hover:bg-amber-200 px-4 dark:hover:text-black\">Drinks</button>\r\n          </Link>\r\n        </div>\r\n        {togglerecipe_page ? <RecipePage foodid={recipefor} similarfoods={frontfood_list} /> :\r\n          <div>\r\n      \r\n            {frontfood_list.length === 0 ? <div className=\"h-screen flex justify-center mt-12\">\r\n            <img className=\"w-12 h-12\" src={loading} alt=\"loading\" /></div> :\r\n            <section className=\"grid grid-cols-2 gap-1 md:grid-cols-3 md:gap-2 mt-4 md:m-16 lg:ml-10\">\r\n              {frontfood_list[0] === \"No Food Found Error\" ?\r\n               <div className=\"flex justify-center mt-4\">\r\n               <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1em\" height=\"1em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 48 48\"><path fill=\"#B39DDB\" d=\"M30.6 44H17.4c-2 0-3.7-1.4-4-3.4L9 11h30l-4.5 29.6c-.3 2-2 3.4-3.9 3.4z\"/><path fill=\"#7E57C2\" d=\"M38 13H10c-1.1 0-2-.9-2-2s.9-2 2-2h28c1.1 0 2 .9 2 2s-.9 2-2 2z\"/></svg>\r\n               <p>No available food for this ingrident.</p></div> :\r\n                frontfood_list.map(item => (\r\n                  <div className=\"hover:brightness-90 px-1\" key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_togglerecipe_page(true); }}>\r\n                    <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\r\n                    <p className=\"font-light text-center text-xs md:text-base\" key={item.strMeal}>{item.strMeal}</p>\r\n                  </div>\r\n                ))\r\n              }\r\n            </section>\r\n           }\r\n        </div>\r\n        }\r\n       \r\n      </article>\r\n\r\n      <div>\r\n      <Footer />\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Main\r\n\r\n",["146","147"],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinksmain.js",["148"],[],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport RecipePage from './drinksrecipepage'\r\nimport { Link } from \"react-router-dom\"\r\nimport loading from \"./imgs/loading_.gif\"\r\nimport Footer from \"./fotter\";\r\n\r\n\r\n\r\n\r\nconst Main = ({ navChoice, setChoice, choicetype, set_choicetype, togglerecipe_page, set_togglerecipe_page }) => {\r\n  const [catagories, set_catagories] = useState([]);\r\n  const [frontdrink_list, set_frontdrink_list] = useState([]);\r\n\r\n  const [recipefor, set_recipefor] = useState(\"\");\r\n\r\n  const getCatagories = async () => {\r\n    try {\r\n      const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list`);\r\n\r\n         let arr = result.data.drinks;\r\n         let temparr = [];\r\n            arr.forEach(item => {\r\n              let tempstr = item.strCategory.split(\" \");\r\n              let newstr = \"\";\r\n                tempstr.forEach(str => { newstr += str;  })\r\n                temparr.push(newstr);\r\n            }) \r\n\r\n            set_catagories(temparr);\r\n\r\n    } catch (e) { console.log(\"Fetch drinks catagory failed ! \" + e) }\r\n  }\r\n\r\n  const getFoods_list = async () => {\r\n    try {\r\n      if (choicetype === \"c\") {\r\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${navChoice}`)\r\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drinks Found Error\"]) }\r\n        else { set_frontdrink_list(result.data.drinks) }\r\n\r\n      }\r\n      else if (choicetype === \"g\") {\r\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?g=${navChoice}`)\r\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drink Found Error\"]) }\r\n        else { set_frontdrink_list(result.data.drinks) }\r\n\r\n      }\r\n      else if (choicetype === \"a\") {\r\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=${navChoice}`)\r\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drink Found Error\"]) }\r\n        else { set_frontdrink_list(result.data.drinks) }\r\n\r\n      }\r\n      else {\r\n        const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${navChoice}`)\r\n        if (result.data.drinks == null) { set_frontdrink_list([\"No Drink Found Error\"]) }\r\n        else { set_frontdrink_list(result.data.drinks) }\r\n\r\n      }\r\n\r\n    } catch (e) { console.log(`Fetch ${navChoice} based drinks failed !  ` + e) }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => { getCatagories(); }, [])\r\n\r\n  useEffect(() => { getFoods_list(); }, [navChoice])\r\n\r\n\r\n\r\n  return (<div>\r\n    \r\n      <article className=\"lg:ml-2 mt-16 \">\r\n        <section className=\"flex overflow-x-scroll md:overflow-hidden md:block pt-4\">\r\n          {\r\n            catagories.map(item => (\r\n              <button className=\" text-xs font-black bg-amber-400 border-0 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 dark:text-black\" key={item} onClick={() => { set_choicetype(\"c\"); setChoice(item); set_togglerecipe_page(false); }}>{item}</button>\r\n            ))\r\n          }\r\n        </section>\r\n        <div className=\"mt-4 md:mt-8 flex justify-center\">\r\n          <Link to={`/`} >\r\n            <button className=\"font-light px-4 hover:bg-amber-200 dark:hover:text-black\">Foods</button>\r\n          </Link>\r\n          <button className=\"ml-8 font-black underline \">Drinks</button>\r\n        </div>\r\n        {togglerecipe_page ? <RecipePage drinkid={recipefor} similardrinks={frontdrink_list} /> :\r\n    \r\n        <div>\r\n        {frontdrink_list.length === 0 ? <div className=\"h-screen flex justify-center mt-8\">\r\n           <img className=\"w-12 h-12\" src={loading} alt=\"loading\" /></div> :\r\n          <section className=\"grid grid-cols-2 gap-1 md:grid-cols-3 md:gap-2 mt-4 md:m-16 md:ml-10\">\r\n            {frontdrink_list[0] === \"No Drink Found Error\" ? \r\n            <div className=\"flex flex-col mt-4\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"5em\" height=\"5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 48 48\"><path fill=\"#B39DDB\" d=\"M30.6 44H17.4c-2 0-3.7-1.4-4-3.4L9 11h30l-4.5 29.6c-.3 2-2 3.4-3.9 3.4z\"/><path fill=\"#7E57C2\" d=\"M38 13H10c-1.1 0-2-.9-2-2s.9-2 2-2h28c1.1 0 2 .9 2 2s-.9 2-2 2z\"/></svg>\r\n            <p>No available drink for this ingrident.</p>\r\n            </div> :\r\n              frontdrink_list.map(item => (\r\n                <div className=\"hover:brightness-90\" key={item.idDrink} onClick={() => { set_recipefor(item.idDrink); set_togglerecipe_page(true); }}>\r\n                  <img key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} />\r\n                  <p className=\"font-light text-center  text-xs md:text-base\" key={item.strDrink}>{item.strDrink}</p>\r\n                </div>\r\n              ))\r\n            }\r\n          </section>}\r\n          </div>}\r\n      </article>\r\n\r\n      <div>\r\n      <Footer />\r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Main\r\n\r\n","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinksnav.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\ThemeToggle.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\tooglemenus.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\food_subredditlist.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinks_subredditlist.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\nav.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\savefavorites_function.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\removefavorites_function.js",[],[],"C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\recipepage.js",["149"],[],"import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport loading from './imgs/loading_.gif'\r\nimport saveFavorites from './savefavorites_function'\r\nimport removeFavorite from './removefavorites_function'\r\n\r\n\r\nconst RecipePage = ({ foodid, similarfoods }) => {\r\n\r\n  const [currentfood_id, set_currentfood_id] = useState(foodid)\r\n  const [recipedata, set_recipedata] = useState([]);\r\n  const [recipetext, set_recipetext] = useState([]);\r\n  const [ingredients, set_ingridients] = useState([]);\r\n  const [ingredientamount, set_ingredientsamount] = useState([]);\r\n  const [youtubeid, set_youtubeid] = useState(\"\");\r\n  const [showvideo, set_showvideo] = useState(false);\r\n  const [isfavorite, set_isfavorite] = useState(false);\r\n  let favoritefoods = [];\r\n\r\n  const getRecipe = async () => {\r\n\r\n    try {\r\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${currentfood_id}`)\r\n\r\n      if (localStorage.getItem(\"SavedFoods\")) {\r\n        favoritefoods = localStorage.getItem(\"SavedFoods\").split(\",\");\r\n        if (favoritefoods.includes(currentfood_id)) { set_isfavorite(true); }\r\n      }\r\n\r\n\r\n      set_recipedata(result.data.meals)\r\n      let temparr = result.data.meals[0].strInstructions.split(\"\\n\");\r\n\r\n      set_recipetext(temparr);\r\n\r\n      temparr = [];\r\n      let temparr_two = [];\r\n\r\n      for (let i = 1; i < 21; i++) {\r\n        let str = \"strIngredient\" + i;\r\n        let str2 = \"strMeasure\" + i;\r\n\r\n        if (result.data.meals[0][str] || result.data.meals[0][str] !== \"\") {\r\n          temparr.push(result.data.meals[0][str])\r\n          temparr_two.push(result.data.meals[0][str2])\r\n        }\r\n\r\n        if (result.data.meals[0][str] == null) {\r\n          temparr.pop();\r\n          temparr_two.pop();\r\n        }\r\n      }\r\n\r\n\r\n      set_ingridients(temparr);\r\n      set_ingredientsamount(temparr_two);\r\n\r\n      temparr = []; temparr_two = [];\r\n\r\n      temparr = result.data.meals[0].strYoutube.split(\"=\");\r\n\r\n      set_youtubeid(temparr[temparr.length - 1]);\r\n      temparr = [];\r\n\r\n\r\n    } catch (e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e) }\r\n\r\n  }\r\n\r\n  useEffect(() => { set_isfavorite(false); getRecipe() }, [currentfood_id])\r\n\r\n\r\n\r\n\r\n  return (<section className=\"mt-8\">\r\n    {recipedata.length === 0 ? <div className=\"flex item-center justify-center mt-8\">\r\n      <img src={loading} alt=\"loading\" className=\"w-12 h-12\" />\r\n    </div> :\r\n      <div className=\"mt-16\">\r\n        {\r\n          recipedata.map(item => (\r\n            <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}`}>\r\n              <section key={`${item.strMeal} ${item.strMeal} ${item.idMeal}1`} className=\"flex flex-col xl:flex-row items-center \">\r\n                <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}2`} className=\"mb-20 xl:mb-0 lg:ml-2 flex flex-col w-4/5 justify-center xl:w-2/4\">\r\n                  <div className=\"flex justify-center\"><img className=\"ml-1 w-full lg:w-[440] \" key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} /></div>\r\n                  <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}3`} className=\"flex flex-col lg:flex-row justify-between text-base\">\r\n                    <h4 className=\"mt-4 lg:mt-0 text-center border-b-2  font-black pl-2 lg:w-3/5\" key={item.strMeal}>{item.strMeal} </h4>\r\n                    {isfavorite ?\r\n\r\n                      <button key={`${item.idMeal}${item.idMeal}1`} className=\"order-first lg:order-last pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => {set_isfavorite(false); removeFavorite(\"food\", item.idMeal)}}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"lg:ml-2\">Saved</p></button> :\r\n\r\n                      <button key={`${item.idMeal}${item.idMeal}2`} className=\"order-first lg:order-last  text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex \" onClick={() => { set_isfavorite(true); saveFavorites(\"food\", item.idMeal) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"lg:ml-2\">Add to Favories</p></button>\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n                {!showvideo && <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}5`} className=\"border-1 rounded-full bg-amber-300 px-8 py-2 flex flex-row justify-between font-mono xl:ml-24 hover:bg-amber-400 dark:bg-amber-400 dark:hover:opacity-70\" onClick={() => set_showvideo(true)}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mr-4  self-center\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M8.051 1.999h.089c.822.003 4.987.033 6.11.335a2.01 2.01 0 0 1 1.415 1.42c.101.38.172.883.22 1.402l.01.104l.022.26l.008.104c.065.914.073 1.77.074 1.957v.075c-.001.194-.01 1.108-.082 2.06l-.008.105l-.009.104c-.05.572-.124 1.14-.235 1.558a2.007 2.007 0 0 1-1.415 1.42c-1.16.312-5.569.334-6.18.335h-.142c-.309 0-1.587-.006-2.927-.052l-.17-.006l-.087-.004l-.171-.007l-.171-.007c-1.11-.049-2.167-.128-2.654-.26a2.007 2.007 0 0 1-1.415-1.419c-.111-.417-.185-.986-.235-1.558L.09 9.82l-.008-.104A31.4 31.4 0 0 1 0 7.68v-.123c.002-.215.01-.958.064-1.778l.007-.103l.003-.052l.008-.104l.022-.26l.01-.104c.048-.519.119-1.023.22-1.402a2.007 2.007 0 0 1 1.415-1.42c.487-.13 1.544-.21 2.654-.26l.17-.007l.172-.006l.086-.003l.171-.007A99.788 99.788 0 0 1 7.858 2h.193zM6.4 5.209v4.818l4.157-2.408L6.4 5.209z\" /></svg><span className=\"self-center\">Watch Video Instead</span></button>}\r\n\r\n                {\r\n                  (showvideo && youtubeid !== \"\") && <div className=\"lg:ml-8 w-full lg:w-4/5 xl:w-1/2\" key={`${item.strMeal} ${item.strMeal} ${item.idMeal}6`}>\r\n                    <iframe className=\"w-full lg:w-[440]\" key={`${item.strMeal} ${item.strMeal} ${item.idMeal}9`}  height=\"425\" src={`https://www.youtube.com/embed/${youtubeid}`} title=\"YouTube video player\" frameborder=\"0\" allowFullScreen></iframe>\r\n                    <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}10`} className=\"w-full hover:bg-gray-200\" onClick={() => set_showvideo(false)}>❌</button>\r\n                  </div>\r\n                }\r\n\r\n              </section>\r\n\r\n              <section className=\"flex flex-col justify-items-center items-center\">\r\n                {ingredientamount.length > 0 && <div className=\"bg-gray-100 rounded-r-lg w-full lg:w-3/5 xl:w-5/12 my-20  py-8 pl-4 font-serif dark:bg-gray-700\">\r\n                  <h2 className=\"text-center capitalize text-2xl leading-10 pb-8\">Ingredients Needed</h2>\r\n                  {ingredients.map(obj => (<p className=\"text-center leading-8\" key={`${item.idMeal}${obj} ${item.idMeal}`}>{ingredientamount[ingredients.indexOf(obj)]} {obj}</p>))}\r\n                </div>}\r\n\r\n                <div className=\"w-full lg:w-3/4 border-l-2 border-l-green-700 px-2 lg:pl-8 my-40 font-serif leading-6  lg:leading-8\">\r\n                  <h2 className=\"text-center capitalize text-2xl leading-10 mb-8 font-bold \">Recipe</h2>\r\n                  {recipetext.map(steps => (steps !== \"\" && <p  key={steps}> {steps}</p>))}\r\n                </div>\r\n\r\n\r\n              </section>\r\n\r\n\r\n            </div>\r\n\r\n          ))\r\n        } </div>}\r\n\r\n    {recipedata.length !== 0 && <h2 className=\"capitalize text-xl leading-10 font-light pl-2 text-center  lg:text-left lg:ml-24\">Similar Foods</h2>}\r\n\r\n    <div className=\"h-96 overflow-y-scroll lg:ml-24 \">\r\n\r\n      {similarfoods.map(item => (<div className=\"float-left w-1/3 lg:w-1/5 lg:ml-2\" onClick={() => set_currentfood_id(item.idMeal)} key={`${item.idMeal}${item.strMealThumb}${item.strMeal}`}>\r\n        {\r\n          (recipedata[0] !== undefined && recipedata[0].strMeal !== item.strMeal) && <div className=\"p-1 text-sm font-light hover:opacity-75\" key={`${item.strMealThumb}${item.strMeal}`} >\r\n            <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\r\n            <p className=\" text-center\" key={item.strMeal}>{item.strMeal}</p>\r\n          </div>\r\n        }\r\n      </div>\r\n      )\r\n      )}\r\n    </div>\r\n  </section>)\r\n}\r\n\r\nexport default RecipePage;\r\n","C:\\Users\\Bisrat\\Documents\\code\\morbik-food\\src\\drinksrecipepage.js",["150"],[],"import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport loading from './imgs/loading_.gif'\r\nimport saveFavorites from './savefavorites_function'\r\nimport removeFavorite from \"./removefavorites_function\"\r\n\r\n\r\nconst RecipePage = ({ drinkid, similardrinks }) => {\r\n\r\n  const [currentdrink_id, set_currentdrink_id] = useState(drinkid)\r\n  const [recipedata, set_recipedata] = useState([]);\r\n  const [recipetext, set_recipetext] = useState([]);\r\n  const [ingredients, set_ingridients] = useState([]);\r\n  const [ingredientamount, set_ingredientsamount] = useState([]);\r\n  const [isfavorite , set_isfavorite] = useState(false);\r\n  let favoritedrinks = [];\r\n\r\n  const getRecipe = async () => {\r\n\r\n    try {\r\n      const result = await axios(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${currentdrink_id}`)\r\n\r\n      if(localStorage.getItem(\"SavedDrinks\"))\r\n      {  favoritedrinks = localStorage.getItem(\"SavedDrinks\").split(\",\");\r\n      favoritedrinks = localStorage.getItem(\"SavedDrinks\").split(\",\");\r\n\r\n          if(favoritedrinks.includes(currentdrink_id) ) { set_isfavorite(true); }\r\n      }\r\n\r\n      set_recipedata(result.data.drinks)\r\n      let temparr = result.data.drinks[0].strInstructions.split(\"\\n\");\r\n\r\n      set_recipetext(temparr);\r\n\r\n      temparr = [];\r\n      let temparr_two = [];\r\n\r\n      for (let i = 1; i < 16; i++) {\r\n        let str = \"strIngredient\" + i;\r\n        let str2 = \"strMeasure\" + i;\r\n\r\n        if (result.data.drinks[0][str] || result.data.drinks[0][str] !== \"\") {\r\n          temparr.push(result.data.drinks[0][str])\r\n          temparr_two.push(result.data.drinks[0][str2])\r\n        }\r\n\r\n        if (result.data.drinks[0][str] == null) {\r\n          temparr.pop();\r\n          temparr_two.pop();\r\n        }\r\n      }\r\n\r\n      set_ingridients(temparr);\r\n      set_ingredientsamount(temparr_two);\r\n\r\n      temparr = []; temparr_two = [];\r\n\r\n\r\n\r\n    } catch (e) { console.log(`Fetch recipe for ${drinkid} failed !  ` + e) }\r\n\r\n  }\r\n\r\n  useEffect(() => { set_isfavorite(false); getRecipe() }, [currentdrink_id])\r\n\r\n  return (<section className=\"mt-8\">\r\n    {recipedata.length === 0 ?<div className=\"flex item-center justify-center mt-8\"> \r\n    <img src={loading} alt=\"loading\" className=\"w-12 h-12\" /> \r\n    </div> :\r\n      <div className=\"mt-16\">\r\n        {\r\n          recipedata.map(item => (\r\n            <div key={`${item.strDrink} ${item.strDrink} ${item.idDrink}`}>\r\n              <section key={`${item.strDrink}1`} className=\"flex flex-col lg:flex-row justify-center items-center\">\r\n                <div  key={`${item.strDrink}2`}  className=\"mb-20 lg:mb-0 lg:ml-2 flex flex-col w-11/12 justify-center lg:w-3/4\" >\r\n                  <div  key={`${item.strDrink}3`} className=\"flex justify-center\"><img className=\"ml-1 w-full lg:w-[440] \" key={item.strDrinkThumb} src={item.strDrinkThumb} alt={item.strDrink} width=\"480\" height=\"315\" /></div>\r\n\r\n                   <div  key={`${item.strDrink}4`} className=\"flex flex-col lg:flex-row justify-between text-base\">\r\n                    <h4 className=\"mt-4 lg:mt-0 text-center border-b-2  font-black pl-2 lg:w-3/5\" key={item.strDrink}>{item.strDrink} </h4>\r\n  \r\n                  {   isfavorite ?\r\n                    <button key={`${item.idDrink}${item.idDrink}1`} className=\"order-first lg:order-last pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => {set_isfavorite(false); removeFavorite(\"drink\" , item.idDrink)} }><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"ml-2\">Saved</p></button> :\r\n\r\n                    <button key={`${item.idDrink}${item.idDrink}2`} className=\"order-first lg:order-last  text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex\" onClick={() => { set_isfavorite(true); saveFavorites(\"drink\", item.idDrink) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"ml-2\">Add to Favories</p></button>\r\n                  }\r\n                  </div>\r\n\r\n\r\n                </div>\r\n              </section>\r\n            \r\n              <section  key={`${item.strDrink}5`} className=\"flex flex-col justify-items-center items-center\">\r\n                {ingredientamount.length > 0 && <div  key={`${item.strDrink}6`} className=\"bg-gray-100 rounded-r-lg w-full lg:w-3/5 my-20 py-8 pl-4 font-serif dark:bg-gray-700 \">\r\n                  <h2  key={`${item.strDrink}7`} className=\"text-center capitalize text-2xl leading-10 pb-8\">Ingredients Needed</h2>\r\n                  {ingredients.map(obj => (<p className=\"text-center leading-8\" key={`${item.idDrink}${obj} ${item.idDrink}`}>{ingredientamount[ingredients.indexOf(obj)]} {obj}</p>))}\r\n                </div>}\r\n\r\n                <div  key={`${item.strDrink}8`} className=\"w-full lg:w-3/4 border-l-2 border-l-green-700 px-2 lg:pl-8 my-40 font-serif leading-6  lg:leading-8\">\r\n                  <h2  key={`${item.strDrink}9`} className=\"text-center capitalize text-2xl leading-10 mb-8 font-bold \">Recipe</h2>\r\n                  {recipetext.map(steps => (steps !== \"\" && <p key={steps}> {steps}</p>))}\r\n                </div>\r\n\r\n\r\n              </section>\r\n\r\n\r\n            </div>\r\n\r\n          ))\r\n        } </div>}\r\n\r\n     {recipedata.length !== 0  && <h2 className=\"capitalize text-xl leading-10 font-light pl-2 text-center  lg:text-left lg:ml-24\">Similar Drinks</h2>}\r\n\r\n    <div className=\"h-96 overflow-y-scroll lg:ml-24 \">\r\n\r\n      {similardrinks.map(item => (<div className=\"float-left w-1/3 lg:w-1/5 lg:ml-2\" onClick={() => set_currentdrink_id(item.idDrink)} key={`${item.idDrink}${item.strDrinkThumb}${item.strDrink}`}>\r\n        {\r\n          (recipedata[0] !== undefined && recipedata[0].strDrink !== item.strDrink) && <div  className=\"p-1 text-sm font-light hover:opacity-75\" key={`${item.strDrinkThumb}${item.strDrink}`} >\r\n            <img key={item.strMealThumb} src={item.strDrinkThumb} alt={item.strDrink} />\r\n            <p className=\" text-center\" key={item.strDrink}>{item.strDrink}</p>\r\n          </div>\r\n        }\r\n      </div>\r\n      )\r\n      )}\r\n    </div>\r\n  </section>)\r\n}\r\n\r\nexport default RecipePage;\r\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":14,"column":48,"nodeType":"157","endLine":14,"endColumn":50,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"156","line":16,"column":6,"nodeType":"157","endLine":16,"endColumn":8,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":2,"column":22,"nodeType":"162","messageId":"163","endLine":2,"endColumn":31},{"ruleId":"160","severity":1,"message":"164","line":15,"column":18,"nodeType":"162","messageId":"163","endLine":15,"endColumn":27},{"ruleId":"160","severity":1,"message":"165","line":18,"column":13,"nodeType":"162","messageId":"163","endLine":18,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":30,"column":6,"nodeType":"157","endLine":30,"endColumn":8,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":53,"column":6,"nodeType":"157","endLine":53,"endColumn":15,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"169","line":83,"column":22,"nodeType":"170","endLine":83,"endColumn":67},{"ruleId":"155","severity":1,"message":"171","line":92,"column":23,"nodeType":"170","endLine":92,"endColumn":69},{"ruleId":"155","severity":1,"message":"172","line":101,"column":24,"nodeType":"170","endLine":101,"endColumn":74},{"ruleId":"155","severity":1,"message":"173","line":51,"column":41,"nodeType":"157","endLine":51,"endColumn":52,"suggestions":"174"},{"ruleId":"151","replacedBy":"175"},{"ruleId":"153","replacedBy":"176"},{"ruleId":"155","severity":1,"message":"173","line":69,"column":41,"nodeType":"157","endLine":69,"endColumn":52,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"178","line":70,"column":59,"nodeType":"157","endLine":70,"endColumn":75,"suggestions":"179"},{"ruleId":"155","severity":1,"message":"178","line":64,"column":59,"nodeType":"157","endLine":64,"endColumn":76,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'whereami_arr'. Either include it or remove the dependency array.","ArrayExpression",["183"],["184"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'set_theme' is assigned a value but never used.","'seta' is assigned a value but never used.",["185"],"React Hook useEffect has a missing dependency: 'fetchsubreddit'. Either include it or remove the dependency array.",["186"],"Assignments to the 'foodfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'drinkfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'redditfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.",["187"],["181"],["182"],["188"],"React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["189"],["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"191","fix":"193"},{"desc":"191","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"197","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [whereami_arr]",{"range":"204","text":"205"},{"range":"206","text":"205"},{"range":"207","text":"205"},"Update the dependencies array to be: [slug, a, fetchsubreddit]",{"range":"208","text":"209"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"210","text":"211"},{"range":"212","text":"211"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"213","text":"214"},"Update the dependencies array to be: [currentdrink_id, getRecipe]",{"range":"215","text":"216"},[545,547],"[whereami_arr]",[348,350],[1123,1125],[1732,1741],"[slug, a, fetchsubreddit]",[1896,1907],"[getFoods_list, navChoice]",[2552,2563],[2193,2209],"[currentfood_id, getRecipe]",[2046,2063],"[currentdrink_id, getRecipe]"]