[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"7","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js":"8"},{"size":2669,"mtime":1646933732353,"results":"9","hashOfConfig":"10"},{"size":3513,"mtime":1646936361668,"results":"11","hashOfConfig":"10"},{"size":3926,"mtime":1646936311691,"results":"12","hashOfConfig":"10"},{"size":4258,"mtime":1647001257670,"results":"13","hashOfConfig":"10"},{"size":13148,"mtime":1647079789746,"results":"14","hashOfConfig":"10"},{"size":14145,"mtime":1647078679780,"results":"15","hashOfConfig":"10"},{"size":8061,"mtime":1646939156578,"results":"16","hashOfConfig":"10"},{"size":5891,"mtime":1646939364740,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"165v2a5",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js",["45"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js",["46","47","48"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js",["49"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js",["50","51"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport axios from 'axios'\nimport food_subredddits_set from \"./food_subredditlist\"\nimport drink_subredddits_set from \"./drinks_subredditlist\"\nimport saveFavorites from './savefavorites_function'\nimport removeFavorite from \"./removefavorites_function\"\nimport Footer from \"./fotter\"\nimport loading from './imgs/loading.gif'\n\n\n\n\nconst Subreddit = () => {\n\n    const [subreddit, set_subreddit] = useState([]);\n    const [subredditcontent_map, set_subredditcontent_map] = useState({});\n    const [comment_isfetched, set_comment_isfetched] = useState(false);\n    const { slug } = useParams();\n    const [a, seta] = useState(slug)\n    const [isfavorite, set_isfavorite] = useState(false);\n    let favoritereddits = [];\n\n\n    useEffect(() => {\n        const fetchsubreddit = async () => {\n            try {\n                const result = await axios(`https://www.reddit.com/r/${slug}/.json`);\n\n                if (localStorage.getItem(\"SavedSubReddits\")) {\n                    favoritereddits = localStorage.getItem(\"SavedSubReddits\").split(\",\");\n                    if (favoritereddits.includes(slug)) { set_isfavorite(true); console.log(favoritereddits)}\n                    else { set_isfavorite(false); console.log(favoritereddits)}\n                }\n\n                set_subreddit(result.data.data.children);\n\n            } catch (e) { console.log(`Fetch r/${slug} failed. ${e}`) }\n        }\n\n        fetchsubreddit();\n    }, [slug, a])\n\n    useEffect(() => {\n\n\n        if (subreddit.length > 0) {\n            let tempobj = {};\n            let counter = 0;\n\n            subreddit.forEach(item => {\n                const fetchcomments = async () => {\n\n                    //remove ? to allow reddit api call\n                    if (item.data.title[item.data.title.length - 1] === \"?\") { item.data.title = item.data.title.slice(0, -1); }\n\n                    try {\n                        const result = await axios(`https://www.reddit.com/r/${item.data.subreddit}/comments/${item.data.id}/${item.data.title}/.json`);\n                        tempobj[item.data.id] = result.data[0].data.children[0].data;\n\n                        counter++;\n\n                        if (counter === subreddit.length - 1) {\n                            set_subredditcontent_map(tempobj)\n                            set_comment_isfetched(true);\n                        }\n                    } catch (error) {\n                        console.log(\"Error: Fetch reddit posts and comments failed.\\n-------------------\" + error + \"-------------------------\");\n                        tempobj[item.data.id] = {}\n                        counter++;\n                    }\n                }\n                fetchcomments();\n            });\n        }\n    }, [subreddit])\n\n    return (\n        <article className=\"grid grid-cols-8 gab-3\">\n\n            <nav className=\"col-start-1 col-end-3  \">\n                <RedditNavigation />\n            </nav>\n            <main className=\"col-start-3 col-end-9 mt-16\">\n\n                {subreddit.length === 0 ? <div className=\"h-screen flex justify-center \"><img src={loading} alt=\"loading\" className=\"h-28\" /> </div> : <div>\n                    <div className=\"flex justify-center\">\n                        <a href={`https://www.reddit.com/r/${subreddit[0].data.subreddit}/`} target=\"_blank\" rel=\"noreferrer\" >\n                            <h2 className=\"text-6xl text-gray-400 font-bold\" key={subreddit[0].data.subreddit}>{subreddit[0].data.subreddit_name_prefixed}</h2>\n                            <p className=\"pt-3 text-gray-400 text-sm text-center\">{subreddit[0].data.subreddit_subscribers ? `Subscribers - ${subreddit[0].data.subreddit_subscribers}` : \"\"}</p></a>\n                        {isfavorite ?\n\n                            <button key={`${subreddit[0].data.subreddit}${subreddit[0].data.subreddit}1`} className=\"pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => { set_isfavorite(false); removeFavorite(\"reddit\", subreddit[0].data.subreddit) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"ml-2\">Saved</p></button> :\n\n                            <button key={`${subreddit[0].data.subreddit}${subreddit[0].data.subreddit}15`} className=\"text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex \" onClick={() => { set_isfavorite(true); saveFavorites(\"reddit\", subreddit[0].data.subreddit) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"ml-2\">Add to Favories</p></button>\n                        }\n                    </div>\n                    <article className='mt-16'>\n                        \n                        {\n                            subreddit.map(item => (\n                                <section className=\" py-8 hover:shadow-md\" key={item.data.id}>\n                                    <a href={`https://www.reddit.com/${item.data.permalink}`} target=\"_blank\" rel=\"noreferrer\" >\n                                        <section className=\"flex\">\n                                            <div className=\"w-2/12 flex items-center\" key={`${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink}`}>\n                        \n                                                <svg className=\"ml-6\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.5em\" height=\"2.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 16 16\"><g fill=\"currentColor\"><path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\" /></g></svg>\n                                                <p className=\"text-2xl  font-bold justify-self-center pl-3 pr-2\" key={`${item.data.ups} ${subreddit[0].data.permalink}`} > {item.data.ups}</p>\n                                            </div>\n                                            <div className=\"w-10/12 pr-4\" key={`${item.data.title} ${item.data.author}`}>\n                                                <h4 className=\"text-xl leading-7 font-mono pb-4\" key={item.data.title}>{item.data.title}</h4>\n                                                {comment_isfetched && <section>{\n                                                    subredditcontent_map[item.data.id] !== undefined &&\n                                                    <section key={subredditcontent_map[item.data.id].subreddit_id}>\n                                                        <p className=\"font-serif leading-6\" key={subredditcontent_map[item.data.id].selftext}>{subredditcontent_map[item.data.id].selftext}</p>\n                                                        <div className=\"flex items-center justify-start pt-8 pb-4\" key={`${subredditcontent_map[item.data.id].subreddit_id}${subredditcontent_map[item.data.id].subreddit_id}${item.data.author}`}>\n                                                            <p className=\"w-8/12 font-light \" key={item.data.author}>Submitted by : {item.data.author}</p>\n                                                            <button className=\"ml-4 text-sm px-6 py-1 font-semibold bg-amber-300\" key={`${subredditcontent_map[item.data.id].num_comments} ${subredditcontent_map[item.data.id].subreddit_id}`} >{subredditcontent_map[item.data.id].num_comments} Comments </button>\n                                                        </div><hr />\n                                                    </section>}\n                                                </section>}\n                                            </div>\n                                        </section>\n                                    </a>\n                                </section>\n                            ))\n                        } \n                        \n                    </article>\n                    </div>}\n            </main>\n\n            <div className=\"col-start-3 col-end-9\">\n                <Footer />\n            </div>\n\n        </article>\n    )\n}\n\nconst RedditNavigation = () => {\n\n    const [show_foodsubreddit, setshow_foodsubreddit] = useState(false);\n    const [show_drinksubreddit, setshow_drinksubreddit] = useState(true);\n\n\n    let foodsubreddit_arr = [];\n    let drinksubreddit_arr = [];\n\n\n    const iterator1 = food_subredddits_set.entries();\n    const iterator2 = drink_subredddits_set.entries();\n\n\n    for (const entry of iterator1) { foodsubreddit_arr.push(entry[0]); }\n    for (const entry of iterator2) { drinksubreddit_arr.push(entry[0]); }\n\n    const showChoices = (type) => {\n        if (type === \"food\") {\n            if (show_foodsubreddit) { setshow_foodsubreddit(false); }\n            else setshow_foodsubreddit(true)\n        }\n        else {\n            if (show_drinksubreddit) { setshow_drinksubreddit(false); }\n            else setshow_drinksubreddit(true)\n        }\n    }\n\n    return (<section className=\"fixed left-0 w-1/4 h-screen overflow-y-scroll overscroll-y-auto mt-24\">\n\n        <div>\n            <div className=\"flex flex-row items-center justify-between \">\n\n                <h2 className=\"font-black text-md pl-12 mt-10 mb-3 flex\"><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 1024 1024\"><path fill=\"currentColor\" d=\"M128 352.576V352a288 288 0 0 1 491.072-204.224a192 192 0 0 1 274.24 204.48a64 64 0 0 1 57.216 74.24C921.6 600.512 850.048 710.656 736 756.992V800a96 96 0 0 1-96 96H384a96 96 0 0 1-96-96v-43.008c-114.048-46.336-185.6-156.48-214.528-330.496A64 64 0 0 1 128 352.64zm64-.576h64a160 160 0 0 1 320 0h64a224 224 0 0 0-448 0zm128 0h192a96 96 0 0 0-192 0zm439.424 0h68.544A128.256 128.256 0 0 0 704 192c-15.36 0-29.952 2.688-43.52 7.616c11.328 18.176 20.672 37.76 27.84 58.304A64.128 64.128 0 0 1 759.424 352zM672 768H352v32a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32v-32zm-342.528-64h365.056c101.504-32.64 165.76-124.928 192.896-288H136.576c27.136 163.072 91.392 255.36 192.896 288z\" /></svg><p className=\"ml-2\">Food Subreddits</p></h2>\n                <button className=\"border-b text-xl  mt-10 mb-3 mr-8 hover:text-red-400\" onClick={() => showChoices(\"food\")}>{show_foodsubreddit ? \"↑\" : \"↓\"}</button>\n            </div>\n            <div className={show_foodsubreddit ? \"flex flex-col\" : \"hidden\"}>\n\n                {\n                    foodsubreddit_arr.map(item => (\n                        <Link key={`${item}key`} to={`/reddit/${item}`} >\n                            <div key={`${item}1`} className=\"flex item-center justify-center\">\n                                <button key={item} className=\" w-3/4 border-b px-4 py-3  hover:border-b-amber-500\">{item}</button>\n                            </div>\n                        </Link>\n                    ))\n                }\n            </div>\n\n            <div className=\"flex flex-row items-center justify-between \">\n                <h2 className=\"font-black  text-md pl-12 mt-10 mb-3 flex\"><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 1024 1024\"><path fill=\"currentColor\" d=\"M768 64a192 192 0 1 1-69.952 370.88L480 725.376V896h96a32 32 0 1 1 0 64H320a32 32 0 1 1 0-64h96V725.376L76.8 273.536a64 64 0 0 1-12.8-38.4v-10.688a32 32 0 0 1 32-32h71.808l-65.536-83.84a32 32 0 0 1 50.432-39.424l96.256 123.264h337.728A192.064 192.064 0 0 1 768 64zM656.896 192.448H800a32 32 0 0 1 32 32v10.624a64 64 0 0 1-12.8 38.4l-80.448 107.2a128 128 0 1 0-81.92-188.16v-.064zm-357.888 64l129.472 165.76a32 32 0 0 1-50.432 39.36l-160.256-205.12H144l304 404.928l304-404.928H299.008z\" /></svg>\n                    <p className=\"ml-2\">Drink Subreddits</p></h2>\n                <button className=\"border-b text-xl  mt-10 mb-3 mr-8 hover:text-red-400\" onClick={() => showChoices(\"drink\")}>{show_drinksubreddit ? \"↑\" : \"↓\"}</button>\n            </div>\n            <div className={show_drinksubreddit ? \"flex flex-col\" : \"hidden\"}>\n                {\n                    drinksubreddit_arr.map(item => (\n                        <Link key={`${item}key`} to={`/reddit/${item}`} >\n                            <div key={`${item}1`} className=\"flex item-center justify-center\">\n                                <button key={item} className=\"w-3/4 border-b px-4 py-3 hover:border-b-amber-500\">{item}</button>\n                            </div>\n                        </Link>\n                    ))\n                }\n            </div>\n        </div>\n    </section>)\n}\n\nexport default Subreddit","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js",["52","53","54","55","56","57"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["58"],[],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\nimport saveFavorites from './savefavorites_function'\nimport removeFavorite from './removefavorites_function'\n\n\nconst RecipePage = ({ foodid, similarfoods }) => {\n\n  const [currentfood_id, set_currentfood_id] = useState(foodid)\n  const [recipedata, set_recipedata] = useState([]);\n  const [recipetext, set_recipetext] = useState([]);\n  const [ingredients, set_ingridients] = useState([]);\n  const [ingredientamount, set_ingredientsamount] = useState([]);\n  const [youtubeid, set_youtubeid] = useState(\"\");\n  const [showvideo, set_showvideo] = useState(false);\n  const [isfavorite, set_isfavorite] = useState(false);\n  let favoritefoods = [];\n\n  const getRecipe = async () => {\n\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${currentfood_id}`)\n\n      if (localStorage.getItem(\"SavedFoods\")) {\n        favoritefoods = localStorage.getItem(\"SavedFoods\").split(\",\");\n        if (favoritefoods.includes(currentfood_id)) { set_isfavorite(true); }\n      }\n\n\n      set_recipedata(result.data.meals)\n      let temparr = result.data.meals[0].strInstructions.split(\"\\n\");\n\n      set_recipetext(temparr);\n\n      temparr = [];\n      let temparr_two = [];\n\n      for (let i = 1; i < 21; i++) {\n        let str = \"strIngredient\" + i;\n        let str2 = \"strMeasure\" + i;\n\n        if (result.data.meals[0][str] || result.data.meals[0][str] !== \"\") {\n          temparr.push(result.data.meals[0][str])\n          temparr_two.push(result.data.meals[0][str2])\n        }\n\n        if (result.data.meals[0][str] == null) {\n          temparr.pop();\n          temparr_two.pop();\n        }\n      }\n\n\n      set_ingridients(temparr);\n      set_ingredientsamount(temparr_two);\n\n      temparr = []; temparr_two = [];\n\n      temparr = result.data.meals[0].strYoutube.split(\"=\");\n\n      set_youtubeid(temparr[temparr.length - 1]);\n      temparr = [];\n\n\n    } catch (e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e) }\n\n  }\n\n  useEffect(() => { set_isfavorite(false); getRecipe() }, [currentfood_id])\n\n\n\n\n  return (<section className=\"mt-8\">\n    {recipedata.length === 0 ? <div className=\"flex item-center justify-center\">\n      <img src={loading} alt=\"loading\" className=\"\" />\n    </div> :\n      <div className=\"mt-16\">\n        {\n          recipedata.map(item => (\n            <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}`}>\n              <section key={`${item.strMeal} ${item.strMeal} ${item.idMeal}1`} className=\"flex flex-row items-center\">\n                <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}2`} className=\"ml-2 flex flex-col w-2/4\">\n                  <img className=\"ml-1\" key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} width=\"480\" height=\"315\" />\n                  <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}3`} className=\"flex justify-between\">\n                    <h4 className=\"text-center border-b-2 font-black pl-2 w-3/5\" key={item.strMeal}>{item.strMeal} </h4>\n                    {isfavorite ?\n\n                      <button key={`${item.idMeal}${item.idMeal}1`} className=\"pr-4 text-red-400 ml-8 self-end hover:border-b-2 hover:border-red-300 flex\" onClick={() => {set_isfavorite(false); removeFavorite(\"food\", item.idMeal)}}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M11 15h2V9h3l-4-5l-4 5h3z\" /><path fill=\"currentColor\" d=\"M20 18H4v-7H2v7c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-7h-2v7z\" /></svg><p className=\"ml-2\">Saved</p></button> :\n\n                      <button key={`${item.idMeal}${item.idMeal}2`} className=\"text-red-400 border-b-2 border-red-300 hover:opacity-70 ml-8 self-end flex \" onClick={() => { set_isfavorite(true); saveFavorites(\"food\", item.idMeal) }}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1.5em\" height=\"1.5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5l-5-5l1.41-1.41L11 12.67V3h2v9.67z\" /></svg><p className=\"ml-2\">Add to Favories</p></button>\n                    }\n                  </div>\n                </div>\n\n                {!showvideo && <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}5`} className=\"border-1 rounded-full bg-amber-300 px-8 py-2 flex flex-row justify-between font-mono ml-24 hover:bg-amber-400 \" onClick={() => set_showvideo(true)}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mr-4 self-center\" aria-hidden=\"true\" role=\"img\" width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M8.051 1.999h.089c.822.003 4.987.033 6.11.335a2.01 2.01 0 0 1 1.415 1.42c.101.38.172.883.22 1.402l.01.104l.022.26l.008.104c.065.914.073 1.77.074 1.957v.075c-.001.194-.01 1.108-.082 2.06l-.008.105l-.009.104c-.05.572-.124 1.14-.235 1.558a2.007 2.007 0 0 1-1.415 1.42c-1.16.312-5.569.334-6.18.335h-.142c-.309 0-1.587-.006-2.927-.052l-.17-.006l-.087-.004l-.171-.007l-.171-.007c-1.11-.049-2.167-.128-2.654-.26a2.007 2.007 0 0 1-1.415-1.419c-.111-.417-.185-.986-.235-1.558L.09 9.82l-.008-.104A31.4 31.4 0 0 1 0 7.68v-.123c.002-.215.01-.958.064-1.778l.007-.103l.003-.052l.008-.104l.022-.26l.01-.104c.048-.519.119-1.023.22-1.402a2.007 2.007 0 0 1 1.415-1.42c.487-.13 1.544-.21 2.654-.26l.17-.007l.172-.006l.086-.003l.171-.007A99.788 99.788 0 0 1 7.858 2h.193zM6.4 5.209v4.818l4.157-2.408L6.4 5.209z\" /></svg><span className=\"self-center\">Watch Video Instead</span></button>}\n\n                {\n                  (showvideo && youtubeid !== \"\") && <div className=\"ml-8\" key={`${item.strMeal} ${item.strMeal} ${item.idMeal}6`}>\n                    <iframe key={`${item.strMeal} ${item.strMeal} ${item.idMeal}9`} width=\"440\" height=\"425\" src={`https://www.youtube.com/embed/${youtubeid}`} title=\"YouTube video player\" frameborder=\"0\" allowFullScreen></iframe>\n                    <button key={`${item.strMeal} ${item.strMeal} ${item.idMeal}10`} className=\"w-full hover:bg-gray-200\" onClick={() => set_showvideo(false)}>❌</button>\n                  </div>\n                }\n\n              </section>\n\n              <section className=\"flex flex-col justify-items-center items-center\">\n                {ingredientamount.length > 0 && <div className=\"bg-gray-100 rounded-r-lg w-5/12 my-20 py-8 pl-4 font-serif\t\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 pb-8\">Ingredients Needed</h2>\n                  {ingredients.map(obj => (<p className=\"text-center leading-8\" key={`${item.idMeal}${obj} ${item.idMeal}`}>{ingredientamount[ingredients.indexOf(obj)]} {obj}</p>))}\n                </div>}\n\n                <div className=\"w-3/4 border-l-2 border-l-green-700 pl-8 my-40 font-serif leading-8\">\n                  <h2 className=\"text-center capitalize text-2xl leading-10 mb-8 font-bold \">Recipe</h2>\n                  {recipetext.map(steps => (steps !== \"\" && <p key={steps}> {steps}</p>))}\n                </div>\n\n\n              </section>\n\n\n            </div>\n\n          ))\n        } </div>}\n\n    {recipedata.length !== 0 && <h2 className=\"capitalize text-xl leading-10 font-light pl-2 ml-24 \">Similar Foods</h2>}\n\n    <div className=\"h-96 overflow-y-scroll ml-24 \">\n\n      {similarfoods.map(item => (<div className=\"float-left w-1/5 ml-2\" onClick={() => set_currentfood_id(item.idMeal)} key={`${item.idMeal}${item.strMealThumb}${item.strMeal}`}>\n        {\n          (recipedata[0] !== undefined && recipedata[0].strMeal !== item.strMeal) && <div className=\"text-sm font-light hover:opacity-75\" key={`${item.strMealThumb}${item.strMeal}`} >\n            <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n            <p className=\" text-center\" key={item.strMeal}>{item.strMeal}</p>\n          </div>\n        }\n      </div>\n      )\n      )}\n    </div>\n  </section>)\n}\n\nexport default RecipePage;\n",["59","60"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js",["61"],[],{"ruleId":"62","severity":1,"message":"63","line":50,"column":41,"nodeType":"64","endLine":50,"endColumn":52,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":14,"column":10,"nodeType":"68","messageId":"69","endLine":14,"endColumn":15},{"ruleId":"66","severity":1,"message":"70","line":14,"column":17,"nodeType":"68","messageId":"69","endLine":14,"endColumn":26},{"ruleId":"62","severity":1,"message":"63","line":58,"column":41,"nodeType":"64","endLine":58,"endColumn":52,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":18,"column":13,"nodeType":"68","messageId":"69","endLine":18,"endColumn":20},{"ruleId":"66","severity":1,"message":"73","line":20,"column":15,"nodeType":"68","messageId":"69","endLine":20,"endColumn":19},{"ruleId":"62","severity":1,"message":"74","line":31,"column":39,"nodeType":"75","endLine":31,"endColumn":89},{"ruleId":"62","severity":1,"message":"76","line":78,"column":22,"nodeType":"75","endLine":78,"endColumn":67},{"ruleId":"77","severity":1,"message":"78","line":80,"column":29,"nodeType":"79","messageId":"80","endLine":80,"endColumn":31},{"ruleId":"62","severity":1,"message":"81","line":87,"column":23,"nodeType":"75","endLine":87,"endColumn":69},{"ruleId":"77","severity":1,"message":"78","line":88,"column":30,"nodeType":"79","messageId":"80","endLine":88,"endColumn":32},{"ruleId":"62","severity":1,"message":"82","line":95,"column":24,"nodeType":"75","endLine":95,"endColumn":74},{"ruleId":"77","severity":1,"message":"78","line":96,"column":31,"nodeType":"79","messageId":"80","endLine":96,"endColumn":33},{"ruleId":"62","severity":1,"message":"83","line":70,"column":59,"nodeType":"64","endLine":70,"endColumn":75,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"62","severity":1,"message":"83","line":64,"column":59,"nodeType":"64","endLine":64,"endColumn":76,"suggestions":"89"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-unused-vars","'isnav' is assigned a value but never used.","Identifier","unusedVar","'set_isnav' is assigned a value but never used.",["91"],"'counter' is assigned a value but never used.","'seta' is assigned a value but never used.","Assignments to the 'favoritereddits' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'foodfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'drinkfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'redditfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["92"],"no-native-reassign",["93"],"no-negated-in-lhs",["94"],["95"],{"desc":"96","fix":"97"},{"desc":"96","fix":"98"},{"desc":"99","fix":"100"},"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"103","text":"104"},{"range":"105","text":"104"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"106","text":"107"},"Update the dependencies array to be: [currentdrink_id, getRecipe]",{"range":"108","text":"109"},[1814,1825],"[getFoods_list, navChoice]",[2262,2273],[2123,2139],"[currentfood_id, getRecipe]",[1982,1999],"[currentdrink_id, getRecipe]"]