[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js":"7"},{"size":221,"mtime":1644841289213,"results":"8","hashOfConfig":"9"},{"size":911,"mtime":1646151212688,"results":"10","hashOfConfig":"9"},{"size":564,"mtime":1646151026407,"results":"11","hashOfConfig":"9"},{"size":1263,"mtime":1646074727087,"results":"12","hashOfConfig":"9"},{"size":2960,"mtime":1646133102754,"results":"13","hashOfConfig":"9"},{"size":5907,"mtime":1646147602560,"results":"14","hashOfConfig":"9"},{"size":3785,"mtime":1646134648452,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"165v2a5",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/index.js",[],[],["40","41"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/App.js",["42"],[],"import Header from \"./header\";\nimport Footer from \"./fotter\";\nimport Main from \"./main\";\nimport Navigation from \"./nav\";\nimport RecipeContent\nimport { useState } from 'react';\nimport { BrowserRouter, Routes, Route ,Outlet , Redirect} from \"react-router-dom\"\n\nfunction App() {\n\n\n\n  return (<BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<Frontpage />} >\n        <Route path=\"/\" element={<RecipeContent />} />\n        <Route path=\"/reddit\" element={<RedditPage />}  />\n      </Route>\n      <Route path=\"RedditPage\" element={<RedditPage />} />\n    </Routes>\n\n\n  </BrowserRouter>)\n  /*\n   \n    */\n}\n\n\nconst RedditPage = () => {\n  return (<div className=\"mt-32\">\n    <p>Reddit page</p>\n  </div>)\n}\n\n\nconst Frontpage = () => {\n\n\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        <Header />\n      </div>\n        \n      <Outlet />\n\n      \n      </div>\n      );\n}\n      export default App;\n","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/header.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/fotter.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js",["43","44","45"],[],"import React , {useState , useEffect} from 'react'\nimport axios from 'axios'\nimport RecipePage from './recipepage'\n\nconst Main = ({navChoice,setChoice, choicetype , set_choicetype, togglerecipe_page, set_togglerecipe_page}) => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  \n  const [recipefor , set_recipefor] = useState(\"\");\n  const [isnav , set_isnav] = useState(\"text-xs font-black bg-white border-2 rounded-full px-6 py-2 mb-2 ml-4\")\n\n  const getCatagories = async () => {\n     try {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n    set_catagories(result.data.meals)\n\n     }catch(e) { console.log(\"Fetch catagory failed ! \" + e)}\n  }\n\n  const getFoods_list = async () => {\n    try {\n      if(choicetype === \"c\"){\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${navChoice}`)\n        if( result.data.meals== null  ) {  set_frontfood_list([\"No Food Found Error\"])}\n       else { set_frontfood_list(result.data.meals)}\n\n      }\n      else if(choicetype === \"a\") {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${navChoice}`)\n      if( result.data.meals == null  ) { set_frontfood_list([{\"idMeal\" : \"No Food Found Error\"}]) }\n      else { set_frontfood_list(result.data.meals)}\n\n      }\n      else { \n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${navChoice}`)\n      if( result.data.meals == null  ) {  set_frontfood_list([\"No Food Found Error\"]) }\n      else { set_frontfood_list(result.data.meals) }\n\n      }\n        \n    }catch(e) { console.log(`Fetch ${navChoice} based foods failed !  ` + e)}\n\n  }\n\n\n  useEffect(() => {  getCatagories();  },[])\n\n  useEffect(() => { getFoods_list(); },[navChoice ])\n\n\n\n  return (\n    <article className=\"ml-4 mt-2 \">\n       <section className=\" \">\n        {\n          catagories.map(item => (\n            <button className=\"  text-xs font-black bg-amber-400 border-0 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 \" key={item.strCategory} onClick={() =>{ set_choicetype(\"c\"); setChoice(item.strCategory); set_togglerecipe_page(false); }}>{item.strCategory}</button>\n          ))\n        }\n        </section>\n\n  { togglerecipe_page ? <RecipePage foodid={recipefor} similarfoods= {frontfood_list} /> :\n     <section className=\"grid grid-cols-3 gap-2 m-16\">\n         { frontfood_list[0] === \"No Food Found Error\" ? <div><p>No available food for this ingrident.</p></div> :\n           frontfood_list.map(item => (\n             <div key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_togglerecipe_page(true);}}>\n             <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n             <p key={item.strMeal}>{item.strMeal}</p>\n\n             </div>\n           ))\n         }\n        </section>}\n    </article>\n  )\n}\n\n\nexport default Main\n\n","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["46"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js",[],[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":null,"fatal":true,"severity":2,"message":"51","line":6,"column":0},{"ruleId":"52","severity":1,"message":"53","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":15},{"ruleId":"52","severity":1,"message":"56","line":10,"column":18,"nodeType":"54","messageId":"55","endLine":10,"endColumn":27},{"ruleId":"57","severity":1,"message":"58","line":48,"column":40,"nodeType":"59","endLine":48,"endColumn":52,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":59,"column":36,"nodeType":"59","endLine":59,"endColumn":52,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"Parsing error: Unexpected token, expected \"from\" (6:0)","no-unused-vars","'isnav' is assigned a value but never used.","Identifier","unusedVar","'set_isnav' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"71","text":"72"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"73","text":"74"},[1831,1843],"[getFoods_list, navChoice]",[1701,1717],"[currentfood_id, getRecipe]"]