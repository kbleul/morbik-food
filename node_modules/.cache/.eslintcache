[{"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js":"1","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js":"2","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/savefavorites_function.js":"3","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js":"4","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js":"5","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js":"6","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js":"7","/home/danu/Desktop/kb/Code projects/react/morbik-food/src/removefavorites_function.js":"8"},{"size":6885,"mtime":1646733202872,"results":"9","hashOfConfig":"10"},{"size":2021,"mtime":1646560383636,"results":"11","hashOfConfig":"10"},{"size":1118,"mtime":1646502311196,"results":"12","hashOfConfig":"10"},{"size":7290,"mtime":1646733443248,"results":"13","hashOfConfig":"10"},{"size":3676,"mtime":1646675535238,"results":"14","hashOfConfig":"10"},{"size":7282,"mtime":1646728387783,"results":"15","hashOfConfig":"10"},{"size":5081,"mtime":1646728512689,"results":"16","hashOfConfig":"10"},{"size":782,"mtime":1646733626739,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"165v2a5",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/MyFavorites.js",["44","45","46","47","48","49"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js",["50"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/savefavorites_function.js",[],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js",["51","52"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport axios from 'axios'\nimport food_subredddits_set from \"./food_subredditlist\"\nimport saveFavorites from './savefavorites_function'\nimport removeFavorite from \"./removefavorites_function\"\n\n\nconst Subreddit = () => {\n\n    const [subreddit, set_subreddit] = useState([]);\n    const [subredditcontent_map, set_subredditcontent_map] = useState({});\n    const [comment_isfetched, set_comment_isfetched] = useState(false);\n    const { slug } = useParams();\n    const [a, seta] = useState(slug)\n    const [isfavorite, set_isfavorite] = useState(false);\n    let favoritereddits = [];\n\n\n    useEffect(() => {\n        const fetchsubreddit = async () => {\n            try {\n                const result = await axios(`https://www.reddit.com/r/${slug}/.json`);\n\n                if (localStorage.getItem(\"SavedSubReddits\")) {\n                    favoritereddits = localStorage.getItem(\"SavedSubReddits\").split(\",\");\n                    if (favoritereddits.includes(slug)) { set_isfavorite(true); }\n                }\n\n                set_subreddit(result.data.data.children);\n\n            } catch (e) { console.log(`Fetch r/${slug} failed. ${e}`) }\n        }\n\n        fetchsubreddit();\n    }, [slug, a])\n\n    useEffect(() => {\n\n\n        if (subreddit.length > 0) {\n            let tempobj = {};\n            let counter = 0;\n\n            subreddit.forEach(item => {\n                const fetchcomments = async () => {\n\n                    //remove ? to allow reddit api call\n                    if (item.data.title[item.data.title.length - 1] === \"?\") { item.data.title = item.data.title.slice(0, -1); }\n\n                    try {\n                        const result = await axios(`https://www.reddit.com/r/${item.data.subreddit}/comments/${item.data.id}/${item.data.title}/.json`);\n                        tempobj[item.data.id] = result.data[0].data.children[0].data;\n\n                        counter++;\n\n                        if (counter === subreddit.length - 1) {\n                            set_subredditcontent_map(tempobj)\n                            set_comment_isfetched(true);\n                        }\n                    } catch (error) {\n                        console.log(\"Error: Fetch reddit posts and comments failed.\\n-------------------\" + error + \"-------------------------\");\n                        tempobj[item.data.id] = {}\n                        counter++;\n                    }\n                }\n                fetchcomments();\n            });\n        }\n    }, [subreddit])\n\n    return (\n        <article className=\"grid grid-cols-8 gap-3\">\n\n            <nav className=\"col-start-1 col-end-3 row-start-2 row-end-2 mt-12\">\n                <RedditNavigation />\n            </nav>\n            <main className=\"col-start-3 col-end-9 row-start-2 row-end-5 mt-12\">\n\n                {subreddit.length > 0 && <div>\n                    <a href={`https://www.reddit.com/r/${subreddit[0].data.subreddit}/`} target=\"_blank\" rel=\"noreferrer\" >\n                        <h2 className=\"subredditmain_title\" key={subreddit[0].data.subreddit}>{subreddit[0].data.subreddit}</h2></a>\n                    {isfavorite ?\n                        <button key={`${ subreddit[0].data.subreddit}${ subreddit[0].data.subreddit}1`} className=\"pr-4 text-red-400\" onClick={() => {set_isfavorite(false); removeFavorite(\"reddit\", subreddit[0].data.subreddit)}}>Remove from Favorites</button> :\n                        <button  key={`${ subreddit[0].data.subreddit}${ subreddit[0].data.subreddit}15`} className=\"text-red-400 hover:border-b\" onClick={() => {set_isfavorite(true);saveFavorites(\"reddit\", subreddit[0].data.subreddit)}}>Add to Favories</button>\n                    }\n                    {\n                        subreddit.map(item => (\n                            <section className=\"\" key={item.data.id}>\n                                <a href={`https://www.reddit.com/${item.data.permalink}`} target=\"_blank\" rel=\"noreferrer\" >\n\n                                    <section className=\"\">\n\n                                        <div className=\"\" key={`${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink}`}>\n\n                                            <p key={`${item.data.ups} ${subreddit[0].data.permalink}`} className=\"\">{item.data.ups}</p>\n\n                                            <p className=\"\" key={`${subreddit[0].data.permalink} ${subreddit[0].data.ups} ${subreddit[0].data.permalink}`}>\n                                                <svg className=\"upvotesvg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3em\" height=\"5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 16 16\"><g fill=\"currentColor\"><path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\" /></g></svg></p>\n                                        </div>\n\n                                        <div className=\"\" key={`${item.data.title} ${item.data.author}`}>\n                                            <h4 key={item.data.title}>{item.data.title}</h4>\n\n                                            {comment_isfetched && <section>{\n                                                subredditcontent_map[item.data.id] !== undefined &&\n\n                                                <section key={subredditcontent_map[item.data.id].subreddit_id}>\n\n                                                    <p className=\"\" key={subredditcontent_map[item.data.id].selftext}>{subredditcontent_map[item.data.id].selftext}</p>\n\n\n                                                    <div className=\"\" key={`${subredditcontent_map[item.data.id].subreddit_id}${subredditcontent_map[item.data.id].subreddit_id}${item.data.author}`}>\n                                                        <p key={item.data.author}>Submitted by : {item.data.author}</p>\n                                                        <button key={`${subredditcontent_map[item.data.id].num_comments} ${subredditcontent_map[item.data.id].subreddit_id}`} >{subredditcontent_map[item.data.id].num_comments} Comments </button>\n                                                    </div><hr />\n                                                </section>}\n\n                                            </section>}\n                                        </div>\n                                    </section>\n                                </a>\n                            </section>\n                        ))\n                    } </div>}\n            </main>\n\n        </article>\n    )\n}\n\nconst RedditNavigation = () => {\n\n    let foodsubreddit_arr = [];\n\n    const iterator1 = food_subredddits_set.entries();\n\n    for (const entry of iterator1) { foodsubreddit_arr.push(entry[0]); console.log(entry[0]) }\n\n    return (<section>\n        {\n            foodsubreddit_arr.map(item => (\n                <Link key={`${item}key`} to={`/reddit/${item}`} >\n                    <div key={`${item}1`}>\n                        <button key={item}>{item}</button>\n                    </div>\n                </Link>\n            ))\n        }\n    </section>)\n}\n\nexport default Subreddit",["53","54"],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksmain.js",["55","56","57"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/recipepage.js",["58"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/drinksrecipepage.js",["59"],[],"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/removefavorites_function.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":58,"column":22,"nodeType":"62","endLine":58,"endColumn":67},{"ruleId":"63","severity":1,"message":"64","line":59,"column":30,"nodeType":"65","messageId":"66","endLine":59,"endColumn":32},{"ruleId":"60","severity":1,"message":"67","line":65,"column":22,"nodeType":"62","endLine":65,"endColumn":68},{"ruleId":"63","severity":1,"message":"64","line":66,"column":28,"nodeType":"65","messageId":"66","endLine":66,"endColumn":30},{"ruleId":"60","severity":1,"message":"68","line":72,"column":22,"nodeType":"62","endLine":72,"endColumn":72},{"ruleId":"63","severity":1,"message":"64","line":73,"column":29,"nodeType":"65","messageId":"66","endLine":73,"endColumn":31},{"ruleId":"69","severity":1,"message":"70","line":14,"column":13,"nodeType":"71","messageId":"72","endLine":14,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":15,"column":15,"nodeType":"71","messageId":"72","endLine":15,"endColumn":19},{"ruleId":"60","severity":1,"message":"74","line":26,"column":39,"nodeType":"62","endLine":26,"endColumn":89},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"69","severity":1,"message":"79","line":12,"column":10,"nodeType":"71","messageId":"72","endLine":12,"endColumn":15},{"ruleId":"69","severity":1,"message":"80","line":12,"column":17,"nodeType":"71","messageId":"72","endLine":12,"endColumn":26},{"ruleId":"60","severity":1,"message":"81","line":56,"column":41,"nodeType":"82","endLine":56,"endColumn":52,"suggestions":"83"},{"ruleId":"60","severity":1,"message":"84","line":70,"column":59,"nodeType":"82","endLine":70,"endColumn":75,"suggestions":"85"},{"ruleId":"60","severity":1,"message":"84","line":64,"column":59,"nodeType":"82","endLine":64,"endColumn":76,"suggestions":"86"},"react-hooks/exhaustive-deps","Assignments to the 'foodfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'drinkfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'redditfavs_arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-unused-vars","'counter' is assigned a value but never used.","Identifier","unusedVar","'seta' is assigned a value but never used.","Assignments to the 'favoritereddits' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"'isnav' is assigned a value but never used.","'set_isnav' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFoods_list'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.",["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [getFoods_list, navChoice]",{"range":"98","text":"99"},"Update the dependencies array to be: [currentfood_id, getRecipe]",{"range":"100","text":"101"},"Update the dependencies array to be: [currentdrink_id, getRecipe]",{"range":"102","text":"103"},[2220,2231],"[getFoods_list, navChoice]",[2123,2139],"[currentfood_id, getRecipe]",[1982,1999],"[currentdrink_id, getRecipe]"]