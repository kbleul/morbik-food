{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subreddit = () => {\n  _s();\n\n  const [subreddit, set_subreddit] = useState([]);\n  const [subredditcontent_map, set_subredditcontent_map] = useState({});\n  const [comment_isfetched, set_comment_isfetched] = useState(false);\n  const {\n    slug\n  } = useParams();\n  useEffect(() => {\n    const fetchsubreddit = async () => {\n      try {\n        const result = await axios(`https://www.reddit.com/r/${slug}/.json`);\n        set_subreddit(result.data.data.children);\n      } catch (e) {\n        console.log(`Fetch r/${slug} failed. ${e}`);\n      }\n    };\n\n    fetchsubreddit();\n  }, [placeholder]);\n  useEffect(() => {\n    let tempobj = {};\n    let counter = 0;\n    subreddit.forEach(item => {\n      const fetchcomments = async () => {\n        //remove ? to allow reddit api call\n        if (item.data.title[item.data.title.length - 1] === \"?\") {\n          item.data.title = item.data.title.slice(0, -1);\n        }\n\n        try {\n          const result = await axios(` https://www.reddit.com/r/${item.data.subreddit}/comments/${item.data.id}/${item.data.title}/.json`);\n          tempobj[item.data.id] = result.data[0].data.children[0].data;\n          counter++;\n\n          if (counter === subreddit.length - 1) {\n            set_subredditcontent_map(tempobj);\n            set_comment_isfetched(true);\n          }\n        } catch (error) {\n          console.log(\"Error: Fetch reddit posts and comments failed.\\n-------------------\" + error + \"-------------------------\");\n          tempobj[item.data.id] = {};\n        }\n      };\n\n      fetchcomments();\n    });\n  }, [subreddit]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"\",\n    children: subreddit.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://www.reddit.com/r/${subreddit[0].data.subreddit}/`,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"subredditmain_title\",\n          children: subreddit[0].data.subreddit\n        }, subreddit[0].data.subreddit, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), subreddit.map(item => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://www.reddit.com/${item.data.permalink}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"\",\n                children: item.data.ups\n              }, `${item.data.ups} ${subreddit[0].data.permalink}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"upvotesvg\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"3em\",\n                  height: \"5em\",\n                  preserveAspectRatio: \"xMidYMid meet\",\n                  viewBox: \"0 0 16 16\",\n                  children: /*#__PURE__*/_jsxDEV(\"g\", {\n                    fill: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 199\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 176\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)\n              }, `${subreddit[0].data.permalink} ${subreddit[0].data.ups} ${subreddit[0].data.permalink}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)]\n            }, `${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: item.data.title\n              }, item.data.title, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), comment_isfetched && /*#__PURE__*/_jsxDEV(\"section\", {\n                children: subredditcontent_map[item.data.id] !== undefined && /*#__PURE__*/_jsxDEV(\"section\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"\",\n                    children: subredditcontent_map[item.data.id].selftext\n                  }, subredditcontent_map[item.data.id].selftext, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Submitted by : \", item.data.author]\n                    }, item.data.author, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      children: [subredditcontent_map[item.data.id].num_comments, \" Comments \"]\n                    }, `${subredditcontent_map[item.data.id].num_comments} ${subredditcontent_map[item.data.id].subreddit_id}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 41\n                    }, this)]\n                  }, `${subredditcontent_map[item.data.id].subreddit_id}${subredditcontent_map[item.data.id].subreddit_id}${item.data.author}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 43\n                  }, this)]\n                }, subredditcontent_map[item.data.id].subreddit_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 51\n              }, this)]\n            }, `${item.data.title} ${item.data.author}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, item.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Subreddit, \"wwX6etiUwtk1FBCfVVjVRdRJc2E=\", false, function () {\n  return [useParams];\n});\n\n_c = Subreddit;\nexport default Subreddit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subreddit\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subreddit.js"],"names":["React","useState","useEffect","useParams","axios","Subreddit","subreddit","set_subreddit","subredditcontent_map","set_subredditcontent_map","comment_isfetched","set_comment_isfetched","slug","fetchsubreddit","result","data","children","e","console","log","placeholder","tempobj","counter","forEach","item","fetchcomments","title","length","slice","id","error","map","permalink","ups","undefined","selftext","author","num_comments","subreddit_id"],"mappings":"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","sourcesContent":["import React, {useState , useEffect} from 'react'\nimport {useParams} from \"react-router-dom\"\nimport axios from 'axios'\n\n\nconst Subreddit = () => {\n\n    const [subreddit , set_subreddit] = useState([]);\n    const [subredditcontent_map, set_subredditcontent_map] = useState({});\n    const [comment_isfetched, set_comment_isfetched] = useState(false);\n    const {slug} = useParams();\n\n\n    useEffect(() => {\n        const fetchsubreddit = async () => {\n        try {    \n            const result = await axios(`https://www.reddit.com/r/${slug}/.json`);\n               set_subreddit(result.data.data.children);\n        \n    } catch (e) { console.log(`Fetch r/${slug} failed. ${e}`)  }\n        }\n\n        fetchsubreddit();\n    },[placeholder])\n\n    useEffect(() => {\n        let tempobj = {};\n        let counter = 0;\n\n        subreddit.forEach(item => {\n            const fetchcomments = async () => {\n\n                //remove ? to allow reddit api call\n                if (item.data.title[item.data.title.length - 1] === \"?\") { item.data.title = item.data.title.slice(0, -1); }\n\n                try {\n                    const result = await axios(` https://www.reddit.com/r/${item.data.subreddit}/comments/${item.data.id}/${item.data.title}/.json`);\n                    tempobj[item.data.id] = result.data[0].data.children[0].data;\n\n                    counter++;\n\n                    if (counter === subreddit.length - 1) {\n                        set_subredditcontent_map(tempobj)\n                        set_comment_isfetched(true);\n\n                    }\n                } catch (error) {\n                    console.log(\"Error: Fetch reddit posts and comments failed.\\n-------------------\" + error + \"-------------------------\");\n                    tempobj[item.data.id] = {}\n                }\n            }\n            fetchcomments();\n        });\n    }, [subreddit])\n    \n  return (\n    <article className=\"\">\n{ subreddit.length > 0 && <div>\n    <a href={`https://www.reddit.com/r/${subreddit[0].data.subreddit}/`} target=\"_blank\" rel=\"noreferrer\" >\n        <h2 className=\"subredditmain_title\" key={subreddit[0].data.subreddit}>{subreddit[0].data.subreddit}</h2></a>\n    {\n        subreddit.map(item => (\n            <section className=\"\" key={item.data.id}>\n                <a href={`https://www.reddit.com/${item.data.permalink}`} target=\"_blank\" rel=\"noreferrer\" >\n\n                    <section className=\"\">\n\n                        <div className=\"\" key={`${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink} ${subreddit[0].data.permalink}`}>\n\n                            <p key={`${item.data.ups} ${subreddit[0].data.permalink}`} className=\"\">{item.data.ups}</p>\n\n                            <p className=\"\" key={`${subreddit[0].data.permalink} ${subreddit[0].data.ups} ${subreddit[0].data.permalink}`}>\n                                <svg className=\"upvotesvg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3em\" height=\"5em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 16 16\"><g fill=\"currentColor\"><path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\" /></g></svg></p>\n                        </div>\n\n                        <div className=\"\" key={`${item.data.title} ${item.data.author}`}>\n                            <h4 key={item.data.title}>{item.data.title}</h4>\n\n                            {comment_isfetched && <section>{\n                                subredditcontent_map[item.data.id] !== undefined &&\n\n                                <section key={subredditcontent_map[item.data.id].subreddit_id}>\n\n                                    <p className=\"\" key={subredditcontent_map[item.data.id].selftext}>{subredditcontent_map[item.data.id].selftext}</p>\n\n\n                                    <div className=\"\" key={`${subredditcontent_map[item.data.id].subreddit_id}${subredditcontent_map[item.data.id].subreddit_id}${item.data.author}`}>\n                                        <p key={item.data.author}>Submitted by : {item.data.author}</p>\n                                        <button key={`${subredditcontent_map[item.data.id].num_comments} ${subredditcontent_map[item.data.id].subreddit_id}`} >{subredditcontent_map[item.data.id].num_comments} Comments </button>\n                                    </div><hr/>\n                                </section>}\n\n                            </section>}\n                        </div>\n                    </section>\n                </a>\n            </section>\n        ))\n    } </div> }\n</article>\n  )\n}\n\nexport default Subreddit"]},"metadata":{},"sourceType":"module"}