{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  const [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n  const [showrecipe_page, set_showrecipe_page] = useState(false);\n  const [recipefor, set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n      set_catagories(result.data.meals);\n    } catch (e) {\n      console.log(\"Fetch catagory failed ! \" + e);\n    }\n  };\n\n  const getFoods_list = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${currentcatagory}`);\n      set_frontfood_list(result.data.meals);\n    } catch (e) {\n      console.log(`Fetch ${currentcatagory} based foods failed !  ` + e);\n    }\n  };\n\n  useEffect(() => {\n    getCatagories();\n  }, []);\n  useEffect(() => {\n    getFoods_list();\n  }, [currentcatagory]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: catagories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => set_currentcatagory(item.strCategory),\n        children: item.strCategory\n      }, item.strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this), showrecipe_page ? /*#__PURE__*/_jsxDEV(RecipePage, {\n      foodid: recipefor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid grid-cols-3 gap-2\",\n      children: frontfood_list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          set_recipefor(item.idMeal);\n          set_showrecipe_page(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.strMealThumb,\n          alt: item.strMeal\n        }, item.strMealThumb, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.strMeal\n        }, item.strMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }, this)]\n      }, item.idMeal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"8NAKZZSUnBr1WDv6DAo46c+hQGA=\");\n\n_c = Main;\n\nconst RecipePage = _ref => {\n  _s2();\n\n  let {\n    foodid\n  } = _ref;\n  const [recipedata, set_recipedata] = useState([]);\n\n  const getRecipe = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${foodid}`);\n      set_recipedata(result.data.meals);\n      recipedata.map(item => {\n        item.strInstructions = item.strInstructions.split(\".\");\n        console.log(item.str);\n      });\n    } catch (e) {\n      console.log(`Fetch recipe for ${foodid} failed !  ` + e);\n    }\n  };\n\n  useEffect(() => {\n    getRecipe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: recipedata.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item.strMeal\n      }, item.strMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.strMealThumb,\n        alt: item.strMeal\n      }, item.strMealThumb, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.strInstructions\n      }, `${item.strMeal} ${item.idMeal}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, `${item.strMeal} ${item.idMeal}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 11\n  }, this);\n};\n\n_s2(RecipePage, \"MxJ9S5Iv48vTsyVrm35zCHkRSdY=\");\n\n_c2 = RecipePage;\nexport default Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"RecipePage\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js"],"names":["React","useState","useEffect","axios","Main","catagories","set_catagories","frontfood_list","set_frontfood_list","currentcatagory","set_currentcatagory","showrecipe_page","set_showrecipe_page","recipefor","set_recipefor","getCatagories","result","data","meals","e","console","log","getFoods_list","map","item","strCategory","idMeal","strMealThumb","strMeal","RecipePage","foodid","recipedata","set_recipedata","getRecipe","strInstructions","split","str"],"mappings":"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","sourcesContent":["import React , {useState , useEffect} from 'react'\nimport axios from 'axios'\n\nconst Main = () => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  const [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n  const [showrecipe_page , set_showrecipe_page] = useState(false);\n  const [recipefor , set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n     try {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n    set_catagories(result.data.meals)\n\n     }catch(e) { console.log(\"Fetch catagory failed ! \" + e)}\n  }\n\n  const getFoods_list = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${currentcatagory}`)\n      set_frontfood_list(result.data.meals)\n\n        \n    }catch(e) { console.log(`Fetch ${currentcatagory} based foods failed !  ` + e)}\n\n  }\n\n\n  useEffect(() => {  getCatagories();  },[])\n\n  useEffect(() => { getFoods_list(); },[currentcatagory])\n\n  return (\n    <article>\n       <section>\n        {\n          catagories.map(item => (\n            <button key={item.strCategory} onClick={() => set_currentcatagory(item.strCategory) }>{item.strCategory}</button>\n          ))\n        }\n        </section>\n\n  { showrecipe_page ? <RecipePage foodid={recipefor}/> :\n     <section className=\"grid grid-cols-3 gap-2\">\n         {\n           frontfood_list.map(item => (\n             <div key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_showrecipe_page(true);}}>\n             <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n             <p key={item.strMeal}>{item.strMeal}</p>\n\n             </div>\n           ))\n         }\n        </section>}\n    </article>\n  )\n}\n\nconst RecipePage = ({foodid}) => {\n\n  const [recipedata, set_recipedata] = useState([]);\n\n  const getRecipe = async () => {\n \n\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${foodid}`)\n      set_recipedata(result.data.meals)\n\n      recipedata.map(item => {  item.strInstructions = item.strInstructions.split(\".\"); console.log(item.str) })\n\n         \n    \n    }catch(e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e)}\n  }\n\n  useEffect(() => {  getRecipe()  },[])\n\n  return (<section>\n    {\n      recipedata.map(item => (\n        <div key={`${item.strMeal} ${item.idMeal}`}>\n          <h4 key={item.strMeal}>{item.strMeal}</h4>\n          <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n          <p key={`${item.strMeal} ${item.idMeal}`}>{item.strInstructions}</p>\n        </div>\n      ))\n    }\n    </section>)\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}