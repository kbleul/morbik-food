{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport loading from './imgs/loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = _ref => {\n  _s();\n\n  let {\n    setnavChoice,\n    set_choicetype,\n    set_togglerecipe_page\n  } = _ref;\n  const [area_choiceresults, setarea_choiceresults] = useState([]);\n  const [ingredient_choiceresults, setingredient_choiceresults] = useState([]);\n  const [showarea_choiceresults, set_showarea_choiceresults] = useState(false);\n  const [showingredient_choiceresults, set_showingredient_choiceresults] = useState(false);\n  const [showareas, set_showareas] = useState(true);\n  const [showingredients, set_showingredients] = useState(false);\n\n  const getCatagories = async () => {\n    try {\n      const result_area = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?a=list`);\n      setarea_choiceresults(result_area.data.meals);\n      set_showarea_choiceresults(true);\n      const result_ingredient = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?i=list`);\n      setingredient_choiceresults(result_ingredient.data.meals);\n      set_showingredient_choiceresults(true);\n    } catch (e) {\n      console.log(`Fetch available areas list failed ${e} `);\n    }\n  };\n\n  useEffect(() => {\n    getCatagories();\n  }, []); //splits the single string and addes underscore between them for api call\n  //Eg Apple Cidar => Apple_Cidar\n\n  const appendUnderscore = ingredient => {\n    let temp_ingredientarr = ingredient.split(\" \");\n    let newingredient_str = \"\";\n    temp_ingredientarr.forEach(item => {\n      if (temp_ingredientarr.indexOf(item) !== 0) {\n        newingredient_str += `_${item}`;\n      } else {\n        newingredient_str += item;\n      }\n    });\n    setnavChoice(newingredient_str);\n  };\n\n  const showChoices = type => {\n    if (type === \"area\") {\n      if (showareas) {\n        set_showareas(false);\n      } else set_showareas(true);\n    } else {\n      if (showingredients) {\n        set_showingredients(false);\n      } else set_showingredients(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"fixed left-0 w-1/4 h-screen overflow-y-scroll overscroll-y-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row items-center justify-between \",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-black text-lg pl-12 mt-10 mb-3\",\n          children: \"Areas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-b text-lg  mt-10 mb-3 mr-8\",\n          onClick: () => showChoices(\"area\"),\n          children: showareas ? \"↑\" : \"↓\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), !showarea_choiceresults ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loading,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showareas ? \"flex flex-col items-center\" : \"hidden\",\n        children: area_choiceresults.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-b px-2 py-3 w-3/4\",\n          onClick: () => {\n            set_togglerecipe_page(false);\n            setnavChoice(item.strArea);\n            set_choicetype(\"a\");\n          },\n          children: item.strArea\n        }, item.strArea, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-black text-lg pl-12 mt-10 mb-3\",\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border-b text-lg  mt-10 mb-3 mr-8\",\n        onClick: () => showChoices(\"ingr\"),\n        children: showingredients ? \"↑\" : \"↓\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this), !showingredient_choiceresults ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loading,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showingredients ? \"grid grid-cols-2\" : \"hidden\",\n        children: ingredient_choiceresults.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-b px-2 py-4 w-4/4 ml-2\",\n          onClick: () => {\n            set_togglerecipe_page(false);\n            appendUnderscore(item.strIngredient);\n            set_choicetype(\"i\");\n          },\n          children: item.strIngredient\n        }, item.strIngredient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigation, \"5ELlQeI+gH53WC/1gMzte1/h9go=\");\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/nav.js"],"names":["React","useState","useEffect","axios","loading","Navigation","setnavChoice","set_choicetype","set_togglerecipe_page","area_choiceresults","setarea_choiceresults","ingredient_choiceresults","setingredient_choiceresults","showarea_choiceresults","set_showarea_choiceresults","showingredient_choiceresults","set_showingredient_choiceresults","showareas","set_showareas","showingredients","set_showingredients","getCatagories","result_area","data","meals","result_ingredient","e","console","log","appendUnderscore","ingredient","temp_ingredientarr","split","newingredient_str","forEach","item","indexOf","showChoices","type","map","strArea","strIngredient"],"mappings":"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","sourcesContent":["import React, {useState , useEffect} from 'react'\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\n\nconst Navigation = ({setnavChoice , set_choicetype , set_togglerecipe_page}) => {\n\n    const [area_choiceresults, setarea_choiceresults] = useState([]);\n    const [ingredient_choiceresults, setingredient_choiceresults] = useState([]);\n    const [showarea_choiceresults, set_showarea_choiceresults] = useState(false);\n    const [showingredient_choiceresults, set_showingredient_choiceresults] = useState(false);\n\n    const [showareas, set_showareas] = useState(true);\n    const [showingredients, set_showingredients]= useState(false);\n\n\n    const getCatagories = async() => {\n        try {\n            const result_area = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?a=list`);\n              setarea_choiceresults(result_area.data.meals);\n              set_showarea_choiceresults(true);\n\n            const result_ingredient = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?i=list`);        \n              setingredient_choiceresults(result_ingredient.data.meals);\n              set_showingredient_choiceresults(true);\n\n          }catch(e) { \n              console.log(`Fetch available areas list failed ${e} `)\n                   }\n  } \n  useEffect(() => { getCatagories(); },[])  \n    \n\n  //splits the single string and addes underscore between them for api call\n  //Eg Apple Cidar => Apple_Cidar\n const appendUnderscore = (ingredient) => {\n     let temp_ingredientarr = ingredient.split(\" \");\n    let newingredient_str = \"\";\n    temp_ingredientarr.forEach(item => {\n            if(temp_ingredientarr.indexOf(item) !== 0)  { newingredient_str += `_${item}`}\n            else { newingredient_str += item }\n        })\n\n        setnavChoice(newingredient_str); \n }\n\n const showChoices = (type) => {\n   if(type === \"area\") {\n   if(showareas) { set_showareas(false); }\n   else set_showareas(true)\n   }\n   else {\n    if(showingredients) { set_showingredients(false); }\n    else set_showingredients(true)\n    }\n   }\n \n\n  return (\n    <section className=\"fixed left-0 w-1/4 h-screen overflow-y-scroll overscroll-y-auto\">\n        <div>\n          <div className=\"flex flex-row items-center justify-between \">\n            <h2 className=\"font-black text-lg pl-12 mt-10 mb-3\">Areas</h2>\n            <button className=\"border-b text-lg  mt-10 mb-3 mr-8\"  onClick={() => showChoices(\"area\")}>{showareas ? \"↑\" : \"↓\"}</button>\n            </div>\n            {!showarea_choiceresults ? <img src={loading} alt=\"loading\" />  :\n             <div className={showareas ? \"flex flex-col items-center\" : \"hidden\"}>\n                {area_choiceresults.map(item => (\n                    <button className=\"border-b px-2 py-3 w-3/4\" onClick={() =>{ set_togglerecipe_page(false); setnavChoice(item.strArea); set_choicetype(\"a\")}} \n                    key={item.strArea}>{item.strArea}</button>\n                ))}\n            </div>}\n            \n            <h2 className=\"font-black text-lg pl-12 mt-10 mb-3\">Ingredients</h2>\n             <button className=\"border-b text-lg  mt-10 mb-3 mr-8\"  onClick={() => showChoices(\"ingr\")}>{showingredients ? \"↑\" : \"↓\"}</button>\n            {!showingredient_choiceresults ? <img src={loading} alt=\"loading\" />  :\n            <div  className={showingredients ? \"grid grid-cols-2\" : \"hidden\"}>\n               {ingredient_choiceresults.map(item => (\n                   <button className=\"border-b px-2 py-4 w-4/4 ml-2\" onClick={() =>{ set_togglerecipe_page(false); appendUnderscore(item.strIngredient); set_choicetype(\"i\")}} \n                   key={item.strIngredient}>{item.strIngredient}</button>\n               ))}\n           </div>}\n        </div>\n      \n    </section>\n  )\n}\n\nexport default Navigation"]},"metadata":{},"sourceType":"module"}