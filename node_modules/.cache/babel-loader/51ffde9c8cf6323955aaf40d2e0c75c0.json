{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport list from \"./food_subredditlist\";\nimport list_drink from \"./drinks_subredditlist\";\nimport axios from 'axios';\nimport loading from './imgs/loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubredditListPage = () => {\n  _s();\n\n  const [reddit, setreddit] = useState([]);\n  const [isfood, set_isfood] = useState(true);\n  useEffect(() => {\n    let temparr = [];\n    let counter = 0;\n\n    const fetchsubreddit = async item => {\n      try {\n        const result = await axios(`https://www.reddit.com/r/${item}/.json`);\n        temparr.push(result.data.data.children[0].data);\n\n        if (isfood) {\n          if (temparr.length === 42) {\n            setreddit(temparr);\n            temparr = [];\n          }\n        } else {\n          if (temparr.length === 19) {\n            setreddit(temparr);\n            temparr = [];\n          }\n        }\n\n        counter++;\n      } catch (e) {\n        console.log(\"Fetch \" + item + \" failed.\" + e);\n      }\n    };\n\n    for (let item of isfood ? list : list_drink) {\n      fetchsubreddit(item);\n    }\n  }, [isfood]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmb-\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: isfood ? \"font-black underline\" : \"font-light hover:bg-amber-200 px-4\",\n        onClick: () => {\n          setreddit([]);\n          set_isfood(true);\n        },\n        children: \"Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: isfood ? \"ml-8 font-light hover:bg-amber-200 px-4\" : \"font-black underline\",\n        onClick: () => {\n          setreddit([]);\n          set_isfood(false);\n        },\n        children: \"Drinks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: isfood ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: reddit.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center border-2 border-black-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: loading,\n            alt: \"loading\",\n            className: \"loadingimg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 99\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-3\",\n          children: reddit.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/reddit/${item.subreddit}`,\n              children: /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.subreddit\n                }, item.subreddit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"\",\n                  children: item.subreddit_name_prefixed\n                }, item.subreddit_name_prefixed, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.subreddit_type\n                }, item.subreddit_type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"\",\n                  children: [\"Subscribers - \", item.subreddit_subscribers]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, this)]\n              }, item.permalink, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)\n            }, `${item.subreddit_name_prefixed}${item.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)\n          }, `${item.subreddit_name_prefixed}${item.id}${item.permalink}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: reddit.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex item-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: loading,\n            alt: \"loading\",\n            className: \"loadingimg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 70\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-3\",\n          children: reddit.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/reddit/${item.subreddit}`,\n              children: /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.subreddit\n                }, item.subreddit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"\",\n                  children: item.subreddit_name_prefixed\n                }, item.subreddit_name_prefixed, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.subreddit_type\n                }, item.subreddit_type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"\",\n                  children: [\"Subscribers - \", item.subreddit_subscribers]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this)]\n              }, item.permalink, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, `${item.subreddit_name_prefixed}${item.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, `${item.subreddit_name_prefixed}${item.id}${item.permalink}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SubredditListPage, \"4nvzjz0AL+2vqxoiVsCeY+QgrXk=\");\n\n_c = SubredditListPage;\nexport default SubredditListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubredditListPage\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/subredditlistpage.js"],"names":["useState","useEffect","Link","list","list_drink","axios","loading","SubredditListPage","reddit","setreddit","isfood","set_isfood","temparr","counter","fetchsubreddit","item","result","push","data","children","length","e","console","log","map","subreddit","subreddit_name_prefixed","subreddit_type","subreddit_subscribers","id","permalink"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport list from \"./food_subredditlist\"\nimport list_drink from \"./drinks_subredditlist\"\nimport axios from 'axios'\nimport loading from './imgs/loading.gif'\n\nconst SubredditListPage = () => {\n\n    const [reddit, setreddit] = useState([]);\n    const [isfood, set_isfood] = useState(true);\n\n    useEffect(() => {\n\n        let temparr = [];\n        let counter = 0;\n\n        const fetchsubreddit = async (item) => {\n            try {\n                const result = await axios(`https://www.reddit.com/r/${item}/.json`);\n\n                temparr.push(result.data.data.children[0].data);\n\n         if(isfood) {\n                if (temparr.length === 42) { setreddit(temparr); temparr = []; }\n         } else { if (temparr.length === 19) { setreddit(temparr); temparr = []; }}\n\n                counter++;\n\n            } catch (e) { console.log(\"Fetch \" + item + \" failed.\" + e) }\n \n    }\n    for (let item of isfood ? list : list_drink) { fetchsubreddit(item);  }\n\n    }, [isfood])\n\n\n    return (<div className=\"mt-12\">\n        <div className=\"flex justify-center mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmb-\">\n            <button className={isfood ? \"font-black underline\" : \"font-light hover:bg-amber-200 px-4\"} onClick={() => {setreddit([]); set_isfood(true)}}>Foods</button>\n            <button className={isfood ? \"ml-8 font-light hover:bg-amber-200 px-4\" : \"font-black underline\" } onClick={() =>{setreddit([]); set_isfood(false)}}>Drinks</button>\n        </div>\n        <section>{ isfood ? <div>\n            {reddit.length === 0 ? <div className=\"flex justify-center border-2 border-black-400\"><img src={loading} alt=\"loading\" className=\"loadingimg\" /> </div> :\n                <div className=\"grid grid-cols-5 gap-3\">\n                    {reddit.map(item => (<div key={`${item.subreddit_name_prefixed}${item.id}${item.permalink}`}>\n                        <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n                            <section key={item.permalink} className=\"\">\n                                <p key={item.subreddit}>{item.subreddit}</p>\n                                <p key={item.subreddit_name_prefixed} className=\"\">{item.subreddit_name_prefixed}</p>\n                                <p key={item.subreddit_type}>{item.subreddit_type}</p>\n                                <p key={item.id} className=\"\">Subscribers - {item.subreddit_subscribers}</p>\n\n                            </section>\n                        </Link>\n                    </div>\n                    ))\n                    }\n                </div>\n            }</div> :\n            <div>\n            {reddit.length === 0 ? <div className=\"flex item-center\"><img src={loading} alt=\"loading\" className=\"loadingimg\" /> </div> :\n                <div className=\"grid grid-cols-5 gap-3\">\n                    {reddit.map(item => (<div key={`${item.subreddit_name_prefixed}${item.id}${item.permalink}`}>\n                        <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\n                            <section key={item.permalink} className=\"\">\n                                <p key={item.subreddit}>{item.subreddit}</p>\n                                <p key={item.subreddit_name_prefixed} className=\"\">{item.subreddit_name_prefixed}</p>\n                                <p key={item.subreddit_type}>{item.subreddit_type}</p>\n                                <p key={item.id} className=\"\">Subscribers - {item.subreddit_subscribers}</p>\n\n                            </section>\n                        </Link>\n                    </div>\n                    ))\n                    }\n                </div>\n            }</div>\n        }\n        </section>\n    </div>)\n\n};\n\n\n\nexport default SubredditListPage"]},"metadata":{},"sourceType":"module"}