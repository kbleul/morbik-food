{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RecipePage from './recipepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = _ref => {\n  _s();\n\n  let {\n    nav_selectedCatagory,\n    choicetype\n  } = _ref;\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]); // [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n\n  const [showrecipe_page, set_showrecipe_page] = useState(false);\n  const [recipefor, set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n      set_catagories(result.data.meals);\n    } catch (e) {\n      console.log(\"Fetch catagory failed ! \" + e);\n    }\n  };\n\n  const getFoods_list = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${nav_selectedCatagory}`);\n      set_frontfood_list(result.data.meals);\n    } catch (e) {\n      console.log(`Fetch ${nav_selectedCatagory} based foods failed !  ` + e);\n    }\n  };\n\n  useEffect(() => {\n    getCatagories();\n  }, []);\n  useEffect(() => {\n    getFoods_list();\n  }, [currentcatagory]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: catagories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          set_currentcatagory(item.strCategory);\n          set_showrecipe_page(false);\n        },\n        children: item.strCategory\n      }, item.strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), showrecipe_page ? /*#__PURE__*/_jsxDEV(RecipePage, {\n      foodid: recipefor,\n      similarfoods: frontfood_list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid grid-cols-3 gap-2\",\n      children: frontfood_list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          set_recipefor(item.idMeal);\n          set_showrecipe_page(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.strMealThumb,\n          alt: item.strMeal\n        }, item.strMealThumb, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.strMeal\n        }, item.strMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this)]\n      }, item.idMeal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"XHiKkrGQBUtry8UAVWOJ60xOywU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js"],"names":["React","useState","useEffect","axios","RecipePage","Main","nav_selectedCatagory","choicetype","catagories","set_catagories","frontfood_list","set_frontfood_list","showrecipe_page","set_showrecipe_page","recipefor","set_recipefor","getCatagories","result","data","meals","e","console","log","getFoods_list","currentcatagory","map","item","set_currentcatagory","strCategory","idMeal","strMealThumb","strMeal"],"mappings":"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","sourcesContent":["import React , {useState , useEffect} from 'react'\nimport axios from 'axios'\nimport RecipePage from './recipepage'\n\nconst Main = ({nav_selectedCatagory, choicetype}) => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n // [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n  const [showrecipe_page , set_showrecipe_page] = useState(false);\n  const [recipefor , set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n     try {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n    set_catagories(result.data.meals)\n\n     }catch(e) { console.log(\"Fetch catagory failed ! \" + e)}\n  }\n\n  const getFoods_list = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${nav_selectedCatagory}`)\n      set_frontfood_list(result.data.meals)\n\n        \n    }catch(e) { console.log(`Fetch ${nav_selectedCatagory} based foods failed !  ` + e)}\n\n  }\n\n\n  useEffect(() => {  getCatagories();  },[])\n\n  useEffect(() => { getFoods_list(); },[currentcatagory ])\n\n  return (\n    <article>\n       <section>\n        {\n          catagories.map(item => (\n            <button key={item.strCategory} onClick={() =>{ set_currentcatagory(item.strCategory); set_showrecipe_page(false); }}>{item.strCategory}</button>\n          ))\n        }\n        </section>\n\n  { showrecipe_page ? <RecipePage foodid={recipefor} similarfoods= {frontfood_list} /> :\n     <section className=\"grid grid-cols-3 gap-2\">\n         {\n           frontfood_list.map(item => (\n             <div key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_showrecipe_page(true);}}>\n             <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n             <p key={item.strMeal}>{item.strMeal}</p>\n\n             </div>\n           ))\n         }\n        </section>}\n    </article>\n  )\n}\n\n\nexport default Main\n\n"]},"metadata":{},"sourceType":"module"}