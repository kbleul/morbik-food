{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RecipePage from './recipepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = _ref => {\n  _s();\n\n  let {\n    navChoice,\n    setChoice,\n    choicetype,\n    set_choicetype,\n    togglerecipe_page,\n    set_togglerecipe_page\n  } = _ref;\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]); // [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n\n  const [recipefor, set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n      set_catagories(result.data.meals);\n    } catch (e) {\n      console.log(\"Fetch catagory failed ! \" + e);\n    }\n  };\n\n  const getFoods_list = async () => {\n    try {\n      if (choicetype === \"c\") {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${navChoice}`);\n\n        if (result.data.meals == null) {\n          set_frontfood_list([\"No Food Found Error\"]);\n        } else {\n          set_frontfood_list(result.data.meals);\n        }\n      } else if (choicetype === \"a\") {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${navChoice}`);\n\n        if (result.data.meals == null) {\n          set_frontfood_list([{\n            \"idMeal\": \"No Food Found Error\"\n          }]);\n        } else {\n          set_frontfood_list(result.data.meals);\n        }\n      } else {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${navChoice}`);\n\n        if (result.data.meals == null) {\n          set_frontfood_list([\"No Food Found Error\"]);\n        } else {\n          set_frontfood_list(result.data.meals);\n        }\n      }\n    } catch (e) {\n      console.log(`Fetch ${navChoice} based foods failed !  ` + e);\n    }\n  };\n\n  useEffect(() => {\n    getCatagories();\n  }, []);\n  useEffect(() => {\n    getFoods_list();\n  }, [navChoice]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"ml-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: catagories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-xs font-black bg-amber-400 border-2 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 active:bg-violet-700\",\n        onClick: () => {\n          set_choicetype(\"c\");\n          setChoice(item.strCategory);\n          set_togglerecipe_page(false);\n        },\n        children: item.strCategory\n      }, item.strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this), togglerecipe_page ? /*#__PURE__*/_jsxDEV(RecipePage, {\n      foodid: recipefor,\n      similarfoods: frontfood_list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid grid-cols-3 gap-2\",\n      children: frontfood_list[0] === \"No Food Found Error\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No available food for this ingrident.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 58\n      }, this) : frontfood_list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          set_recipefor(item.idMeal);\n          set_togglerecipe_page(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.strMealThumb,\n          alt: item.strMeal\n        }, item.strMealThumb, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.strMeal\n        }, item.strMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this)]\n      }, item.idMeal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"vb0XC0FikphaJKwKCI3EXad1BqU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js"],"names":["React","useState","useEffect","axios","RecipePage","Main","navChoice","setChoice","choicetype","set_choicetype","togglerecipe_page","set_togglerecipe_page","catagories","set_catagories","frontfood_list","set_frontfood_list","recipefor","set_recipefor","getCatagories","result","data","meals","e","console","log","getFoods_list","map","item","strCategory","idMeal","strMealThumb","strMeal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,IAAI,GAAG,QAAkG;AAAA;;AAAA,MAAjG;AAACC,IAAAA,SAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,UAAtB;AAAmCC,IAAAA,cAAnC;AAAmDC,IAAAA,iBAAnD;AAAsEC,IAAAA;AAAtE,GAAiG;AAC7G,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACa,cAAD,EAAiBC,kBAAjB,IAAuCd,QAAQ,CAAC,EAAD,CAArD,CAF6G,CAG9G;;AAEC,QAAM,CAACe,SAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMiB,aAAa,GAAG,YAAY;AAC/B,QAAI;AACL,YAAMC,MAAM,GAAG,MAAMhB,KAAK,CAAE,yDAAF,CAA1B;AACAU,MAAAA,cAAc,CAACM,MAAM,CAACC,IAAP,CAAYC,KAAb,CAAd;AAEE,KAJD,CAIC,OAAMC,CAAN,EAAS;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BF,CAAzC;AAA4C;AAC1D,GAND;;AAQA,QAAMG,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,UAAGjB,UAAU,KAAK,GAAlB,EAAsB;AACtB,cAAMW,MAAM,GAAG,MAAMhB,KAAK,CAAE,wDAAuDG,SAAU,EAAnE,CAA1B;;AACE,YAAIa,MAAM,CAACC,IAAP,CAAYC,KAAZ,IAAoB,IAAxB,EAAgC;AAAGN,UAAAA,kBAAkB,CAAC,CAAC,qBAAD,CAAD,CAAlB;AAA4C,SAA/E,MACI;AAAEA,UAAAA,kBAAkB,CAACI,MAAM,CAACC,IAAP,CAAYC,KAAb,CAAlB;AAAsC;AAE7C,OALD,MAMK,IAAGb,UAAU,KAAK,GAAlB,EAAuB;AAC5B,cAAMW,MAAM,GAAG,MAAMhB,KAAK,CAAE,wDAAuDG,SAAU,EAAnE,CAA1B;;AACA,YAAIa,MAAM,CAACC,IAAP,CAAYC,KAAZ,IAAqB,IAAzB,EAAiC;AAAEN,UAAAA,kBAAkB,CAAC,CAAC;AAAC,sBAAW;AAAZ,WAAD,CAAD,CAAlB;AAA0D,SAA7F,MACK;AAAEA,UAAAA,kBAAkB,CAACI,MAAM,CAACC,IAAP,CAAYC,KAAb,CAAlB;AAAsC;AAE5C,OALI,MAMA;AACL,cAAMF,MAAM,GAAG,MAAMhB,KAAK,CAAE,wDAAuDG,SAAU,EAAnE,CAA1B;;AACA,YAAIa,MAAM,CAACC,IAAP,CAAYC,KAAZ,IAAqB,IAAzB,EAAiC;AAAGN,UAAAA,kBAAkB,CAAC,CAAC,qBAAD,CAAD,CAAlB;AAA6C,SAAjF,MACK;AAAEA,UAAAA,kBAAkB,CAACI,MAAM,CAACC,IAAP,CAAYC,KAAb,CAAlB;AAAuC;AAE7C;AAEF,KApBD,CAoBC,OAAMC,CAAN,EAAS;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAQlB,SAAU,yBAAnB,GAA8CgB,CAA1D;AAA6D;AAE1E,GAvBD;;AA0BApB,EAAAA,SAAS,CAAC,MAAM;AAAGgB,IAAAA,aAAa;AAAM,GAA7B,EAA8B,EAA9B,CAAT;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AAAEuB,IAAAA,aAAa;AAAK,GAA3B,EAA4B,CAACnB,SAAD,CAA5B,CAAT;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACG;AAAA,gBAEGM,UAAU,CAACc,GAAX,CAAeC,IAAI,iBACjB;AAAS,QAAA,SAAS,EAAC,oHAAnB;AAA+J,QAAA,OAAO,EAAE,MAAK;AAAElB,UAAAA,cAAc,CAAC,GAAD,CAAd;AAAqBF,UAAAA,SAAS,CAACoB,IAAI,CAACC,WAAN,CAAT;AAA6BjB,UAAAA,qBAAqB,CAAC,KAAD,CAArB;AAA+B,SAAhQ;AAAA,kBAAmQgB,IAAI,CAACC;AAAxQ,SAA6ID,IAAI,CAACC,WAAlJ;AAAA;AAAA;AAAA;AAAA,cADF;AAFH;AAAA;AAAA;AAAA;AAAA,YADH,EASAlB,iBAAiB,gBAAG,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEM,SAApB;AAA+B,MAAA,YAAY,EAAGF;AAA9C;AAAA;AAAA;AAAA;AAAA,YAAH,gBAChB;AAAS,MAAA,SAAS,EAAC,wBAAnB;AAAA,gBACMA,cAAc,CAAC,CAAD,CAAd,KAAsB,qBAAtB,gBAA8C;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAA9C,GACAA,cAAc,CAACY,GAAf,CAAmBC,IAAI,iBACrB;AAAuB,QAAA,OAAO,EAAE,MAAM;AAAEV,UAAAA,aAAa,CAACU,IAAI,CAACE,MAAN,CAAb;AAA4BlB,UAAAA,qBAAqB,CAAC,IAAD,CAArB;AAA6B,SAAjG;AAAA,gCACA;AAA6B,UAAA,GAAG,EAAEgB,IAAI,CAACG,YAAvC;AAAqD,UAAA,GAAG,EAAEH,IAAI,CAACI;AAA/D,WAAUJ,IAAI,CAACG,YAAf;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAuBH,IAAI,CAACI;AAA5B,WAAQJ,IAAI,CAACI,OAAb;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,SAAUJ,IAAI,CAACE,MAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAFN;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CArED;;GAAMxB,I;;KAAAA,I;AAwEN,eAAeA,IAAf","sourcesContent":["import React , {useState , useEffect} from 'react'\nimport axios from 'axios'\nimport RecipePage from './recipepage'\n\nconst Main = ({navChoice,setChoice, choicetype , set_choicetype, togglerecipe_page, set_togglerecipe_page}) => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n // [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n  \n  const [recipefor , set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n     try {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n    set_catagories(result.data.meals)\n\n     }catch(e) { console.log(\"Fetch catagory failed ! \" + e)}\n  }\n\n  const getFoods_list = async () => {\n    try {\n      if(choicetype === \"c\"){\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${navChoice}`)\n        if( result.data.meals== null  ) {  set_frontfood_list([\"No Food Found Error\"])}\n       else { set_frontfood_list(result.data.meals)}\n\n      }\n      else if(choicetype === \"a\") {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${navChoice}`)\n      if( result.data.meals == null  ) { set_frontfood_list([{\"idMeal\" : \"No Food Found Error\"}]) }\n      else { set_frontfood_list(result.data.meals)}\n\n      }\n      else { \n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${navChoice}`)\n      if( result.data.meals == null  ) {  set_frontfood_list([\"No Food Found Error\"]) }\n      else { set_frontfood_list(result.data.meals) }\n\n      }\n        \n    }catch(e) { console.log(`Fetch ${navChoice} based foods failed !  ` + e)}\n\n  }\n\n\n  useEffect(() => {  getCatagories();  },[])\n\n  useEffect(() => { getFoods_list(); },[navChoice ])\n\n  return (\n    <article className=\"ml-4\">\n       <section>\n        {\n          catagories.map(item => (\n            <button  className=\"text-xs font-black bg-amber-400 border-2 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 active:bg-violet-700\" key={item.strCategory} onClick={() =>{ set_choicetype(\"c\"); setChoice(item.strCategory); set_togglerecipe_page(false); }}>{item.strCategory}</button>\n          ))\n        }\n        </section>\n\n  { togglerecipe_page ? <RecipePage foodid={recipefor} similarfoods= {frontfood_list} /> :\n     <section className=\"grid grid-cols-3 gap-2\">\n         { frontfood_list[0] === \"No Food Found Error\" ? <div><p>No available food for this ingrident.</p></div> :\n           frontfood_list.map(item => (\n             <div key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_togglerecipe_page(true);}}>\n             <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n             <p key={item.strMeal}>{item.strMeal}</p>\n\n             </div>\n           ))\n         }\n        </section>}\n    </article>\n  )\n}\n\n\nexport default Main\n\n"]},"metadata":{},"sourceType":"module"}