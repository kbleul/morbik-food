{"ast":null,"code":"import _slicedToArray from\"C:/Users/Bisrat/Documents/code/morbik-food/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,createContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var getInitialTheme=function getInitialTheme(){if(typeof window!=='undefined'&&window.localStorage){var storedprefs=window.localStorage.getItem(\"color-theme\");if(typeof storedprefs===\"string\"){return storedprefs;}var userMedia=window.matchMedia('(prefers-color-scheme:dark)');if(userMedia.matches){return'dark';}}return'light';};export var ThemeContext=/*#__PURE__*/createContext();export var ThemeProvider=function ThemeProvider(_ref){var initialTheme=_ref.initialTheme,children=_ref.children;var _useState=useState(getInitialTheme),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],set_theme=_useState2[1];var rawSetTheme=function rawSetTheme(rawTheme){var root=window.document.documentElement;var isDark=rawTheme==='dark';root.classList.remove(isDark?\"light\":\"dark\");root.classList.add(isDark?\"dark\":\"light\");localStorage.setItem('color-theme',rawTheme);};if(initialTheme){rawSetTheme(initialTheme);}useEffect(function(){rawSetTheme(theme);},[theme]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme:theme,set_theme:set_theme},children:children});};","map":{"version":3,"sources":["C:/Users/Bisrat/Documents/code/morbik-food/src/ThemeContext.js"],"names":["React","useState","useEffect","createContext","getInitialTheme","window","localStorage","storedprefs","getItem","userMedia","matchMedia","matches","ThemeContext","ThemeProvider","initialTheme","children","theme","set_theme","rawSetTheme","rawTheme","root","document","documentElement","isDark","classList","remove","add","setItem"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA2BC,SAA3B,CAAuCC,aAAvC,KAA4D,OAA5D,C,2CAEE,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,GAAG,MAAOC,CAAAA,MAAP,GAAkB,WAAlB,EAAiCA,MAAM,CAACC,YAA3C,CAAwD,CACpD,GAAMC,CAAAA,WAAW,CAAGF,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4B,aAA5B,CAApB,CAEF,GAAG,MAAOD,CAAAA,WAAP,GAAuB,QAA1B,CAAqC,CAAE,MAAOA,CAAAA,WAAP,CAAqB,CAE5D,GAAME,CAAAA,SAAS,CAAGJ,MAAM,CAACK,UAAP,CAAkB,6BAAlB,CAAlB,CAEE,GAAGD,SAAS,CAACE,OAAb,CAAsB,CAAE,MAAO,MAAP,CAAgB,CAC3C,CAED,MAAO,OAAP,CAEH,CAbD,CAeA,MAAO,IAAMC,CAAAA,YAAY,cAAGT,aAAa,EAAlC,CACP,MAAO,IAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAgC,IAA7BC,CAAAA,YAA6B,MAA7BA,YAA6B,CAAdC,QAAc,MAAdA,QAAc,CACzD,cAA2Bd,QAAQ,CAACG,eAAD,CAAnC,wCAAOY,KAAP,eAAcC,SAAd,eAEC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAc,CAChC,GAAMC,CAAAA,IAAI,CAAGf,MAAM,CAACgB,QAAP,CAAgBC,eAA7B,CACA,GAAMC,CAAAA,MAAM,CAAGJ,QAAQ,GAAK,MAA5B,CACCC,IAAI,CAACI,SAAL,CAAeC,MAAf,CAAsBF,MAAM,CAAG,OAAH,CAAa,MAAzC,EACAH,IAAI,CAACI,SAAL,CAAeE,GAAf,CAAmBH,MAAM,CAAG,MAAH,CAAY,OAArC,EAEAjB,YAAY,CAACqB,OAAb,CAAqB,aAArB,CAAoCR,QAApC,EACF,CAPD,CASA,GAAGL,YAAH,CAAiB,CAAEI,WAAW,CAACJ,YAAD,CAAX,CAA2B,CAE9CZ,SAAS,CAAC,UAAM,CAAGgB,WAAW,CAACF,KAAD,CAAX,CAAoB,CAA9B,CAA+B,CAACA,KAAD,CAA/B,CAAT,CAEA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEA,KAAK,CAALA,KAAF,CAAUC,SAAS,CAATA,SAAV,CAA9B,UAAsDF,QAAtD,EADF,CAGJ,CAnBM","sourcesContent":["import React , {useState , useEffect , createContext } from 'react'\r\n\r\n  const getInitialTheme = () => {\r\n      if(typeof window !== 'undefined' && window.localStorage){\r\n          const storedprefs = window.localStorage.getItem(\"color-theme\");\r\n\r\n        if(typeof storedprefs === \"string\")  { return storedprefs; }\r\n\r\n        const userMedia = window.matchMedia('(prefers-color-scheme:dark)');\r\n\r\n          if(userMedia.matches) { return 'dark'; }\r\n      }\r\n\r\n      return 'light'\r\n\r\n  }\r\n\r\n  export const ThemeContext = createContext();\r\n  export const ThemeProvider = ({ initialTheme , children}) => {\r\n      const [theme, set_theme] = useState(getInitialTheme);\r\n\r\n       const rawSetTheme = (rawTheme) => {\r\n         const root = window.document.documentElement;\r\n         const isDark = rawTheme === 'dark';\r\n          root.classList.remove(isDark ? \"light\" : \"dark\");\r\n          root.classList.add(isDark ? \"dark\" : \"light\");\r\n\r\n          localStorage.setItem('color-theme', rawTheme);\r\n       };\r\n\r\n       if(initialTheme) { rawSetTheme(initialTheme) }\r\n\r\n       useEffect(() => {  rawSetTheme(theme) },[theme])\r\n      \r\n       return(\r\n         <ThemeContext.Provider value={{ theme , set_theme}} >{children}</ThemeContext.Provider>\r\n       );\r\n  }"]},"metadata":{},"sourceType":"module"}