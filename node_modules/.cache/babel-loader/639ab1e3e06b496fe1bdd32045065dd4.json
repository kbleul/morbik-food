{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/Bisrat/Documents/code/morbik-food/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"C:/Users/Bisrat/Documents/code/morbik-food/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Bisrat/Documents/code/morbik-food/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Bisrat\\\\Documents\\\\code\\\\morbik-food\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState,useEffect,useContext}from'react';import{Link}from\"react-router-dom\";import list from\"./food_subredditlist\";import list_drink from\"./drinks_subredditlist\";import axios from'axios';import loading from'./imgs/loading_.gif';import Footer from\"./fotter\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SubredditListPage=function SubredditListPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),reddit=_useState2[0],setreddit=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isfood=_useState4[0],set_isfood=_useState4[1];useEffect(function(){var temparr=[];var counter=0;var fetchsubreddit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(item){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios(\"https://www.reddit.com/r/\".concat(item,\"/.json\"));case 3:result=_context.sent;temparr.push(result.data.data.children[0].data);if(isfood){if(temparr.length===42){setreddit(temparr);temparr=[];}}else{if(temparr.length===19){setreddit(temparr);temparr=[];}}counter++;_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(\"Fetch \"+item+\" failed.\"+_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function fetchsubreddit(_x){return _ref.apply(this,arguments);};}();var _iterator=_createForOfIteratorHelper(isfood?list:list_drink),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;fetchsubreddit(item);}}catch(err){_iterator.e(err);}finally{_iterator.f();}},[isfood]);return/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 md:mt-16\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center mb-8 md:mb-8\",children:[/*#__PURE__*/_jsx(\"button\",{className:isfood?\"mt-20 md:ml-16 font-black underline\":\"mt-20 font-light hover:bg-amber-200 px-4 dark:hover:text-black\",onClick:function onClick(){setreddit([]);set_isfood(true);},children:\"Foods\"}),/*#__PURE__*/_jsx(\"button\",{className:isfood?\"mt-20  ml-4 md:ml-16 font-light hover:bg-amber-200 px-4\":\"mt-20 ml-4 md:ml-8 font-black underline px-4\",onClick:function onClick(){setreddit([]);set_isfood(false);},children:\"Drinks\"})]}),/*#__PURE__*/_jsx(\"section\",{children:isfood?/*#__PURE__*/_jsx(\"div\",{children:reddit.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex justify-center mt-12\",children:[/*#__PURE__*/_jsx(\"img\",{src:loading,alt:\"loading\",className:\"w-12 h-12\"}),\" \"]}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-10 md:gap-2 lg:gap-10 h-[74vh] overflow-y-scroll text-center \",children:reddit.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"even:bg-gray-100 dark:even:bg-gray-600 ml-[12%] w-3/4 md:ml-12 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100 dark:border-white  dark:hover:bg-black\",children:/*#__PURE__*/_jsx(Link,{to:\"/reddit/\".concat(item.subreddit),children:/*#__PURE__*/_jsxs(\"section\",{className:\"\",children:[/*#__PURE__*/_jsx(\"p\",{children:item.subreddit},item.subreddit),/*#__PURE__*/_jsx(\"p\",{className:\"overflow-hidden font-mono text-2xl md:text-xl lg:text-2xl leading-8\",children:item.subreddit_name_prefixed},item.subreddit_name_prefixed),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400\",children:item.subreddit_type},item.subreddit_type),/*#__PURE__*/_jsxs(\"p\",{className:\"\",children:[\"Subscribers - \",item.subreddit_subscribers]},item.id)]},item.permalink)},\"\".concat(item.subreddit_name_prefixed).concat(item.id))},\"\".concat(item.subreddit_name_prefixed).concat(item.id).concat(item.permalink));})})}):/*#__PURE__*/_jsx(\"div\",{children:reddit.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex justify-center mt-12\",children:[/*#__PURE__*/_jsx(\"img\",{src:loading,alt:\"loading\",className:\"w-12 h-12\"}),\" \"]}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-10 h-[74vh] overflow-y-scroll text-center \",children:reddit.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"ml-[12%] w-3/4 md:ml-12 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100 dark:border-white  dark:hover:bg-black\",children:/*#__PURE__*/_jsx(Link,{to:\"/reddit/\".concat(item.subreddit),children:/*#__PURE__*/_jsxs(\"section\",{className:\"\",children:[/*#__PURE__*/_jsx(\"p\",{children:item.subreddit},item.subreddit),/*#__PURE__*/_jsx(\"p\",{className:\"font-mono text-2xl leading-8\",children:item.subreddit_name_prefixed},item.subreddit_name_prefixed),/*#__PURE__*/_jsx(\"p\",{children:item.subreddit_type},item.subreddit_type),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-400\",children:[\"Subscribers - \",item.subreddit_subscribers]},item.id)]},item.permalink)},\"\".concat(item.subreddit_name_prefixed).concat(item.id))},\"\".concat(item.subreddit_name_prefixed).concat(item.id).concat(item.permalink));})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(Footer,{})})]});};export default SubredditListPage;","map":{"version":3,"sources":["C:/Users/Bisrat/Documents/code/morbik-food/src/subredditlistpage.js"],"names":["useState","useEffect","useContext","Link","list","list_drink","axios","loading","Footer","SubredditListPage","reddit","setreddit","isfood","set_isfood","temparr","counter","fetchsubreddit","item","result","push","data","children","length","console","log","map","subreddit","subreddit_name_prefixed","subreddit_type","subreddit_subscribers","id","permalink"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport list from \"./food_subredditlist\"\r\nimport list_drink from \"./drinks_subredditlist\"\r\nimport axios from 'axios'\r\nimport loading from './imgs/loading_.gif'\r\nimport Footer from \"./fotter\"\r\n\r\nconst SubredditListPage = () => {\r\n\r\n    const [reddit, setreddit] = useState([]);\r\n    const [isfood, set_isfood] = useState(true);\r\n \r\n    useEffect(() => {\r\n\r\n        let temparr = [];\r\n        let counter = 0;\r\n\r\n        const fetchsubreddit = async (item) => {\r\n            try {\r\n                const result = await axios(`https://www.reddit.com/r/${item}/.json`);\r\n\r\n                temparr.push(result.data.data.children[0].data);\r\n\r\n         if(isfood) {\r\n                if (temparr.length === 42) { setreddit(temparr); temparr = []; }\r\n         } else { if (temparr.length === 19) { setreddit(temparr); temparr = []; }}\r\n\r\n                counter++;\r\n\r\n            } catch (e) { console.log(\"Fetch \" + item + \" failed.\" + e) }\r\n \r\n    }\r\n    for (let item of isfood ? list : list_drink) { fetchsubreddit(item);  }\r\n\r\n    }, [isfood])\r\n\r\n\r\n    return (<div className=\"mt-8 md:mt-16\">\r\n        <div className=\"flex justify-center mb-8 md:mb-8\">\r\n            <button className={isfood ? \"mt-20 md:ml-16 font-black underline\" : \"mt-20 font-light hover:bg-amber-200 px-4 dark:hover:text-black\"} onClick={() => {setreddit([]); set_isfood(true)}}>Foods</button>\r\n            <button className={isfood ? \"mt-20  ml-4 md:ml-16 font-light hover:bg-amber-200 px-4\" : \"mt-20 ml-4 md:ml-8 font-black underline px-4\" } onClick={() =>{setreddit([]); set_isfood(false)}}>Drinks</button>\r\n        </div>\r\n        <section>{ isfood ? <div>\r\n            {reddit.length === 0 ? <div className=\"h-screen flex justify-center mt-12\"><img src={loading} alt=\"loading\" className=\"w-12 h-12\" /> </div> :\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-10 md:gap-2 lg:gap-10 h-[74vh] overflow-y-scroll text-center \">\r\n                    {reddit.map(item => (<div className=\"even:bg-gray-100 dark:even:bg-gray-600 ml-[12%] w-3/4 md:ml-12 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100 dark:border-white  dark:hover:bg-black\" key={`${item.subreddit_name_prefixed}${item.id}${item.permalink}`}>\r\n                        <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\r\n                            <section key={item.permalink} className=\"\">\r\n                                <p key={item.subreddit}>{item.subreddit}</p>\r\n                                <p key={item.subreddit_name_prefixed} className=\"overflow-hidden font-mono text-2xl md:text-xl lg:text-2xl leading-8\">{item.subreddit_name_prefixed}</p>\r\n                                <p className=\"text-gray-400\" key={item.subreddit_type}>{item.subreddit_type}</p>\r\n                                <p key={item.id} className=\"\">Subscribers - {item.subreddit_subscribers}</p>\r\n\r\n                            </section>\r\n                        </Link>\r\n                    </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n            }</div> :\r\n            <div>\r\n            {reddit.length === 0 ? <div className=\"h-screen flex justify-center mt-12\"><img src={loading} alt=\"loading\" className=\"w-12 h-12\" /> </div> :\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-10 h-[74vh] overflow-y-scroll text-center \">\r\n                    {reddit.map(item => (<div className=\"ml-[12%] w-3/4 md:ml-12 mb-8 border-2 border-black py-10 rounded-t-md rounded-r-full rounded-l-3xl hover:bg-yellow-100 dark:border-white  dark:hover:bg-black\" key={`${item.subreddit_name_prefixed}${item.id}${item.permalink}`}>\r\n                        <Link key={`${item.subreddit_name_prefixed}${item.id}`} to={`/reddit/${item.subreddit}`} >\r\n                            <section key={item.permalink} className=\"\">\r\n                                <p key={item.subreddit}>{item.subreddit}</p>\r\n                                <p key={item.subreddit_name_prefixed} className=\"font-mono text-2xl leading-8\">{item.subreddit_name_prefixed}</p>\r\n                                <p key={item.subreddit_type}>{item.subreddit_type}</p>\r\n                                <p key={item.id} className=\"text-gray-400\">Subscribers - {item.subreddit_subscribers}</p>\r\n\r\n                            </section>\r\n                        </Link>\r\n                    </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n            }</div>\r\n        }\r\n        </section>\r\n\r\n        <div className=\"\">\r\n        <Footer />\r\n      </div>\r\n    </div>)\r\n\r\n};\r\n\r\n\r\n\r\nexport default SubredditListPage"]},"metadata":{},"sourceType":"module"}