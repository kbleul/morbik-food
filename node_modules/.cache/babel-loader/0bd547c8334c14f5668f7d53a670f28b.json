{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  const [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n  const [showrecipe_page, set_showrecipe_page] = useState(false);\n  const [recipefor, set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n      set_catagories(result.data.meals);\n    } catch (e) {\n      console.log(\"Fetch catagory failed ! \" + e);\n    }\n  };\n\n  const getFoods_list = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${currentcatagory}`);\n      set_frontfood_list(result.data.meals);\n    } catch (e) {\n      console.log(`Fetch ${currentcatagory} based foods failed !  ` + e);\n    }\n  };\n\n  useEffect(() => {\n    getCatagories();\n  }, []);\n  useEffect(() => {\n    getFoods_list();\n  }, [currentcatagory]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: catagories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          set_currentcatagory(item.strCategory);\n          V;\n        },\n        children: item.strCategory\n      }, item.strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this), showrecipe_page ? /*#__PURE__*/_jsxDEV(RecipePage, {\n      foodid: recipefor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid grid-cols-3 gap-2\",\n      children: frontfood_list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          set_recipefor(item.idMeal);\n          C;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.strMealThumb,\n          alt: item.strMeal\n        }, item.strMealThumb, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.strMeal\n        }, item.strMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }, this)]\n      }, item.idMeal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"8NAKZZSUnBr1WDv6DAo46c+hQGA=\");\n\n_c = Main;\n\nconst RecipePage = _ref => {\n  _s2();\n\n  let {\n    foodid\n  } = _ref;\n  const [recipedata, set_recipedata] = useState([]);\n  const [recipetext, set_recipetext] = useState([]);\n  const [ingredients, set_ingridients] = useState([]);\n  const [ingredientamount, set_ingredientsamount] = useState([]);\n\n  const getRecipe = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${foodid}`);\n      set_recipedata(result.data.meals);\n      let temparr = result.data.meals[0].strInstructions.split(\".\");\n      set_recipetext(temparr);\n      temparr = [];\n      let temparr_two = [];\n\n      for (let i = 1; i < 21; i++) {\n        let str = \"strIngredient\" + i;\n        let str2 = \"strMeasure\" + i;\n        temparr.push(result.data.meals[0][str]);\n        temparr_two.push(result.data.meals[0][str2]);\n      }\n\n      set_ingridients(temparr);\n      set_ingredientsamount(temparr_two);\n      temparr = [];\n      temparr_two = [];\n    } catch (e) {\n      console.log(`Fetch recipe for ${foodid} failed !  ` + e);\n    }\n  };\n\n  useEffect(() => {\n    getRecipe();\n  }, []);\n  useEffect(() => {\n    console.log(ingredients);\n  }, [ingredients]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: recipedata.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item.strMeal\n      }, item.strMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.strMealThumb,\n        alt: item.strMeal\n      }, item.strMealThumb, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), recipetext.map(steps => steps !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"- \", steps]\n      }, steps, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 55\n      }, this)), ingredientamount.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ingredients.map(obj => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"-\", ingredientamount[ingredients.indexOf(obj)], \" \", obj]\n        }, `${item.idMeal}${obj} ${item.idMeal}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 74\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 43\n      }, this)]\n    }, `${item.strMeal} ${item.strMeal} ${item.idMeal}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 11\n  }, this);\n};\n\n_s2(RecipePage, \"H3NDOplfNz/TJDLo88qLi7nxlkw=\");\n\n_c2 = RecipePage;\nexport default Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"RecipePage\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js"],"names":["React","useState","useEffect","axios","Main","catagories","set_catagories","frontfood_list","set_frontfood_list","currentcatagory","set_currentcatagory","showrecipe_page","set_showrecipe_page","recipefor","set_recipefor","getCatagories","result","data","meals","e","console","log","getFoods_list","map","item","strCategory","V","idMeal","C","strMealThumb","strMeal","RecipePage","foodid","recipedata","set_recipedata","recipetext","set_recipetext","ingredients","set_ingridients","ingredientamount","set_ingredientsamount","getRecipe","temparr","strInstructions","split","temparr_two","i","str","str2","push","steps","length","obj","indexOf"],"mappings":"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","sourcesContent":["import React , {useState , useEffect} from 'react'\nimport axios from 'axios'\n\nconst Main = () => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  const [currentcatagory, set_currentcatagory] = useState(\"Beef\");\n  const [showrecipe_page , set_showrecipe_page] = useState(false);\n  const [recipefor , set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n     try {\n    const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n    set_catagories(result.data.meals)\n\n     }catch(e) { console.log(\"Fetch catagory failed ! \" + e)}\n  }\n\n  const getFoods_list = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${currentcatagory}`)\n      set_frontfood_list(result.data.meals)\n\n        \n    }catch(e) { console.log(`Fetch ${currentcatagory} based foods failed !  ` + e)}\n\n  }\n\n\n  useEffect(() => {  getCatagories();  },[])\n\n  useEffect(() => { getFoods_list(); },[currentcatagory])\n\n  return (\n    <article>\n       <section>\n        {\n          catagories.map(item => (\n            <button key={item.strCategory} onClick={() =>{ set_currentcatagory(item.strCategory); V}}>{item.strCategory}</button>\n          ))\n        }\n        </section>\n\n  { showrecipe_page ? <RecipePage foodid={recipefor} /> :\n     <section className=\"grid grid-cols-3 gap-2\">\n         {\n           frontfood_list.map(item => (\n             <div key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); C}}>\n             <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n             <p key={item.strMeal}>{item.strMeal}</p>\n\n             </div>\n           ))\n         }\n        </section>}\n    </article>\n  )\n}\n\nconst RecipePage = ({foodid}) => {\n\n  const [recipedata, set_recipedata] = useState([]);\n  const [recipetext, set_recipetext] = useState([]);\n  const [ingredients , set_ingridients] = useState([]);\n  const [ingredientamount , set_ingredientsamount] = useState([]);\n\n\n  const getRecipe = async () => {\n\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${foodid}`)\n\n      set_recipedata(result.data.meals)\n      let temparr = result.data.meals[0].strInstructions.split(\".\"); \n\n      set_recipetext(temparr);\n\n      temparr= [];\n     let temparr_two = [];\n\n          for(let i=1; i<21 ; i++)\n          { \n            let str = \"strIngredient\" + i;\n            let str2 = \"strMeasure\" + i;\n              temparr.push(result.data.meals[0][str])  \n              temparr_two.push(result.data.meals[0][str2])  \n          }\n\n          set_ingridients(temparr);\n          set_ingredientsamount(temparr_two);\n\n               temparr =[];  temparr_two =[];\n        \n\n    }catch(e) { console.log(`Fetch recipe for ${foodid} failed !  ` + e)}\n \n  }\n\n  useEffect(() => {  getRecipe()  },[])\n  useEffect(() => { console.log(ingredients)},[ingredients])\n\n  return (<section>\n    {\n      recipedata.map(item => (\n        <div key={`${item.strMeal} ${item.strMeal} ${item.idMeal}`}>\n          <h4 key={item.strMeal}>{item.strMeal}</h4>\n          <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n          { recipetext.map(steps => (steps !== \"\" &&  <p key={steps}>- {steps}</p>   )) }\n\n          { ingredientamount.length >0 && <div>{ ingredients.map(obj => (<p key={`${item.idMeal}${obj} ${item.idMeal}`}>-{ingredientamount[ingredients.indexOf(obj)] } {obj}</p>   )) }\n        </div>\n      }\n\n        </div>\n      ))\n    }\n    </section>)\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}