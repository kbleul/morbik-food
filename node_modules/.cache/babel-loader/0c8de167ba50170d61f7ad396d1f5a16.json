{"ast":null,"code":"var _jsxFileName = \"/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RecipePage from './recipepage';\nimport { Link } from \"react-router-dom\";\nimport loading from \"./imgs/loading_.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = _ref => {\n  _s();\n\n  let {\n    navChoice,\n    setChoice,\n    choicetype,\n    set_choicetype,\n    togglerecipe_page,\n    set_togglerecipe_page\n  } = _ref;\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n  const [recipefor, set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n      set_catagories(result.data.meals);\n    } catch (e) {\n      console.log(\"Fetch catagory failed ! \" + e);\n    }\n  };\n\n  const getFoods_list = async () => {\n    try {\n      if (choicetype === \"c\") {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${navChoice}`);\n\n        if (result.data.meals == null) {\n          set_frontfood_list([\"No Food Found Error\"]);\n        } else {\n          set_frontfood_list(result.data.meals);\n        }\n      } else if (choicetype === \"a\") {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${navChoice}`);\n\n        if (result.data.meals == null) {\n          set_frontfood_list([{\n            \"idMeal\": \"No Food Found Error\"\n          }]);\n        } else {\n          set_frontfood_list(result.data.meals);\n        }\n      } else {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${navChoice}`);\n\n        if (result.data.meals == null) {\n          set_frontfood_list([\"No Food Found Error\"]);\n        } else {\n          set_frontfood_list(result.data.meals);\n        }\n      }\n    } catch (e) {\n      console.log(`Fetch ${navChoice} based foods failed !  ` + e);\n    }\n  };\n\n  useEffect(() => {\n    getCatagories();\n  }, []);\n  useEffect(() => {\n    getFoods_list();\n  }, [navChoice]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"ml-4 mt-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \" \",\n      children: catagories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" text-xs font-black bg-amber-400 border-0 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 dark:text-black \",\n        onClick: () => {\n          set_choicetype(\"c\");\n          setChoice(item.strCategory);\n          set_togglerecipe_page(false);\n        },\n        children: item.strCategory\n      }, item.strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 flex justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"font-extrabold underline\",\n        children: \"Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/drinks`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-8 font-light hover:bg-amber-200 px-4 dark:hover:text-black\",\n          children: \"Drinks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), togglerecipe_page ? /*#__PURE__*/_jsxDEV(RecipePage, {\n      foodid: recipefor,\n      similarfoods: frontfood_list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: frontfood_list.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loading,\n          alt: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"grid grid-cols-3 gap-2 m-16 ml-10\",\n        children: frontfood_list[0] === \"No Food Found Error\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No available food for this ingrident.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 60\n        }, this) : frontfood_list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hover:brightness-90\",\n          onClick: () => {\n            set_recipefor(item.idMeal);\n            set_togglerecipe_page(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.strMealThumb,\n            alt: item.strMeal\n          }, item.strMealThumb, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-light text-center\",\n            children: item.strMeal\n          }, item.strMeal, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, item.idMeal, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"C3J//WIZR9sq17HE+Mj38W0LciA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/danu/Desktop/kb/Code projects/react/morbik-food/src/main.js"],"names":["React","useState","useEffect","axios","RecipePage","Link","loading","Main","navChoice","setChoice","choicetype","set_choicetype","togglerecipe_page","set_togglerecipe_page","catagories","set_catagories","frontfood_list","set_frontfood_list","recipefor","set_recipefor","getCatagories","result","data","meals","e","console","log","getFoods_list","map","item","strCategory","length","idMeal","strMealThumb","strMeal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport RecipePage from './recipepage'\nimport { Link } from \"react-router-dom\"\nimport loading from \"./imgs/loading_.gif\"\n\n\nconst Main = ({ navChoice, setChoice, choicetype, set_choicetype, togglerecipe_page, set_togglerecipe_page }) => {\n  const [catagories, set_catagories] = useState([]);\n  const [frontfood_list, set_frontfood_list] = useState([]);\n\n  const [recipefor, set_recipefor] = useState(\"\");\n\n  const getCatagories = async () => {\n    try {\n      const result = await axios(`https://www.themealdb.com/api/json/v1/1/list.php?c=list`);\n      set_catagories(result.data.meals)\n\n    } catch (e) { console.log(\"Fetch catagory failed ! \" + e) }\n  }\n\n  const getFoods_list = async () => {\n    try {\n      if (choicetype === \"c\") {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${navChoice}`)\n        if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\n        else { set_frontfood_list(result.data.meals) }\n\n      }\n      else if (choicetype === \"a\") {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${navChoice}`)\n        if (result.data.meals == null) { set_frontfood_list([{ \"idMeal\": \"No Food Found Error\" }]) }\n        else { set_frontfood_list(result.data.meals) }\n\n      }\n      else {\n        const result = await axios(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${navChoice}`)\n        if (result.data.meals == null) { set_frontfood_list([\"No Food Found Error\"]) }\n        else { set_frontfood_list(result.data.meals) }\n\n      }\n\n    } catch (e) { console.log(`Fetch ${navChoice} based foods failed !  ` + e) }\n\n  }\n\n\n  useEffect(() => { getCatagories(); }, [])\n\n  useEffect(() => { getFoods_list(); }, [navChoice])\n\n\n\n  return (\n    <article className=\"ml-4 mt-16\">\n      <section className=\" \">\n        {\n          catagories.map(item => (\n            <button className=\" text-xs font-black bg-amber-400 border-0 rounded-full px-6 py-2 mb-2 ml-4  hover:bg-amber-200 dark:text-black \" key={item.strCategory} onClick={() => { set_choicetype(\"c\"); setChoice(item.strCategory); set_togglerecipe_page(false); }}>{item.strCategory}</button>\n          ))\n        }\n      </section>\n\n      <div className=\"mt-8 flex justify-center\">\n          <button className=\"font-extrabold underline\">Foods</button>\n\n        <Link to={`/drinks`} >\n          <button className=\"ml-8 font-light hover:bg-amber-200 px-4 dark:hover:text-black\">Drinks</button>\n        </Link>\n\n\n      </div>\n\n      {togglerecipe_page ? <RecipePage foodid={recipefor} similarfoods={frontfood_list} /> :\n        <div>\n        \n          {frontfood_list.length === 0 ? <div className=\"h-screen flex justify-center\"><img src={loading} alt=\"loading\" /></div> :\n          <section className=\"grid grid-cols-3 gap-2 m-16 ml-10\">\n            {frontfood_list[0] === \"No Food Found Error\" ? <div><p>No available food for this ingrident.</p></div> :\n              frontfood_list.map(item => (\n                <div className=\"hover:brightness-90\" key={item.idMeal} onClick={() => { set_recipefor(item.idMeal); set_togglerecipe_page(true); }}>\n                  <img key={item.strMealThumb} src={item.strMealThumb} alt={item.strMeal} />\n                  <p className=\"font-light text-center\" key={item.strMeal}>{item.strMeal}</p>\n                </div>\n              ))\n            }\n          </section>\n         }\n      </div>\n      }\n    </article>\n  )\n}\n\n\nexport default Main\n\n"]},"metadata":{},"sourceType":"module"}